{"id":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591206076000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000},{"name":"../../display/canvas/CanvasPool","loc":{"line":7,"column":25},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/display/canvas/CanvasPool.js"},{"name":"../../display/color/Color","loc":{"line":8,"column":20},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/display/color/Color.js"},{"name":"../../utils/object/GetFastValue","loc":{"line":9,"column":27},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/utils/object/GetFastValue.js"}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar CanvasPool = require('../../display/canvas/CanvasPool');\r\nvar Color = require('../../display/color/Color');\r\nvar GetFastValue = require('../../utils/object/GetFastValue');\r\n\r\n/**\r\n * Takes a snapshot of an area from the current frame displayed by a WebGL canvas.\r\n * \r\n * This is then copied to an Image object. When this loads, the results are sent\r\n * to the callback provided in the Snapshot Configuration object.\r\n *\r\n * @function Phaser.Renderer.Snapshot.WebGL\r\n * @since 3.0.0\r\n *\r\n * @param {HTMLCanvasElement} sourceCanvas - The canvas to take a snapshot of.\r\n * @param {Phaser.Types.Renderer.Snapshot.SnapshotState} config - The snapshot configuration object.\r\n */\r\nvar WebGLSnapshot = function (sourceCanvas, config)\r\n{\r\n    var gl = sourceCanvas.getContext('experimental-webgl');\r\n\r\n    var callback = GetFastValue(config, 'callback');\r\n    var type = GetFastValue(config, 'type', 'image/png');\r\n    var encoderOptions = GetFastValue(config, 'encoder', 0.92);\r\n    var x = GetFastValue(config, 'x', 0);\r\n    var y = GetFastValue(config, 'y', 0);\r\n\r\n    var getPixel = GetFastValue(config, 'getPixel', false);\r\n\r\n    var isFramebuffer = GetFastValue(config, 'isFramebuffer', false);\r\n\r\n    var bufferWidth = (isFramebuffer) ? GetFastValue(config, 'bufferWidth', 1) : gl.drawingBufferWidth;\r\n    var bufferHeight = (isFramebuffer) ? GetFastValue(config, 'bufferHeight', 1) : gl.drawingBufferHeight;\r\n\r\n    if (getPixel)\r\n    {\r\n        var pixel = new Uint8Array(4);\r\n\r\n        var destY = (isFramebuffer) ? y : bufferHeight - y;\r\n\r\n        gl.readPixels(x, destY, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixel);\r\n\r\n        callback.call(null, new Color(pixel[0], pixel[1], pixel[2], pixel[3] / 255));\r\n    }\r\n    else\r\n    {\r\n        var width = GetFastValue(config, 'width', bufferWidth);\r\n        var height = GetFastValue(config, 'height', bufferHeight);\r\n\r\n        var total = width * height * 4;\r\n\r\n        var pixels = new Uint8Array(total);\r\n\r\n        gl.readPixels(x, bufferHeight - y - height, width, height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\r\n    \r\n        var canvas = CanvasPool.createWebGL(this, width, height);\r\n        var ctx = canvas.getContext('2d');\r\n\r\n        var imageData = ctx.getImageData(0, 0, width, height);\r\n    \r\n        var data = imageData.data;\r\n\r\n        for (var py = 0; py < height; py++)\r\n        {\r\n            for (var px = 0; px < width; px++)\r\n            {\r\n                var sourceIndex = ((height - py) * width + px) * 4;\r\n                var destIndex = (isFramebuffer) ? total - ((py * width + (width - px)) * 4) : (py * width + px) * 4;\r\n\r\n                data[destIndex + 0] = pixels[sourceIndex + 0];\r\n                data[destIndex + 1] = pixels[sourceIndex + 1];\r\n                data[destIndex + 2] = pixels[sourceIndex + 2];\r\n                data[destIndex + 3] = pixels[sourceIndex + 3];\r\n            }\r\n        }\r\n\r\n        ctx.putImageData(imageData, 0, 0);\r\n    \r\n        var image = new Image();\r\n\r\n        image.onerror = function ()\r\n        {\r\n            callback.call(null);\r\n\r\n            CanvasPool.remove(canvas);\r\n        };\r\n\r\n        image.onload = function ()\r\n        {\r\n            callback.call(null, image);\r\n\r\n            CanvasPool.remove(canvas);\r\n        };\r\n\r\n        image.src = canvas.toDataURL(type, encoderOptions);\r\n    }\r\n};\r\n\r\nmodule.exports = WebGLSnapshot;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}}],"sources":{"../node_modules/phaser/src/renderer/snapshot/WebGLSnapshot.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar CanvasPool = require('../../display/canvas/CanvasPool');\r\nvar Color = require('../../display/color/Color');\r\nvar GetFastValue = require('../../utils/object/GetFastValue');\r\n\r\n/**\r\n * Takes a snapshot of an area from the current frame displayed by a WebGL canvas.\r\n * \r\n * This is then copied to an Image object. When this loads, the results are sent\r\n * to the callback provided in the Snapshot Configuration object.\r\n *\r\n * @function Phaser.Renderer.Snapshot.WebGL\r\n * @since 3.0.0\r\n *\r\n * @param {HTMLCanvasElement} sourceCanvas - The canvas to take a snapshot of.\r\n * @param {Phaser.Types.Renderer.Snapshot.SnapshotState} config - The snapshot configuration object.\r\n */\r\nvar WebGLSnapshot = function (sourceCanvas, config)\r\n{\r\n    var gl = sourceCanvas.getContext('experimental-webgl');\r\n\r\n    var callback = GetFastValue(config, 'callback');\r\n    var type = GetFastValue(config, 'type', 'image/png');\r\n    var encoderOptions = GetFastValue(config, 'encoder', 0.92);\r\n    var x = GetFastValue(config, 'x', 0);\r\n    var y = GetFastValue(config, 'y', 0);\r\n\r\n    var getPixel = GetFastValue(config, 'getPixel', false);\r\n\r\n    var isFramebuffer = GetFastValue(config, 'isFramebuffer', false);\r\n\r\n    var bufferWidth = (isFramebuffer) ? GetFastValue(config, 'bufferWidth', 1) : gl.drawingBufferWidth;\r\n    var bufferHeight = (isFramebuffer) ? GetFastValue(config, 'bufferHeight', 1) : gl.drawingBufferHeight;\r\n\r\n    if (getPixel)\r\n    {\r\n        var pixel = new Uint8Array(4);\r\n\r\n        var destY = (isFramebuffer) ? y : bufferHeight - y;\r\n\r\n        gl.readPixels(x, destY, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixel);\r\n\r\n        callback.call(null, new Color(pixel[0], pixel[1], pixel[2], pixel[3] / 255));\r\n    }\r\n    else\r\n    {\r\n        var width = GetFastValue(config, 'width', bufferWidth);\r\n        var height = GetFastValue(config, 'height', bufferHeight);\r\n\r\n        var total = width * height * 4;\r\n\r\n        var pixels = new Uint8Array(total);\r\n\r\n        gl.readPixels(x, bufferHeight - y - height, width, height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\r\n    \r\n        var canvas = CanvasPool.createWebGL(this, width, height);\r\n        var ctx = canvas.getContext('2d');\r\n\r\n        var imageData = ctx.getImageData(0, 0, width, height);\r\n    \r\n        var data = imageData.data;\r\n\r\n        for (var py = 0; py < height; py++)\r\n        {\r\n            for (var px = 0; px < width; px++)\r\n            {\r\n                var sourceIndex = ((height - py) * width + px) * 4;\r\n                var destIndex = (isFramebuffer) ? total - ((py * width + (width - px)) * 4) : (py * width + px) * 4;\r\n\r\n                data[destIndex + 0] = pixels[sourceIndex + 0];\r\n                data[destIndex + 1] = pixels[sourceIndex + 1];\r\n                data[destIndex + 2] = pixels[sourceIndex + 2];\r\n                data[destIndex + 3] = pixels[sourceIndex + 3];\r\n            }\r\n        }\r\n\r\n        ctx.putImageData(imageData, 0, 0);\r\n    \r\n        var image = new Image();\r\n\r\n        image.onerror = function ()\r\n        {\r\n            callback.call(null);\r\n\r\n            CanvasPool.remove(canvas);\r\n        };\r\n\r\n        image.onload = function ()\r\n        {\r\n            callback.call(null, image);\r\n\r\n            CanvasPool.remove(canvas);\r\n        };\r\n\r\n        image.src = canvas.toDataURL(type, encoderOptions);\r\n    }\r\n};\r\n\r\nmodule.exports = WebGLSnapshot;\r\n"},"lineCount":105}},"error":null,"hash":"2db38877fad26651b1cc31b97ae4f583","cacheData":{"env":{}}}