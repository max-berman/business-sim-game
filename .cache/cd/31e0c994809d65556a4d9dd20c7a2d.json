{"id":"nImP","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000},{"name":"./BitmapText","loc":{"line":7,"column":25},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapText.js"},{"name":"../../GameObjectFactory","loc":{"line":8,"column":32},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/gameobjects/GameObjectFactory.js"}],"generated":{"js":"var e=require(\"./BitmapText\"),t=require(\"../../GameObjectFactory\");t.register(\"bitmapText\",function(t,i,r,a,s,n){return this.displayList.add(new e(this.scene,t,i,r,a,s,n))});"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","original":{"line":7,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","original":{"line":7,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","original":{"line":7,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","original":{"line":7,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","original":{"line":8,"column":0},"generated":{"line":1,"column":30}},{"source":"../node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","original":{"line":8,"column":0},"generated":{"line":1,"column":32}},{"source":"../node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","original":{"line":8,"column":0},"generated":{"line":1,"column":40}},{"source":"../node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","original":{"line":47,"column":0},"generated":{"line":1,"column":67}},{"source":"../node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","original":{"line":47,"column":0},"generated":{"line":1,"column":69}},{"source":"../node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","original":{"line":47,"column":0},"generated":{"line":1,"column":78}},{"source":"../node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","original":{"line":47,"column":0},"generated":{"line":1,"column":91}},{"source":"../node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","original":{"line":47,"column":0},"generated":{"line":1,"column":100}},{"source":"../node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","original":{"line":47,"column":0},"generated":{"line":1,"column":102}},{"source":"../node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","original":{"line":47,"column":0},"generated":{"line":1,"column":104}},{"source":"../node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","original":{"line":47,"column":0},"generated":{"line":1,"column":106}},{"source":"../node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","original":{"line":47,"column":0},"generated":{"line":1,"column":108}},{"source":"../node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","original":{"line":47,"column":0},"generated":{"line":1,"column":110}},{"source":"../node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","original":{"line":49,"column":0},"generated":{"line":1,"column":113}},{"source":"../node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","original":{"line":49,"column":0},"generated":{"line":1,"column":120}},{"source":"../node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","original":{"line":49,"column":0},"generated":{"line":1,"column":125}},{"source":"../node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","original":{"line":49,"column":0},"generated":{"line":1,"column":137}},{"source":"../node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","original":{"line":49,"column":0},"generated":{"line":1,"column":141}},{"source":"../node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","original":{"line":49,"column":0},"generated":{"line":1,"column":145}},{"source":"../node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","original":{"line":49,"column":0},"generated":{"line":1,"column":147}},{"source":"../node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","original":{"line":49,"column":0},"generated":{"line":1,"column":152}},{"source":"../node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","original":{"line":49,"column":0},"generated":{"line":1,"column":158}},{"source":"../node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","original":{"line":49,"column":0},"generated":{"line":1,"column":160}},{"source":"../node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","original":{"line":49,"column":0},"generated":{"line":1,"column":162}},{"source":"../node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","original":{"line":49,"column":0},"generated":{"line":1,"column":164}},{"source":"../node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","original":{"line":49,"column":0},"generated":{"line":1,"column":166}},{"source":"../node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js","original":{"line":49,"column":0},"generated":{"line":1,"column":168}}],"sources":{"../node_modules/phaser/src/gameobjects/bitmaptext/static/BitmapTextFactory.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar BitmapText = require('./BitmapText');\r\nvar GameObjectFactory = require('../../GameObjectFactory');\r\n\r\n/**\r\n * Creates a new Bitmap Text Game Object and adds it to the Scene.\r\n * \r\n * BitmapText objects work by taking a texture file and an XML or JSON file that describes the font structure.\r\n * \r\n * During rendering for each letter of the text is rendered to the display, proportionally spaced out and aligned to\r\n * match the font structure.\r\n * \r\n * BitmapText objects are less flexible than Text objects, in that they have less features such as shadows, fills and the ability\r\n * to use Web Fonts, however you trade this flexibility for rendering speed. You can also create visually compelling BitmapTexts by\r\n * processing the font texture in an image editor, applying fills and any other effects required.\r\n *\r\n * To create multi-line text insert \\r, \\n or \\r\\n escape codes into the text string.\r\n *\r\n * To create a BitmapText data files you need a 3rd party app such as:\r\n *\r\n * BMFont (Windows, free): http://www.angelcode.com/products/bmfont/\r\n * Glyph Designer (OS X, commercial): http://www.71squared.com/en/glyphdesigner\r\n * Littera (Web-based, free): http://kvazars.com/littera/\r\n *\r\n * For most use cases it is recommended to use XML. If you wish to use JSON, the formatting should be equal to the result of\r\n * converting a valid XML file through the popular X2JS library. An online tool for conversion can be found here: http://codebeautify.org/xmltojson\r\n *\r\n * Note: This method will only be available if the Bitmap Text Game Object has been built into Phaser.\r\n *\r\n * @method Phaser.GameObjects.GameObjectFactory#bitmapText\r\n * @since 3.0.0\r\n *\r\n * @param {number} x - The x position of the Game Object.\r\n * @param {number} y - The y position of the Game Object.\r\n * @param {string} font - The key of the font to use from the BitmapFont cache.\r\n * @param {(string|string[])} [text] - The string, or array of strings, to be set as the content of this Bitmap Text.\r\n * @param {number} [size] - The font size to set.\r\n * @param {integer} [align=0] - The alignment of the text in a multi-line BitmapText object.\r\n *\r\n * @return {Phaser.GameObjects.BitmapText} The Game Object that was created.\r\n */\r\nGameObjectFactory.register('bitmapText', function (x, y, font, text, size, align)\r\n{\r\n    return this.displayList.add(new BitmapText(this.scene, x, y, font, text, size, align));\r\n});\r\n\r\n//  When registering a factory function 'this' refers to the GameObjectFactory context.\r\n//\r\n//  There are several properties available to use:\r\n//\r\n//  this.scene - a reference to the Scene that owns the GameObjectFactory\r\n//  this.displayList - a reference to the Display List the Scene owns\r\n//  this.updateList - a reference to the Update List the Scene owns\r\n"},"lineCount":null}},"error":null,"hash":"ed9a47ace9ed2f27919bdd932100fe5b","cacheData":{"env":{}}}