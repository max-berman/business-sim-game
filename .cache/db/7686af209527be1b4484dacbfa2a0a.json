{"id":"R1sC","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000}],"generated":{"js":"var e=function(e,n){if(!(n>=e.length)){for(var r=e.length-1,t=e[n],l=n;l<r;l++)e[l]=e[l+1];return e.length=r,t}};module.exports=e;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":19,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":19,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":19,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":19,"column":0},"generated":{"line":1,"column":15}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":19,"column":0},"generated":{"line":1,"column":17}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":21,"column":0},"generated":{"line":1,"column":20}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":21,"column":0},"generated":{"line":1,"column":25}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":21,"column":0},"generated":{"line":1,"column":28}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":21,"column":0},"generated":{"line":1,"column":30}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":21,"column":0},"generated":{"line":1,"column":38}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":30,"column":0},"generated":{"line":1,"column":39}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":26,"column":0},"generated":{"line":1,"column":43}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":26,"column":0},"generated":{"line":1,"column":47}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":26,"column":0},"generated":{"line":1,"column":49}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":26,"column":0},"generated":{"line":1,"column":51}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":26,"column":0},"generated":{"line":1,"column":58}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":28,"column":0},"generated":{"line":1,"column":60}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":28,"column":0},"generated":{"line":1,"column":62}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":28,"column":0},"generated":{"line":1,"column":64}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":30,"column":0},"generated":{"line":1,"column":67}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":30,"column":0},"generated":{"line":1,"column":69}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":30,"column":0},"generated":{"line":1,"column":71}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":30,"column":0},"generated":{"line":1,"column":73}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":30,"column":0},"generated":{"line":1,"column":75}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":32,"column":0},"generated":{"line":1,"column":79}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":32,"column":0},"generated":{"line":1,"column":81}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":32,"column":0},"generated":{"line":1,"column":84}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":32,"column":0},"generated":{"line":1,"column":86}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":32,"column":0},"generated":{"line":1,"column":88}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":37,"column":0},"generated":{"line":1,"column":91}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":35,"column":0},"generated":{"line":1,"column":98}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":35,"column":0},"generated":{"line":1,"column":100}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":35,"column":0},"generated":{"line":1,"column":107}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":37,"column":0},"generated":{"line":1,"column":109}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":40,"column":0},"generated":{"line":1,"column":113}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":40,"column":0},"generated":{"line":1,"column":120}},{"source":"../node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":40,"column":0},"generated":{"line":1,"column":128}}],"sources":{"../node_modules/phaser/src/utils/array/SpliceOne.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Removes a single item from an array and returns it without creating gc, like the native splice does.\r\n * Based on code by Mike Reinstein.\r\n *\r\n * @function Phaser.Utils.Array.SpliceOne\r\n * @since 3.0.0\r\n *\r\n * @param {array} array - The array to splice from.\r\n * @param {integer} index - The index of the item which should be spliced.\r\n *\r\n * @return {*} The item which was spliced (removed).\r\n */\r\nvar SpliceOne = function (array, index)\r\n{\r\n    if (index >= array.length)\r\n    {\r\n        return;\r\n    }\r\n\r\n    var len = array.length - 1;\r\n\r\n    var item = array[index];\r\n\r\n    for (var i = index; i < len; i++)\r\n    {\r\n        array[i] = array[i + 1];\r\n    }\r\n\r\n    array.length = len;\r\n\r\n    return item;\r\n};\r\n\r\nmodule.exports = SpliceOne;\r\n"},"lineCount":null}},"error":null,"hash":"e2b88c08772b1a5a33bc3530d8dc526a","cacheData":{"env":{}}}