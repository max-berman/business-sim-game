{"id":"FIiC","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000},{"name":"./ComponentToHex","loc":{"line":7,"column":29},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/display/color/RGBToString.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/display/color/ComponentToHex.js"}],"generated":{"js":"var o=require(\"./ComponentToHex\"),e=function(e,r,i,n,t){return void 0===n&&(n=255),void 0===t&&(t=\"#\"),\"#\"===t?\"#\"+((1<<24)+(e<<16)+(r<<8)+i).toString(16).slice(1):\"0x\"+o(n)+o(e)+o(r)+o(i)};module.exports=e;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":7,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":7,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":7,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":7,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":23,"column":0},"generated":{"line":1,"column":34}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":23,"column":0},"generated":{"line":1,"column":36}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":23,"column":0},"generated":{"line":1,"column":45}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":23,"column":0},"generated":{"line":1,"column":47}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":23,"column":0},"generated":{"line":1,"column":49}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":23,"column":0},"generated":{"line":1,"column":51}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":23,"column":0},"generated":{"line":1,"column":53}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":28,"column":0},"generated":{"line":1,"column":56}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":25,"column":0},"generated":{"line":1,"column":68}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":25,"column":0},"generated":{"line":1,"column":72}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":25,"column":0},"generated":{"line":1,"column":76}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":25,"column":0},"generated":{"line":1,"column":78}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":26,"column":0},"generated":{"line":1,"column":88}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":26,"column":0},"generated":{"line":1,"column":92}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":26,"column":0},"generated":{"line":1,"column":96}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":26,"column":0},"generated":{"line":1,"column":98}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":28,"column":0},"generated":{"line":1,"column":103}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":28,"column":0},"generated":{"line":1,"column":109}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":30,"column":0},"generated":{"line":1,"column":111}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":30,"column":0},"generated":{"line":1,"column":117}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":30,"column":0},"generated":{"line":1,"column":120}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":30,"column":0},"generated":{"line":1,"column":125}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":30,"column":0},"generated":{"line":1,"column":128}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":30,"column":0},"generated":{"line":1,"column":133}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":30,"column":0},"generated":{"line":1,"column":136}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":30,"column":0},"generated":{"line":1,"column":139}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":30,"column":0},"generated":{"line":1,"column":142}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":30,"column":0},"generated":{"line":1,"column":151}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":30,"column":0},"generated":{"line":1,"column":155}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":30,"column":0},"generated":{"line":1,"column":161}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":34,"column":0},"generated":{"line":1,"column":164}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":34,"column":0},"generated":{"line":1,"column":169}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":34,"column":0},"generated":{"line":1,"column":171}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":34,"column":0},"generated":{"line":1,"column":174}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":34,"column":0},"generated":{"line":1,"column":176}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":34,"column":0},"generated":{"line":1,"column":179}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":34,"column":0},"generated":{"line":1,"column":181}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":34,"column":0},"generated":{"line":1,"column":184}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":34,"column":0},"generated":{"line":1,"column":186}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":38,"column":0},"generated":{"line":1,"column":190}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":38,"column":0},"generated":{"line":1,"column":197}},{"source":"../node_modules/phaser/src/display/color/RGBToString.js","original":{"line":38,"column":0},"generated":{"line":1,"column":205}}],"sources":{"../node_modules/phaser/src/display/color/RGBToString.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar ComponentToHex = require('./ComponentToHex');\r\n\r\n/**\r\n * Converts the color values into an HTML compatible color string, prefixed with either `#` or `0x`.\r\n *\r\n * @function Phaser.Display.Color.RGBToString\r\n * @since 3.0.0\r\n *\r\n * @param {integer} r - The red color value. A number between 0 and 255.\r\n * @param {integer} g - The green color value. A number between 0 and 255.\r\n * @param {integer} b - The blue color value. A number between 0 and 255.\r\n * @param {integer} [a=255] - The alpha value. A number between 0 and 255.\r\n * @param {string} [prefix=#] - The prefix of the string. Either `#` or `0x`.\r\n *\r\n * @return {string} A string-based representation of the color values.\r\n */\r\nvar RGBToString = function (r, g, b, a, prefix)\r\n{\r\n    if (a === undefined) { a = 255; }\r\n    if (prefix === undefined) { prefix = '#'; }\r\n\r\n    if (prefix === '#')\r\n    {\r\n        return '#' + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\r\n    }\r\n    else\r\n    {\r\n        return '0x' + ComponentToHex(a) + ComponentToHex(r) + ComponentToHex(g) + ComponentToHex(b);\r\n    }\r\n};\r\n\r\nmodule.exports = RGBToString;\r\n"},"lineCount":null}},"error":null,"hash":"22dfb50ae703475192408bab2e656ade","cacheData":{"env":{}}}