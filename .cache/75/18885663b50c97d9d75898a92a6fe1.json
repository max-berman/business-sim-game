{"id":"XVpm","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000},{"name":"../lib/body/Body","loc":{"line":7,"column":19},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/physics/matter-js/components/Static.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/physics/matter-js/lib/body/Body.js"}],"generated":{"js":"var t=require(\"../lib/body/Body\"),i={setStatic:function(i){return t.setStatic(this.body,i),this},isStatic:function(){return this.body.isStatic}};module.exports=i;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/physics/matter-js/components/Static.js","original":{"line":7,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Static.js","original":{"line":7,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Static.js","original":{"line":7,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Static.js","original":{"line":7,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Static.js","original":{"line":15,"column":0},"generated":{"line":1,"column":34}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Static.js","original":{"line":15,"column":0},"generated":{"line":1,"column":36}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Static.js","original":{"line":27,"column":0},"generated":{"line":1,"column":37}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Static.js","original":{"line":27,"column":0},"generated":{"line":1,"column":47}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Static.js","original":{"line":27,"column":0},"generated":{"line":1,"column":56}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Static.js","original":{"line":31,"column":0},"generated":{"line":1,"column":59}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Static.js","original":{"line":29,"column":0},"generated":{"line":1,"column":66}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Static.js","original":{"line":29,"column":0},"generated":{"line":1,"column":68}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Static.js","original":{"line":29,"column":0},"generated":{"line":1,"column":78}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Static.js","original":{"line":29,"column":0},"generated":{"line":1,"column":83}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Static.js","original":{"line":29,"column":0},"generated":{"line":1,"column":88}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Static.js","original":{"line":31,"column":0},"generated":{"line":1,"column":91}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Static.js","original":{"line":42,"column":0},"generated":{"line":1,"column":97}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Static.js","original":{"line":42,"column":0},"generated":{"line":1,"column":106}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Static.js","original":{"line":44,"column":0},"generated":{"line":1,"column":117}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Static.js","original":{"line":44,"column":0},"generated":{"line":1,"column":124}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Static.js","original":{"line":44,"column":0},"generated":{"line":1,"column":129}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Static.js","original":{"line":44,"column":0},"generated":{"line":1,"column":134}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Static.js","original":{"line":49,"column":0},"generated":{"line":1,"column":145}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Static.js","original":{"line":49,"column":0},"generated":{"line":1,"column":152}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Static.js","original":{"line":49,"column":0},"generated":{"line":1,"column":160}}],"sources":{"../node_modules/phaser/src/physics/matter-js/components/Static.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Body = require('../lib/body/Body');\r\n\r\n/**\r\n * Provides methods used for getting and setting the static state of a physics body.\r\n *\r\n * @namespace Phaser.Physics.Matter.Components.Static\r\n * @since 3.0.0\r\n */\r\nvar Static = {\r\n\r\n    /**\r\n     * Changes the physics body to be either static `true` or dynamic `false`.\r\n     *\r\n     * @method Phaser.Physics.Matter.Components.Static#setStatic\r\n     * @since 3.0.0\r\n     *\r\n     * @param {boolean} value - `true` to set the body as being static, or `false` to make it dynamic.\r\n     *\r\n     * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n     */\r\n    setStatic: function (value)\r\n    {\r\n        Body.setStatic(this.body, value);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Returns `true` if the body is static, otherwise `false` for a dynamic body.\r\n     *\r\n     * @method Phaser.Physics.Matter.Components.Static#isStatic\r\n     * @since 3.0.0\r\n     *\r\n     * @return {boolean} `true` if the body is static, otherwise `false`.\r\n     */\r\n    isStatic: function ()\r\n    {\r\n        return this.body.isStatic;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Static;\r\n"},"lineCount":null}},"error":null,"hash":"bb00cd435c6169c91715d592fb084c6d","cacheData":{"env":{}}}