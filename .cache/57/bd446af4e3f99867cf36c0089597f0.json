{"id":"ohfu","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000}],"generated":{"js":"var i={setFriction:function(i,t,o){return this.body.friction=i,void 0!==t&&(this.body.frictionAir=t),void 0!==o&&(this.body.frictionStatic=o),this},setFrictionAir:function(i){return this.body.frictionAir=i,this},setFrictionStatic:function(i){return this.body.frictionStatic=i,this}};module.exports=i;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":13,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":13,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":13,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":27,"column":0},"generated":{"line":1,"column":7}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":27,"column":0},"generated":{"line":1,"column":19}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":27,"column":0},"generated":{"line":1,"column":28}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":27,"column":0},"generated":{"line":1,"column":30}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":27,"column":0},"generated":{"line":1,"column":32}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":41,"column":0},"generated":{"line":1,"column":35}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":29,"column":0},"generated":{"line":1,"column":42}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":29,"column":0},"generated":{"line":1,"column":47}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":29,"column":0},"generated":{"line":1,"column":52}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":29,"column":0},"generated":{"line":1,"column":61}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":31,"column":0},"generated":{"line":1,"column":68}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":31,"column":0},"generated":{"line":1,"column":72}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":33,"column":0},"generated":{"line":1,"column":76}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":33,"column":0},"generated":{"line":1,"column":81}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":33,"column":0},"generated":{"line":1,"column":86}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":33,"column":0},"generated":{"line":1,"column":98}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":36,"column":0},"generated":{"line":1,"column":106}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":36,"column":0},"generated":{"line":1,"column":110}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":38,"column":0},"generated":{"line":1,"column":114}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":38,"column":0},"generated":{"line":1,"column":119}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":38,"column":0},"generated":{"line":1,"column":124}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":38,"column":0},"generated":{"line":1,"column":139}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":41,"column":0},"generated":{"line":1,"column":142}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":56,"column":0},"generated":{"line":1,"column":148}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":56,"column":0},"generated":{"line":1,"column":163}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":56,"column":0},"generated":{"line":1,"column":172}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":60,"column":0},"generated":{"line":1,"column":175}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":58,"column":0},"generated":{"line":1,"column":182}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":58,"column":0},"generated":{"line":1,"column":187}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":58,"column":0},"generated":{"line":1,"column":192}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":58,"column":0},"generated":{"line":1,"column":204}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":60,"column":0},"generated":{"line":1,"column":206}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":75,"column":0},"generated":{"line":1,"column":212}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":75,"column":0},"generated":{"line":1,"column":230}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":75,"column":0},"generated":{"line":1,"column":239}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":79,"column":0},"generated":{"line":1,"column":242}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":77,"column":0},"generated":{"line":1,"column":249}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":77,"column":0},"generated":{"line":1,"column":254}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":77,"column":0},"generated":{"line":1,"column":259}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":77,"column":0},"generated":{"line":1,"column":274}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":79,"column":0},"generated":{"line":1,"column":276}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":84,"column":0},"generated":{"line":1,"column":283}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":84,"column":0},"generated":{"line":1,"column":290}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Friction.js","original":{"line":84,"column":0},"generated":{"line":1,"column":298}}],"sources":{"../node_modules/phaser/src/physics/matter-js/components/Friction.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Contains methods for changing the friction of a Game Object's Matter Body. Should be used a mixin, not called directly.\r\n *\r\n * @namespace Phaser.Physics.Matter.Components.Friction\r\n * @since 3.0.0\r\n */\r\nvar Friction = {\r\n\r\n    /**\r\n     * Sets new friction values for this Game Object's Matter Body.\r\n     *\r\n     * @method Phaser.Physics.Matter.Components.Friction#setFriction\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} value - The new friction of the body, between 0 and 1, where 0 allows the Body to slide indefinitely, while 1 allows it to stop almost immediately after a force is applied.\r\n     * @param {number} [air] - If provided, the new air resistance of the Body. The higher the value, the faster the Body will slow as it moves through space. 0 means the body has no air resistance.\r\n     * @param {number} [fstatic] - If provided, the new static friction of the Body. The higher the value (e.g. 10), the more force it will take to initially get the Body moving when it is nearly stationary. 0 means the body will never \"stick\" when it is nearly stationary.\r\n     *\r\n     * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n     */\r\n    setFriction: function (value, air, fstatic)\r\n    {\r\n        this.body.friction = value;\r\n\r\n        if (air !== undefined)\r\n        {\r\n            this.body.frictionAir = air;\r\n        }\r\n\r\n        if (fstatic !== undefined)\r\n        {\r\n            this.body.frictionStatic = fstatic;\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets a new air resistance for this Game Object's Matter Body.\r\n     * A value of 0 means the Body will never slow as it moves through space.\r\n     * The higher the value, the faster a Body slows when moving through space.\r\n     *\r\n     * @method Phaser.Physics.Matter.Components.Friction#setFrictionAir\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} value - The new air resistance for the Body.\r\n     *\r\n     * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n     */\r\n    setFrictionAir: function (value)\r\n    {\r\n        this.body.frictionAir = value;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets a new static friction for this Game Object's Matter Body.\r\n     * A value of 0 means the Body will never \"stick\" when it is nearly stationary.\r\n     * The higher the value (e.g. 10), the more force it will take to initially get the Body moving when it is nearly stationary.\r\n     *\r\n     * @method Phaser.Physics.Matter.Components.Friction#setFrictionStatic\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} value - The new static friction for the Body.\r\n     *\r\n     * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n     */\r\n    setFrictionStatic: function (value)\r\n    {\r\n        this.body.frictionStatic = value;\r\n\r\n        return this;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Friction;\r\n"},"lineCount":null}},"error":null,"hash":"699beb0baa06fe1c84362a8dbbd37f5d","cacheData":{"env":{}}}