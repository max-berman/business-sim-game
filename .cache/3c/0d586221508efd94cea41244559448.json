{"id":"daYy","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000}],"generated":{"js":"var n={},o={install:function(o){for(var r in n)o[r]=n[r]},register:function(o,r){n[o]=r},destroy:function(){n={}}};module.exports=o;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/loader/FileTypesManager.js","original":{"line":7,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/loader/FileTypesManager.js","original":{"line":7,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/loader/FileTypesManager.js","original":{"line":7,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/loader/FileTypesManager.js","original":{"line":13,"column":0},"generated":{"line":1,"column":9}},{"source":"../node_modules/phaser/src/loader/FileTypesManager.js","original":{"line":13,"column":0},"generated":{"line":1,"column":11}},{"source":"../node_modules/phaser/src/loader/FileTypesManager.js","original":{"line":26,"column":0},"generated":{"line":1,"column":12}},{"source":"../node_modules/phaser/src/loader/FileTypesManager.js","original":{"line":26,"column":0},"generated":{"line":1,"column":20}},{"source":"../node_modules/phaser/src/loader/FileTypesManager.js","original":{"line":26,"column":0},"generated":{"line":1,"column":29}},{"source":"../node_modules/phaser/src/loader/FileTypesManager.js","original":{"line":28,"column":0},"generated":{"line":1,"column":32}},{"source":"../node_modules/phaser/src/loader/FileTypesManager.js","original":{"line":28,"column":0},"generated":{"line":1,"column":36}},{"source":"../node_modules/phaser/src/loader/FileTypesManager.js","original":{"line":28,"column":0},"generated":{"line":1,"column":40}},{"source":"../node_modules/phaser/src/loader/FileTypesManager.js","original":{"line":28,"column":0},"generated":{"line":1,"column":45}},{"source":"../node_modules/phaser/src/loader/FileTypesManager.js","original":{"line":30,"column":0},"generated":{"line":1,"column":47}},{"source":"../node_modules/phaser/src/loader/FileTypesManager.js","original":{"line":30,"column":0},"generated":{"line":1,"column":49}},{"source":"../node_modules/phaser/src/loader/FileTypesManager.js","original":{"line":30,"column":0},"generated":{"line":1,"column":52}},{"source":"../node_modules/phaser/src/loader/FileTypesManager.js","original":{"line":30,"column":0},"generated":{"line":1,"column":54}},{"source":"../node_modules/phaser/src/loader/FileTypesManager.js","original":{"line":45,"column":0},"generated":{"line":1,"column":58}},{"source":"../node_modules/phaser/src/loader/FileTypesManager.js","original":{"line":45,"column":0},"generated":{"line":1,"column":67}},{"source":"../node_modules/phaser/src/loader/FileTypesManager.js","original":{"line":45,"column":0},"generated":{"line":1,"column":76}},{"source":"../node_modules/phaser/src/loader/FileTypesManager.js","original":{"line":45,"column":0},"generated":{"line":1,"column":78}},{"source":"../node_modules/phaser/src/loader/FileTypesManager.js","original":{"line":47,"column":0},"generated":{"line":1,"column":81}},{"source":"../node_modules/phaser/src/loader/FileTypesManager.js","original":{"line":47,"column":0},"generated":{"line":1,"column":83}},{"source":"../node_modules/phaser/src/loader/FileTypesManager.js","original":{"line":47,"column":0},"generated":{"line":1,"column":86}},{"source":"../node_modules/phaser/src/loader/FileTypesManager.js","original":{"line":56,"column":0},"generated":{"line":1,"column":89}},{"source":"../node_modules/phaser/src/loader/FileTypesManager.js","original":{"line":56,"column":0},"generated":{"line":1,"column":97}},{"source":"../node_modules/phaser/src/loader/FileTypesManager.js","original":{"line":58,"column":0},"generated":{"line":1,"column":108}},{"source":"../node_modules/phaser/src/loader/FileTypesManager.js","original":{"line":58,"column":0},"generated":{"line":1,"column":110}},{"source":"../node_modules/phaser/src/loader/FileTypesManager.js","original":{"line":63,"column":0},"generated":{"line":1,"column":115}},{"source":"../node_modules/phaser/src/loader/FileTypesManager.js","original":{"line":63,"column":0},"generated":{"line":1,"column":122}},{"source":"../node_modules/phaser/src/loader/FileTypesManager.js","original":{"line":63,"column":0},"generated":{"line":1,"column":130}}],"sources":{"../node_modules/phaser/src/loader/FileTypesManager.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar types = {};\r\n\r\n/**\r\n * @namespace Phaser.Loader.FileTypesManager\r\n */\r\n\r\nvar FileTypesManager = {\r\n\r\n    /**\r\n     * Static method called when a LoaderPlugin is created.\r\n     * \r\n     * Loops through the local types object and injects all of them as\r\n     * properties into the LoaderPlugin instance.\r\n     *\r\n     * @method Phaser.Loader.FileTypesManager.install\r\n     * @since 3.0.0\r\n     * \r\n     * @param {Phaser.Loader.LoaderPlugin} loader - The LoaderPlugin to install the types into.\r\n     */\r\n    install: function (loader)\r\n    {\r\n        for (var key in types)\r\n        {\r\n            loader[key] = types[key];\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Static method called directly by the File Types.\r\n     * \r\n     * The key is a reference to the function used to load the files via the Loader, i.e. `image`.\r\n     *\r\n     * @method Phaser.Loader.FileTypesManager.register\r\n     * @since 3.0.0\r\n     * \r\n     * @param {string} key - The key that will be used as the method name in the LoaderPlugin.\r\n     * @param {function} factoryFunction - The function that will be called when LoaderPlugin.key is invoked.\r\n     */\r\n    register: function (key, factoryFunction)\r\n    {\r\n        types[key] = factoryFunction;\r\n    },\r\n\r\n    /**\r\n     * Removed all associated file types.\r\n     *\r\n     * @method Phaser.Loader.FileTypesManager.destroy\r\n     * @since 3.0.0\r\n     */\r\n    destroy: function ()\r\n    {\r\n        types = {};\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = FileTypesManager;\r\n"},"lineCount":null}},"error":null,"hash":"01fefbb4e6c1c2edd88c650dad159ae0","cacheData":{"env":{}}}