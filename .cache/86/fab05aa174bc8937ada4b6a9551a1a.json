{"id":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591206076000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000}],"generated":{"js":"/**\r\n * @author       Niklas von Hertzen (https://github.com/niklasvh/base64-arraybuffer)\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n\r\n//  Use a lookup table to find the index.\r\nvar lookup = new Uint8Array(256);\r\n\r\nfor (var i = 0; i < chars.length; i++)\r\n{\r\n    lookup[chars.charCodeAt(i)] = i;\r\n}\r\n\r\n/**\r\n * Converts a base64 string, either with or without a data uri, into an Array Buffer.\r\n *\r\n * @function Phaser.Utils.Base64.Base64ToArrayBuffer\r\n * @since 3.18.0\r\n * \r\n * @param {string} base64 - The base64 string to be decoded. Can optionally contain a data URI header, which will be stripped out prior to decoding.\r\n * \r\n * @return {ArrayBuffer} An ArrayBuffer decoded from the base64 data.\r\n */\r\nvar Base64ToArrayBuffer = function (base64)\r\n{\r\n    //  Is it a data uri? if so, strip the header away\r\n    base64 = base64.substr(base64.indexOf(',') + 1);\r\n\r\n    var len = base64.length;\r\n    var bufferLength = len * 0.75;\r\n    var p = 0;\r\n    var encoded1;\r\n    var encoded2;\r\n    var encoded3;\r\n    var encoded4;\r\n\r\n    if (base64[len - 1] === '=')\r\n    {\r\n        bufferLength--;\r\n\r\n        if (base64[len - 2] === '=')\r\n        {\r\n            bufferLength--;\r\n        }\r\n    }\r\n\r\n    var arrayBuffer = new ArrayBuffer(bufferLength);\r\n    var bytes = new Uint8Array(arrayBuffer);\r\n\r\n    for (var i = 0; i < len; i += 4)\r\n    {\r\n        encoded1 = lookup[base64.charCodeAt(i)];\r\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\r\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\r\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\r\n\r\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\r\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\r\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\r\n    }\r\n\r\n    return arrayBuffer;\r\n};\r\n\r\nmodule.exports = Base64ToArrayBuffer;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}}],"sources":{"../node_modules/phaser/src/utils/base64/Base64ToArrayBuffer.js":"/**\r\n * @author       Niklas von Hertzen (https://github.com/niklasvh/base64-arraybuffer)\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n\r\n//  Use a lookup table to find the index.\r\nvar lookup = new Uint8Array(256);\r\n\r\nfor (var i = 0; i < chars.length; i++)\r\n{\r\n    lookup[chars.charCodeAt(i)] = i;\r\n}\r\n\r\n/**\r\n * Converts a base64 string, either with or without a data uri, into an Array Buffer.\r\n *\r\n * @function Phaser.Utils.Base64.Base64ToArrayBuffer\r\n * @since 3.18.0\r\n * \r\n * @param {string} base64 - The base64 string to be decoded. Can optionally contain a data URI header, which will be stripped out prior to decoding.\r\n * \r\n * @return {ArrayBuffer} An ArrayBuffer decoded from the base64 data.\r\n */\r\nvar Base64ToArrayBuffer = function (base64)\r\n{\r\n    //  Is it a data uri? if so, strip the header away\r\n    base64 = base64.substr(base64.indexOf(',') + 1);\r\n\r\n    var len = base64.length;\r\n    var bufferLength = len * 0.75;\r\n    var p = 0;\r\n    var encoded1;\r\n    var encoded2;\r\n    var encoded3;\r\n    var encoded4;\r\n\r\n    if (base64[len - 1] === '=')\r\n    {\r\n        bufferLength--;\r\n\r\n        if (base64[len - 2] === '=')\r\n        {\r\n            bufferLength--;\r\n        }\r\n    }\r\n\r\n    var arrayBuffer = new ArrayBuffer(bufferLength);\r\n    var bytes = new Uint8Array(arrayBuffer);\r\n\r\n    for (var i = 0; i < len; i += 4)\r\n    {\r\n        encoded1 = lookup[base64.charCodeAt(i)];\r\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\r\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\r\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\r\n\r\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\r\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\r\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\r\n    }\r\n\r\n    return arrayBuffer;\r\n};\r\n\r\nmodule.exports = Base64ToArrayBuffer;\r\n"},"lineCount":70}},"error":null,"hash":"81b9330b8e4dac17996dde56f4b45c18","cacheData":{"env":{}}}