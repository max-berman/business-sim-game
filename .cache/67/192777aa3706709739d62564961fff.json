{"id":"aag6","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000},{"name":"../utils/array/Shuffle","loc":{"line":7,"column":27},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/actions/Shuffle.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/utils/array/Shuffle.js"}],"generated":{"js":"var r=require(\"../utils/array/Shuffle\"),e=function(e){return r(e)};module.exports=e;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/actions/Shuffle.js","original":{"line":7,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/actions/Shuffle.js","original":{"line":7,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/actions/Shuffle.js","original":{"line":7,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/actions/Shuffle.js","original":{"line":7,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/phaser/src/actions/Shuffle.js","original":{"line":22,"column":0},"generated":{"line":1,"column":40}},{"source":"../node_modules/phaser/src/actions/Shuffle.js","original":{"line":22,"column":0},"generated":{"line":1,"column":42}},{"source":"../node_modules/phaser/src/actions/Shuffle.js","original":{"line":22,"column":0},"generated":{"line":1,"column":51}},{"source":"../node_modules/phaser/src/actions/Shuffle.js","original":{"line":24,"column":0},"generated":{"line":1,"column":54}},{"source":"../node_modules/phaser/src/actions/Shuffle.js","original":{"line":24,"column":0},"generated":{"line":1,"column":61}},{"source":"../node_modules/phaser/src/actions/Shuffle.js","original":{"line":24,"column":0},"generated":{"line":1,"column":63}},{"source":"../node_modules/phaser/src/actions/Shuffle.js","original":{"line":27,"column":0},"generated":{"line":1,"column":67}},{"source":"../node_modules/phaser/src/actions/Shuffle.js","original":{"line":27,"column":0},"generated":{"line":1,"column":74}},{"source":"../node_modules/phaser/src/actions/Shuffle.js","original":{"line":27,"column":0},"generated":{"line":1,"column":82}}],"sources":{"../node_modules/phaser/src/actions/Shuffle.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar ArrayShuffle = require('../utils/array/Shuffle');\r\n\r\n/**\r\n * Shuffles the array in place. The shuffled array is both modified and returned.\r\n *\r\n * @function Phaser.Actions.Shuffle\r\n * @since 3.0.0\r\n * @see Phaser.Utils.Array.Shuffle\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - An array of Game Objects. The contents of this array are updated by this Action.\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of Game Objects that was passed to this Action.\r\n */\r\nvar Shuffle = function (items)\r\n{\r\n    return ArrayShuffle(items);\r\n};\r\n\r\nmodule.exports = Shuffle;\r\n"},"lineCount":null}},"error":null,"hash":"9659ec8e039e093aa3cc63859dfc2ec5","cacheData":{"env":{}}}