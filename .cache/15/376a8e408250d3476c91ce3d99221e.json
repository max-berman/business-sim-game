{"id":"GwaO","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000}],"generated":{"js":"var r=function(r,t,a){return Math.abs(r-t)<=a};module.exports=r;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/math/Within.js","original":{"line":19,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/math/Within.js","original":{"line":19,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/math/Within.js","original":{"line":19,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/math/Within.js","original":{"line":19,"column":0},"generated":{"line":1,"column":15}},{"source":"../node_modules/phaser/src/math/Within.js","original":{"line":19,"column":0},"generated":{"line":1,"column":17}},{"source":"../node_modules/phaser/src/math/Within.js","original":{"line":19,"column":0},"generated":{"line":1,"column":19}},{"source":"../node_modules/phaser/src/math/Within.js","original":{"line":21,"column":0},"generated":{"line":1,"column":22}},{"source":"../node_modules/phaser/src/math/Within.js","original":{"line":21,"column":0},"generated":{"line":1,"column":29}},{"source":"../node_modules/phaser/src/math/Within.js","original":{"line":21,"column":0},"generated":{"line":1,"column":34}},{"source":"../node_modules/phaser/src/math/Within.js","original":{"line":21,"column":0},"generated":{"line":1,"column":38}},{"source":"../node_modules/phaser/src/math/Within.js","original":{"line":21,"column":0},"generated":{"line":1,"column":40}},{"source":"../node_modules/phaser/src/math/Within.js","original":{"line":21,"column":0},"generated":{"line":1,"column":44}},{"source":"../node_modules/phaser/src/math/Within.js","original":{"line":24,"column":0},"generated":{"line":1,"column":47}},{"source":"../node_modules/phaser/src/math/Within.js","original":{"line":24,"column":0},"generated":{"line":1,"column":54}},{"source":"../node_modules/phaser/src/math/Within.js","original":{"line":24,"column":0},"generated":{"line":1,"column":62}}],"sources":{"../node_modules/phaser/src/math/Within.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Checks if the two values are within the given `tolerance` of each other.\r\n *\r\n * @function Phaser.Math.Within\r\n * @since 3.0.0\r\n *\r\n * @param {number} a - The first value to use in the calculation.\r\n * @param {number} b - The second value to use in the calculation.\r\n * @param {number} tolerance - The tolerance. Anything equal to or less than this value is considered as being within range.\r\n *\r\n * @return {boolean} Returns `true` if `a` is less than or equal to the tolerance of `b`.\r\n */\r\nvar Within = function (a, b, tolerance)\r\n{\r\n    return (Math.abs(a - b) <= tolerance);\r\n};\r\n\r\nmodule.exports = Within;\r\n"},"lineCount":null}},"error":null,"hash":"44bb86fe63729366389308c79409f7ac","cacheData":{"env":{}}}