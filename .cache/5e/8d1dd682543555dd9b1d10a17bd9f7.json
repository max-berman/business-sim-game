{"id":"sWUb","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000},{"name":"./Clone","loc":{"line":7,"column":20},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/utils/object/MergeRight.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/utils/object/Clone.js"}],"generated":{"js":"var r=require(\"./Clone\"),e=function(e,n){var o=r(e);for(var a in n)o.hasOwnProperty(a)&&(o[a]=n[a]);return o};module.exports=e;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":7,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":7,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":7,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":7,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":22,"column":0},"generated":{"line":1,"column":25}},{"source":"../node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":22,"column":0},"generated":{"line":1,"column":27}},{"source":"../node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":22,"column":0},"generated":{"line":1,"column":36}},{"source":"../node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":22,"column":0},"generated":{"line":1,"column":38}},{"source":"../node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":24,"column":0},"generated":{"line":1,"column":41}},{"source":"../node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":24,"column":0},"generated":{"line":1,"column":45}},{"source":"../node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":24,"column":0},"generated":{"line":1,"column":47}},{"source":"../node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":24,"column":0},"generated":{"line":1,"column":49}},{"source":"../node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":26,"column":0},"generated":{"line":1,"column":52}},{"source":"../node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":26,"column":0},"generated":{"line":1,"column":56}},{"source":"../node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":26,"column":0},"generated":{"line":1,"column":60}},{"source":"../node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":26,"column":0},"generated":{"line":1,"column":65}},{"source":"../node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":28,"column":0},"generated":{"line":1,"column":67}},{"source":"../node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":28,"column":0},"generated":{"line":1,"column":69}},{"source":"../node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":28,"column":0},"generated":{"line":1,"column":84}},{"source":"../node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":30,"column":0},"generated":{"line":1,"column":89}},{"source":"../node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":30,"column":0},"generated":{"line":1,"column":91}},{"source":"../node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":30,"column":0},"generated":{"line":1,"column":94}},{"source":"../node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":30,"column":0},"generated":{"line":1,"column":96}},{"source":"../node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":34,"column":0},"generated":{"line":1,"column":100}},{"source":"../node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":34,"column":0},"generated":{"line":1,"column":107}},{"source":"../node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":37,"column":0},"generated":{"line":1,"column":110}},{"source":"../node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":37,"column":0},"generated":{"line":1,"column":117}},{"source":"../node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":37,"column":0},"generated":{"line":1,"column":125}}],"sources":{"../node_modules/phaser/src/utils/object/MergeRight.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Clone = require('./Clone');\r\n\r\n/**\r\n * Creates a new Object using all values from obj1.\r\n * \r\n * Then scans obj2. If a property is found in obj2 that *also* exists in obj1, the value from obj2 is used, otherwise the property is skipped.\r\n *\r\n * @function Phaser.Utils.Objects.MergeRight\r\n * @since 3.0.0\r\n *\r\n * @param {object} obj1 - The first object to merge.\r\n * @param {object} obj2 - The second object to merge. Keys from this object which also exist in `obj1` will be copied to `obj1`.\r\n *\r\n * @return {object} The merged object. `obj1` and `obj2` are not modified.\r\n */\r\nvar MergeRight = function (obj1, obj2)\r\n{\r\n    var clone = Clone(obj1);\r\n\r\n    for (var key in obj2)\r\n    {\r\n        if (clone.hasOwnProperty(key))\r\n        {\r\n            clone[key] = obj2[key];\r\n        }\r\n    }\r\n\r\n    return clone;\r\n};\r\n\r\nmodule.exports = MergeRight;\r\n"},"lineCount":null}},"error":null,"hash":"e850a105659e600352ed8e771e3868ea","cacheData":{"env":{}}}