{"id":"mRwI","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000}],"generated":{"js":"var t=function(t,a,n){return(t=Math.max(0,Math.min(1,(t-a)/(n-a))))*t*t*(t*(6*t-15)+10)};module.exports=t;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/math/SmootherStep.js","original":{"line":26,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/math/SmootherStep.js","original":{"line":26,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/math/SmootherStep.js","original":{"line":26,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/math/SmootherStep.js","original":{"line":26,"column":0},"generated":{"line":1,"column":15}},{"source":"../node_modules/phaser/src/math/SmootherStep.js","original":{"line":26,"column":0},"generated":{"line":1,"column":17}},{"source":"../node_modules/phaser/src/math/SmootherStep.js","original":{"line":26,"column":0},"generated":{"line":1,"column":19}},{"source":"../node_modules/phaser/src/math/SmootherStep.js","original":{"line":30,"column":0},"generated":{"line":1,"column":22}},{"source":"../node_modules/phaser/src/math/SmootherStep.js","original":{"line":28,"column":0},"generated":{"line":1,"column":29}},{"source":"../node_modules/phaser/src/math/SmootherStep.js","original":{"line":28,"column":0},"generated":{"line":1,"column":31}},{"source":"../node_modules/phaser/src/math/SmootherStep.js","original":{"line":28,"column":0},"generated":{"line":1,"column":36}},{"source":"../node_modules/phaser/src/math/SmootherStep.js","original":{"line":28,"column":0},"generated":{"line":1,"column":40}},{"source":"../node_modules/phaser/src/math/SmootherStep.js","original":{"line":28,"column":0},"generated":{"line":1,"column":42}},{"source":"../node_modules/phaser/src/math/SmootherStep.js","original":{"line":28,"column":0},"generated":{"line":1,"column":47}},{"source":"../node_modules/phaser/src/math/SmootherStep.js","original":{"line":28,"column":0},"generated":{"line":1,"column":51}},{"source":"../node_modules/phaser/src/math/SmootherStep.js","original":{"line":28,"column":0},"generated":{"line":1,"column":54}},{"source":"../node_modules/phaser/src/math/SmootherStep.js","original":{"line":28,"column":0},"generated":{"line":1,"column":56}},{"source":"../node_modules/phaser/src/math/SmootherStep.js","original":{"line":28,"column":0},"generated":{"line":1,"column":60}},{"source":"../node_modules/phaser/src/math/SmootherStep.js","original":{"line":28,"column":0},"generated":{"line":1,"column":62}},{"source":"../node_modules/phaser/src/math/SmootherStep.js","original":{"line":30,"column":0},"generated":{"line":1,"column":68}},{"source":"../node_modules/phaser/src/math/SmootherStep.js","original":{"line":30,"column":0},"generated":{"line":1,"column":70}},{"source":"../node_modules/phaser/src/math/SmootherStep.js","original":{"line":30,"column":0},"generated":{"line":1,"column":73}},{"source":"../node_modules/phaser/src/math/SmootherStep.js","original":{"line":30,"column":0},"generated":{"line":1,"column":76}},{"source":"../node_modules/phaser/src/math/SmootherStep.js","original":{"line":30,"column":0},"generated":{"line":1,"column":78}},{"source":"../node_modules/phaser/src/math/SmootherStep.js","original":{"line":30,"column":0},"generated":{"line":1,"column":80}},{"source":"../node_modules/phaser/src/math/SmootherStep.js","original":{"line":30,"column":0},"generated":{"line":1,"column":84}},{"source":"../node_modules/phaser/src/math/SmootherStep.js","original":{"line":33,"column":0},"generated":{"line":1,"column":89}},{"source":"../node_modules/phaser/src/math/SmootherStep.js","original":{"line":33,"column":0},"generated":{"line":1,"column":96}},{"source":"../node_modules/phaser/src/math/SmootherStep.js","original":{"line":33,"column":0},"generated":{"line":1,"column":104}}],"sources":{"../node_modules/phaser/src/math/SmootherStep.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Calculate a smoother interpolation percentage of `x` between `min` and `max`.\r\n *\r\n * The function receives the number `x` as an argument and returns 0 if `x` is less than or equal to the left edge,\r\n * 1 if `x` is greater than or equal to the right edge, and smoothly interpolates, using a Hermite polynomial,\r\n * between 0 and 1 otherwise.\r\n *\r\n * Produces an even smoother interpolation than {@link Phaser.Math.SmoothStep}.\r\n *\r\n * @function Phaser.Math.SmootherStep\r\n * @since 3.0.0\r\n * @see {@link https://en.wikipedia.org/wiki/Smoothstep#Variations}\r\n *\r\n * @param {number} x - The input value.\r\n * @param {number} min - The minimum value, also known as the 'left edge', assumed smaller than the 'right edge'.\r\n * @param {number} max - The maximum value, also known as the 'right edge', assumed greater than the 'left edge'.\r\n *\r\n * @return {number} The percentage of interpolation, between 0 and 1.\r\n */\r\nvar SmootherStep = function (x, min, max)\r\n{\r\n    x = Math.max(0, Math.min(1, (x - min) / (max - min)));\r\n\r\n    return x * x * x * (x * (x * 6 - 15) + 10);\r\n};\r\n\r\nmodule.exports = SmootherStep;\r\n"},"lineCount":null}},"error":null,"hash":"42a8956579fcb3033f65029ec4ed9c3b","cacheData":{"env":{}}}