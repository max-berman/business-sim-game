{"id":"C359","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000}],"generated":{"js":"var o=function(o,r){return void 0===r&&(r=1e-4),Math.floor(o+r)};module.exports=o;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/math/fuzzy/Floor.js","original":{"line":18,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/math/fuzzy/Floor.js","original":{"line":18,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/math/fuzzy/Floor.js","original":{"line":18,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/math/fuzzy/Floor.js","original":{"line":18,"column":0},"generated":{"line":1,"column":15}},{"source":"../node_modules/phaser/src/math/fuzzy/Floor.js","original":{"line":18,"column":0},"generated":{"line":1,"column":17}},{"source":"../node_modules/phaser/src/math/fuzzy/Floor.js","original":{"line":22,"column":0},"generated":{"line":1,"column":20}},{"source":"../node_modules/phaser/src/math/fuzzy/Floor.js","original":{"line":20,"column":0},"generated":{"line":1,"column":32}},{"source":"../node_modules/phaser/src/math/fuzzy/Floor.js","original":{"line":20,"column":0},"generated":{"line":1,"column":36}},{"source":"../node_modules/phaser/src/math/fuzzy/Floor.js","original":{"line":20,"column":0},"generated":{"line":1,"column":40}},{"source":"../node_modules/phaser/src/math/fuzzy/Floor.js","original":{"line":20,"column":0},"generated":{"line":1,"column":42}},{"source":"../node_modules/phaser/src/math/fuzzy/Floor.js","original":{"line":22,"column":0},"generated":{"line":1,"column":48}},{"source":"../node_modules/phaser/src/math/fuzzy/Floor.js","original":{"line":22,"column":0},"generated":{"line":1,"column":53}},{"source":"../node_modules/phaser/src/math/fuzzy/Floor.js","original":{"line":22,"column":0},"generated":{"line":1,"column":59}},{"source":"../node_modules/phaser/src/math/fuzzy/Floor.js","original":{"line":22,"column":0},"generated":{"line":1,"column":61}},{"source":"../node_modules/phaser/src/math/fuzzy/Floor.js","original":{"line":25,"column":0},"generated":{"line":1,"column":65}},{"source":"../node_modules/phaser/src/math/fuzzy/Floor.js","original":{"line":25,"column":0},"generated":{"line":1,"column":72}},{"source":"../node_modules/phaser/src/math/fuzzy/Floor.js","original":{"line":25,"column":0},"generated":{"line":1,"column":80}}],"sources":{"../node_modules/phaser/src/math/fuzzy/Floor.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Calculate the fuzzy floor of the given value.\r\n *\r\n * @function Phaser.Math.Fuzzy.Floor\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value.\r\n * @param {number} [epsilon=0.0001] - The epsilon.\r\n *\r\n * @return {number} The floor of the value.\r\n */\r\nvar Floor = function (value, epsilon)\r\n{\r\n    if (epsilon === undefined) { epsilon = 0.0001; }\r\n\r\n    return Math.floor(value + epsilon);\r\n};\r\n\r\nmodule.exports = Floor;\r\n"},"lineCount":null}},"error":null,"hash":"08aa9126b78f949ad687340c0062fde9","cacheData":{"env":{}}}