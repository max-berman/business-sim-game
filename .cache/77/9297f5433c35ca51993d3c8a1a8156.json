{"id":"eXLP","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000},{"name":"./Text","loc":{"line":7,"column":19},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/gameobjects/text/static/TextFactory.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/gameobjects/text/static/Text.js"},{"name":"../../GameObjectFactory","loc":{"line":8,"column":32},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/gameobjects/text/static/TextFactory.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/gameobjects/GameObjectFactory.js"}],"generated":{"js":"var e=require(\"./Text\"),t=require(\"../../GameObjectFactory\");t.register(\"text\",function(t,r,i,s){return this.displayList.add(new e(this.scene,t,r,i,s))});"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/gameobjects/text/static/TextFactory.js","original":{"line":7,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/text/static/TextFactory.js","original":{"line":7,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/gameobjects/text/static/TextFactory.js","original":{"line":7,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/gameobjects/text/static/TextFactory.js","original":{"line":7,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/phaser/src/gameobjects/text/static/TextFactory.js","original":{"line":8,"column":0},"generated":{"line":1,"column":24}},{"source":"../node_modules/phaser/src/gameobjects/text/static/TextFactory.js","original":{"line":8,"column":0},"generated":{"line":1,"column":26}},{"source":"../node_modules/phaser/src/gameobjects/text/static/TextFactory.js","original":{"line":8,"column":0},"generated":{"line":1,"column":34}},{"source":"../node_modules/phaser/src/gameobjects/text/static/TextFactory.js","original":{"line":48,"column":0},"generated":{"line":1,"column":61}},{"source":"../node_modules/phaser/src/gameobjects/text/static/TextFactory.js","original":{"line":48,"column":0},"generated":{"line":1,"column":63}},{"source":"../node_modules/phaser/src/gameobjects/text/static/TextFactory.js","original":{"line":48,"column":0},"generated":{"line":1,"column":72}},{"source":"../node_modules/phaser/src/gameobjects/text/static/TextFactory.js","original":{"line":48,"column":0},"generated":{"line":1,"column":79}},{"source":"../node_modules/phaser/src/gameobjects/text/static/TextFactory.js","original":{"line":48,"column":0},"generated":{"line":1,"column":88}},{"source":"../node_modules/phaser/src/gameobjects/text/static/TextFactory.js","original":{"line":48,"column":0},"generated":{"line":1,"column":90}},{"source":"../node_modules/phaser/src/gameobjects/text/static/TextFactory.js","original":{"line":48,"column":0},"generated":{"line":1,"column":92}},{"source":"../node_modules/phaser/src/gameobjects/text/static/TextFactory.js","original":{"line":48,"column":0},"generated":{"line":1,"column":94}},{"source":"../node_modules/phaser/src/gameobjects/text/static/TextFactory.js","original":{"line":50,"column":0},"generated":{"line":1,"column":97}},{"source":"../node_modules/phaser/src/gameobjects/text/static/TextFactory.js","original":{"line":50,"column":0},"generated":{"line":1,"column":104}},{"source":"../node_modules/phaser/src/gameobjects/text/static/TextFactory.js","original":{"line":50,"column":0},"generated":{"line":1,"column":109}},{"source":"../node_modules/phaser/src/gameobjects/text/static/TextFactory.js","original":{"line":50,"column":0},"generated":{"line":1,"column":121}},{"source":"../node_modules/phaser/src/gameobjects/text/static/TextFactory.js","original":{"line":50,"column":0},"generated":{"line":1,"column":125}},{"source":"../node_modules/phaser/src/gameobjects/text/static/TextFactory.js","original":{"line":50,"column":0},"generated":{"line":1,"column":129}},{"source":"../node_modules/phaser/src/gameobjects/text/static/TextFactory.js","original":{"line":50,"column":0},"generated":{"line":1,"column":131}},{"source":"../node_modules/phaser/src/gameobjects/text/static/TextFactory.js","original":{"line":50,"column":0},"generated":{"line":1,"column":136}},{"source":"../node_modules/phaser/src/gameobjects/text/static/TextFactory.js","original":{"line":50,"column":0},"generated":{"line":1,"column":142}},{"source":"../node_modules/phaser/src/gameobjects/text/static/TextFactory.js","original":{"line":50,"column":0},"generated":{"line":1,"column":144}},{"source":"../node_modules/phaser/src/gameobjects/text/static/TextFactory.js","original":{"line":50,"column":0},"generated":{"line":1,"column":146}},{"source":"../node_modules/phaser/src/gameobjects/text/static/TextFactory.js","original":{"line":50,"column":0},"generated":{"line":1,"column":148}}],"sources":{"../node_modules/phaser/src/gameobjects/text/static/TextFactory.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Text = require('./Text');\r\nvar GameObjectFactory = require('../../GameObjectFactory');\r\n\r\n/**\r\n * Creates a new Text Game Object and adds it to the Scene.\r\n * \r\n * A Text Game Object.\r\n * \r\n * Text objects work by creating their own internal hidden Canvas and then renders text to it using\r\n * the standard Canvas `fillText` API. It then creates a texture from this canvas which is rendered\r\n * to your game during the render pass.\r\n * \r\n * Because it uses the Canvas API you can take advantage of all the features this offers, such as\r\n * applying gradient fills to the text, or strokes, shadows and more. You can also use custom fonts\r\n * loaded externally, such as Google or TypeKit Web fonts.\r\n *\r\n * You can only display fonts that are currently loaded and available to the browser: therefore fonts must\r\n * be pre-loaded. Phaser does not do ths for you, so you will require the use of a 3rd party font loader,\r\n * or have the fonts ready available in the CSS on the page in which your Phaser game resides.\r\n *\r\n * See {@link http://www.jordanm.co.uk/tinytype this compatibility table} for the available default fonts\r\n * across mobile browsers.\r\n * \r\n * A note on performance: Every time the contents of a Text object changes, i.e. changing the text being\r\n * displayed, or the style of the text, it needs to remake the Text canvas, and if on WebGL, re-upload the\r\n * new texture to the GPU. This can be an expensive operation if used often, or with large quantities of\r\n * Text objects in your game. If you run into performance issues you would be better off using Bitmap Text\r\n * instead, as it benefits from batching and avoids expensive Canvas API calls.\r\n *\r\n * Note: This method will only be available if the Text Game Object has been built into Phaser.\r\n *\r\n * @method Phaser.GameObjects.GameObjectFactory#text\r\n * @since 3.0.0\r\n *\r\n * @param {number} x - The horizontal position of this Game Object in the world.\r\n * @param {number} y - The vertical position of this Game Object in the world.\r\n * @param {(string|string[])} text - The text this Text object will display.\r\n * @param {object} [style] - The Text style configuration object.\r\n *\r\n * @return {Phaser.GameObjects.Text} The Game Object that was created.\r\n */\r\nGameObjectFactory.register('text', function (x, y, text, style)\r\n{\r\n    return this.displayList.add(new Text(this.scene, x, y, text, style));\r\n});\r\n\r\n//  When registering a factory function 'this' refers to the GameObjectFactory context.\r\n//\r\n//  There are several properties available to use:\r\n//\r\n//  this.scene - a reference to the Scene that owns the GameObjectFactory\r\n//  this.displayList - a reference to the Display List the Scene owns\r\n//  this.updateList - a reference to the Update List the Scene owns\r\n"},"lineCount":null}},"error":null,"hash":"17a2dc69832406fa032d7c32a7edfd4f","cacheData":{"env":{}}}