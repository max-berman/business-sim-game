{"id":"XIYT","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000},{"name":"../../math/RoundAwayFromZero","loc":{"line":7,"column":32},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/utils/array/NumberArrayStep.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/math/RoundAwayFromZero.js"}],"generated":{"js":"var o=require(\"../../math/RoundAwayFromZero\"),r=function(r,u,a){void 0===r&&(r=0),void 0===u&&(u=null),void 0===a&&(a=1),null===u&&(u=r,r=0);for(var e=[],n=Math.max(o((u-r)/(a||1)),0),d=0;d<n;d++)e.push(r),r+=a;return e};module.exports=r;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":7,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":7,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":7,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":7,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":46,"column":0},"generated":{"line":1,"column":46}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":46,"column":0},"generated":{"line":1,"column":48}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":46,"column":0},"generated":{"line":1,"column":57}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":46,"column":0},"generated":{"line":1,"column":59}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":46,"column":0},"generated":{"line":1,"column":61}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":48,"column":0},"generated":{"line":1,"column":69}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":48,"column":0},"generated":{"line":1,"column":73}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":48,"column":0},"generated":{"line":1,"column":77}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":48,"column":0},"generated":{"line":1,"column":79}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":49,"column":0},"generated":{"line":1,"column":87}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":49,"column":0},"generated":{"line":1,"column":91}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":49,"column":0},"generated":{"line":1,"column":95}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":49,"column":0},"generated":{"line":1,"column":97}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":50,"column":0},"generated":{"line":1,"column":108}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":50,"column":0},"generated":{"line":1,"column":112}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":50,"column":0},"generated":{"line":1,"column":116}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":50,"column":0},"generated":{"line":1,"column":118}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":52,"column":0},"generated":{"line":1,"column":121}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":52,"column":0},"generated":{"line":1,"column":128}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":54,"column":0},"generated":{"line":1,"column":132}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":54,"column":0},"generated":{"line":1,"column":134}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":55,"column":0},"generated":{"line":1,"column":136}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":55,"column":0},"generated":{"line":1,"column":138}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":62,"column":0},"generated":{"line":1,"column":141}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":58,"column":0},"generated":{"line":1,"column":145}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":58,"column":0},"generated":{"line":1,"column":149}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":58,"column":0},"generated":{"line":1,"column":151}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":60,"column":0},"generated":{"line":1,"column":154}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":60,"column":0},"generated":{"line":1,"column":156}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":60,"column":0},"generated":{"line":1,"column":161}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":60,"column":0},"generated":{"line":1,"column":165}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":60,"column":0},"generated":{"line":1,"column":168}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":60,"column":0},"generated":{"line":1,"column":170}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":60,"column":0},"generated":{"line":1,"column":174}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":60,"column":0},"generated":{"line":1,"column":177}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":60,"column":0},"generated":{"line":1,"column":181}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":62,"column":0},"generated":{"line":1,"column":184}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":62,"column":0},"generated":{"line":1,"column":186}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":62,"column":0},"generated":{"line":1,"column":188}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":62,"column":0},"generated":{"line":1,"column":190}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":62,"column":0},"generated":{"line":1,"column":192}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":64,"column":0},"generated":{"line":1,"column":196}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":64,"column":0},"generated":{"line":1,"column":198}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":64,"column":0},"generated":{"line":1,"column":203}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":65,"column":0},"generated":{"line":1,"column":206}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":65,"column":0},"generated":{"line":1,"column":209}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":68,"column":0},"generated":{"line":1,"column":211}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":68,"column":0},"generated":{"line":1,"column":218}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":71,"column":0},"generated":{"line":1,"column":221}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":71,"column":0},"generated":{"line":1,"column":228}},{"source":"../node_modules/phaser/src/utils/array/NumberArrayStep.js","original":{"line":71,"column":0},"generated":{"line":1,"column":236}}],"sources":{"../node_modules/phaser/src/utils/array/NumberArrayStep.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar RoundAwayFromZero = require('../../math/RoundAwayFromZero');\r\n\r\n/**\r\n * Create an array of numbers (positive and/or negative) progressing from `start`\r\n * up to but not including `end` by advancing by `step`.\r\n *\r\n * If `start` is less than `end` a zero-length range is created unless a negative `step` is specified.\r\n *\r\n * Certain values for `start` and `end` (eg. NaN/undefined/null) are currently coerced to 0;\r\n * for forward compatibility make sure to pass in actual numbers.\r\n * \r\n * @example\r\n * NumberArrayStep(4);\r\n * // => [0, 1, 2, 3]\r\n *\r\n * NumberArrayStep(1, 5);\r\n * // => [1, 2, 3, 4]\r\n *\r\n * NumberArrayStep(0, 20, 5);\r\n * // => [0, 5, 10, 15]\r\n *\r\n * NumberArrayStep(0, -4, -1);\r\n * // => [0, -1, -2, -3]\r\n *\r\n * NumberArrayStep(1, 4, 0);\r\n * // => [1, 1, 1]\r\n *\r\n * NumberArrayStep(0);\r\n * // => []\r\n *\r\n * @function Phaser.Utils.Array.NumberArrayStep\r\n * @since 3.0.0\r\n *\r\n * @param {number} [start=0] - The start of the range.\r\n * @param {number} [end=null] - The end of the range.\r\n * @param {number} [step=1] - The value to increment or decrement by.\r\n *\r\n * @return {number[]} The array of number values.\r\n */\r\nvar NumberArrayStep = function (start, end, step)\r\n{\r\n    if (start === undefined) { start = 0; }\r\n    if (end === undefined) { end = null; }\r\n    if (step === undefined) { step = 1; }\r\n\r\n    if (end === null)\r\n    {\r\n        end = start;\r\n        start = 0;\r\n    }\r\n\r\n    var result = [];\r\n\r\n    var total = Math.max(RoundAwayFromZero((end - start) / (step || 1)), 0);\r\n\r\n    for (var i = 0; i < total; i++)\r\n    {\r\n        result.push(start);\r\n        start += step;\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nmodule.exports = NumberArrayStep;\r\n"},"lineCount":null}},"error":null,"hash":"1e26d88dc972c4304b9ba38de54af771","cacheData":{"env":{}}}