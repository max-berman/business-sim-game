{"id":"NsEa","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000}],"generated":{"js":"var t=function(t,h){return t.x===h.x&&t.y===h.y&&t.width===h.width&&t.height===h.height};module.exports=t;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/geom/ellipse/Equals.js","original":{"line":19,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/geom/ellipse/Equals.js","original":{"line":19,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/geom/ellipse/Equals.js","original":{"line":19,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/geom/ellipse/Equals.js","original":{"line":19,"column":0},"generated":{"line":1,"column":15}},{"source":"../node_modules/phaser/src/geom/ellipse/Equals.js","original":{"line":19,"column":0},"generated":{"line":1,"column":17}},{"source":"../node_modules/phaser/src/geom/ellipse/Equals.js","original":{"line":21,"column":0},"generated":{"line":1,"column":20}},{"source":"../node_modules/phaser/src/geom/ellipse/Equals.js","original":{"line":22,"column":0},"generated":{"line":1,"column":27}},{"source":"../node_modules/phaser/src/geom/ellipse/Equals.js","original":{"line":22,"column":0},"generated":{"line":1,"column":29}},{"source":"../node_modules/phaser/src/geom/ellipse/Equals.js","original":{"line":22,"column":0},"generated":{"line":1,"column":33}},{"source":"../node_modules/phaser/src/geom/ellipse/Equals.js","original":{"line":22,"column":0},"generated":{"line":1,"column":35}},{"source":"../node_modules/phaser/src/geom/ellipse/Equals.js","original":{"line":23,"column":0},"generated":{"line":1,"column":38}},{"source":"../node_modules/phaser/src/geom/ellipse/Equals.js","original":{"line":23,"column":0},"generated":{"line":1,"column":40}},{"source":"../node_modules/phaser/src/geom/ellipse/Equals.js","original":{"line":23,"column":0},"generated":{"line":1,"column":44}},{"source":"../node_modules/phaser/src/geom/ellipse/Equals.js","original":{"line":23,"column":0},"generated":{"line":1,"column":46}},{"source":"../node_modules/phaser/src/geom/ellipse/Equals.js","original":{"line":24,"column":0},"generated":{"line":1,"column":49}},{"source":"../node_modules/phaser/src/geom/ellipse/Equals.js","original":{"line":24,"column":0},"generated":{"line":1,"column":51}},{"source":"../node_modules/phaser/src/geom/ellipse/Equals.js","original":{"line":24,"column":0},"generated":{"line":1,"column":59}},{"source":"../node_modules/phaser/src/geom/ellipse/Equals.js","original":{"line":24,"column":0},"generated":{"line":1,"column":61}},{"source":"../node_modules/phaser/src/geom/ellipse/Equals.js","original":{"line":25,"column":0},"generated":{"line":1,"column":68}},{"source":"../node_modules/phaser/src/geom/ellipse/Equals.js","original":{"line":25,"column":0},"generated":{"line":1,"column":70}},{"source":"../node_modules/phaser/src/geom/ellipse/Equals.js","original":{"line":25,"column":0},"generated":{"line":1,"column":79}},{"source":"../node_modules/phaser/src/geom/ellipse/Equals.js","original":{"line":25,"column":0},"generated":{"line":1,"column":81}},{"source":"../node_modules/phaser/src/geom/ellipse/Equals.js","original":{"line":29,"column":0},"generated":{"line":1,"column":89}},{"source":"../node_modules/phaser/src/geom/ellipse/Equals.js","original":{"line":29,"column":0},"generated":{"line":1,"column":96}},{"source":"../node_modules/phaser/src/geom/ellipse/Equals.js","original":{"line":29,"column":0},"generated":{"line":1,"column":104}}],"sources":{"../node_modules/phaser/src/geom/ellipse/Equals.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Compares the `x`, `y`, `width` and `height` properties of the two given Ellipses.\r\n * Returns `true` if they all match, otherwise returns `false`.\r\n *\r\n * @function Phaser.Geom.Ellipse.Equals\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Ellipse} ellipse - The first Ellipse to compare.\r\n * @param {Phaser.Geom.Ellipse} toCompare - The second Ellipse to compare.\r\n *\r\n * @return {boolean} `true` if the two Ellipse equal each other, otherwise `false`.\r\n */\r\nvar Equals = function (ellipse, toCompare)\r\n{\r\n    return (\r\n        ellipse.x === toCompare.x &&\r\n        ellipse.y === toCompare.y &&\r\n        ellipse.width === toCompare.width &&\r\n        ellipse.height === toCompare.height\r\n    );\r\n};\r\n\r\nmodule.exports = Equals;\r\n"},"lineCount":null}},"error":null,"hash":"b798e2b803de91477ee61bd111a62ba1","cacheData":{"env":{}}}