{"id":"T6sl","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000},{"name":"./GetTilesWithin","loc":{"line":7,"column":29},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/tilemaps/components/GetTilesWithin.js"}],"generated":{"js":"var e=require(\"./GetTilesWithin\"),i=function(i,n,r,l,t,o,u){for(var d=e(r,l,t,o,null,u),x=0;x<d.length;x++)d[x]&&d[x].index===i&&(d[x].index=n)};module.exports=i;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":7,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":7,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":7,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":7,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":26,"column":0},"generated":{"line":1,"column":34}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":26,"column":0},"generated":{"line":1,"column":36}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":26,"column":0},"generated":{"line":1,"column":45}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":26,"column":0},"generated":{"line":1,"column":47}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":26,"column":0},"generated":{"line":1,"column":49}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":26,"column":0},"generated":{"line":1,"column":51}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":26,"column":0},"generated":{"line":1,"column":53}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":26,"column":0},"generated":{"line":1,"column":55}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":26,"column":0},"generated":{"line":1,"column":57}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":30,"column":0},"generated":{"line":1,"column":60}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":28,"column":0},"generated":{"line":1,"column":64}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":28,"column":0},"generated":{"line":1,"column":68}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":28,"column":0},"generated":{"line":1,"column":70}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":28,"column":0},"generated":{"line":1,"column":72}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":28,"column":0},"generated":{"line":1,"column":74}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":28,"column":0},"generated":{"line":1,"column":76}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":28,"column":0},"generated":{"line":1,"column":78}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":28,"column":0},"generated":{"line":1,"column":80}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":28,"column":0},"generated":{"line":1,"column":85}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":30,"column":0},"generated":{"line":1,"column":88}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":30,"column":0},"generated":{"line":1,"column":90}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":30,"column":0},"generated":{"line":1,"column":92}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":30,"column":0},"generated":{"line":1,"column":94}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":30,"column":0},"generated":{"line":1,"column":96}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":30,"column":0},"generated":{"line":1,"column":103}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":32,"column":0},"generated":{"line":1,"column":107}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":32,"column":0},"generated":{"line":1,"column":109}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":32,"column":0},"generated":{"line":1,"column":113}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":32,"column":0},"generated":{"line":1,"column":115}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":32,"column":0},"generated":{"line":1,"column":118}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":32,"column":0},"generated":{"line":1,"column":126}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":34,"column":0},"generated":{"line":1,"column":130}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":34,"column":0},"generated":{"line":1,"column":132}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":34,"column":0},"generated":{"line":1,"column":135}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":34,"column":0},"generated":{"line":1,"column":141}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":39,"column":0},"generated":{"line":1,"column":145}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":39,"column":0},"generated":{"line":1,"column":152}},{"source":"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js","original":{"line":39,"column":0},"generated":{"line":1,"column":160}}],"sources":{"../node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar GetTilesWithin = require('./GetTilesWithin');\r\n\r\n/**\r\n * Scans the given rectangular area (given in tile coordinates) for tiles with an index matching\r\n * `findIndex` and updates their index to match `newIndex`. This only modifies the index and does\r\n * not change collision information.\r\n *\r\n * @function Phaser.Tilemaps.Components.ReplaceByIndex\r\n * @private\r\n * @since 3.0.0\r\n *\r\n * @param {integer} findIndex - The index of the tile to search for.\r\n * @param {integer} newIndex - The index of the tile to replace it with.\r\n * @param {integer} [tileX=0] - The left most tile index (in tile coordinates) to use as the origin of the area.\r\n * @param {integer} [tileY=0] - The top most tile index (in tile coordinates) to use as the origin of the area.\r\n * @param {integer} [width=max width based on tileX] - How many tiles wide from the `tileX` index the area will be.\r\n * @param {integer} [height=max height based on tileY] - How many tiles tall from the `tileY` index the area will be.\r\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\r\n */\r\nvar ReplaceByIndex = function (findIndex, newIndex, tileX, tileY, width, height, layer)\r\n{\r\n    var tiles = GetTilesWithin(tileX, tileY, width, height, null, layer);\r\n\r\n    for (var i = 0; i < tiles.length; i++)\r\n    {\r\n        if (tiles[i] && tiles[i].index === findIndex)\r\n        {\r\n            tiles[i].index = newIndex;\r\n        }\r\n    }\r\n};\r\n\r\nmodule.exports = ReplaceByIndex;\r\n"},"lineCount":null}},"error":null,"hash":"6703afc3227a89b776400717d3d30665","cacheData":{"env":{}}}