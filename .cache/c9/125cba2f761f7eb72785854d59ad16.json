{"id":"CB3P","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000},{"name":"../Formats","loc":{"line":7,"column":22},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/tilemaps/Formats.js"},{"name":"./Parse2DArray","loc":{"line":8,"column":27},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/tilemaps/parsers/Parse2DArray.js"}],"generated":{"js":"var r=require(\"../Formats\"),t=require(\"./Parse2DArray\"),e=function(e,a,i,n,u){var o=a.trim().split(\"\\n\").map(function(r){return r.split(\",\")}),m=t(e,o,i,n,u);return m.format=r.CSV,m};module.exports=e;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":7,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":7,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":7,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":7,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":8,"column":0},"generated":{"line":1,"column":28}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":8,"column":0},"generated":{"line":1,"column":30}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":8,"column":0},"generated":{"line":1,"column":38}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":29,"column":0},"generated":{"line":1,"column":56}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":29,"column":0},"generated":{"line":1,"column":58}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":29,"column":0},"generated":{"line":1,"column":67}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":29,"column":0},"generated":{"line":1,"column":69}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":29,"column":0},"generated":{"line":1,"column":71}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":29,"column":0},"generated":{"line":1,"column":73}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":29,"column":0},"generated":{"line":1,"column":75}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":31,"column":0},"generated":{"line":1,"column":78}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":31,"column":0},"generated":{"line":1,"column":82}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":31,"column":0},"generated":{"line":1,"column":84}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":32,"column":0},"generated":{"line":1,"column":86}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":33,"column":0},"generated":{"line":1,"column":93}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":33,"column":0},"generated":{"line":1,"column":99}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":34,"column":0},"generated":{"line":1,"column":105}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":34,"column":0},"generated":{"line":1,"column":109}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":34,"column":0},"generated":{"line":1,"column":118}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":34,"column":0},"generated":{"line":1,"column":121}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":34,"column":0},"generated":{"line":1,"column":128}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":34,"column":0},"generated":{"line":1,"column":130}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":34,"column":0},"generated":{"line":1,"column":136}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":36,"column":0},"generated":{"line":1,"column":143}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":36,"column":0},"generated":{"line":1,"column":145}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":36,"column":0},"generated":{"line":1,"column":147}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":36,"column":0},"generated":{"line":1,"column":149}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":36,"column":0},"generated":{"line":1,"column":151}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":36,"column":0},"generated":{"line":1,"column":153}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":36,"column":0},"generated":{"line":1,"column":155}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":39,"column":0},"generated":{"line":1,"column":158}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":37,"column":0},"generated":{"line":1,"column":165}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":37,"column":0},"generated":{"line":1,"column":167}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":37,"column":0},"generated":{"line":1,"column":174}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":37,"column":0},"generated":{"line":1,"column":176}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":39,"column":0},"generated":{"line":1,"column":180}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":42,"column":0},"generated":{"line":1,"column":183}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":42,"column":0},"generated":{"line":1,"column":190}},{"source":"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js","original":{"line":42,"column":0},"generated":{"line":1,"column":198}}],"sources":{"../node_modules/phaser/src/tilemaps/parsers/ParseCSV.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Formats = require('../Formats');\r\nvar Parse2DArray = require('./Parse2DArray');\r\n\r\n/**\r\n * Parses a CSV string of tile indexes into a new MapData object with a single layer.\r\n *\r\n * @function Phaser.Tilemaps.Parsers.ParseCSV\r\n * @since 3.0.0\r\n *\r\n * @param {string} name - The name of the tilemap, used to set the name on the MapData.\r\n * @param {string} data - CSV string of tile indexes.\r\n * @param {integer} tileWidth - The width of a tile in pixels.\r\n * @param {integer} tileHeight - The height of a tile in pixels.\r\n * @param {boolean} insertNull - Controls how empty tiles, tiles with an index of -1, in the map\r\n * data are handled. If `true`, empty locations will get a value of `null`. If `false`, empty\r\n * location will get a Tile object with an index of -1. If you've a large sparsely populated map and\r\n * the tile data doesn't need to change then setting this value to `true` will help with memory\r\n * consumption. However if your map is small or you need to update the tiles dynamically, then leave\r\n * the default value set.\r\n *\r\n * @return {Phaser.Tilemaps.MapData} The resulting MapData object.\r\n */\r\nvar ParseCSV = function (name, data, tileWidth, tileHeight, insertNull)\r\n{\r\n    var array2D = data\r\n        .trim()\r\n        .split('\\n')\r\n        .map(function (row) { return row.split(','); });\r\n\r\n    var map = Parse2DArray(name, array2D, tileWidth, tileHeight, insertNull);\r\n    map.format = Formats.CSV;\r\n\r\n    return map;\r\n};\r\n\r\nmodule.exports = ParseCSV;\r\n"},"lineCount":null}},"error":null,"hash":"3201afe2f6908fd5605c9e100f91ccbd","cacheData":{"env":{}}}