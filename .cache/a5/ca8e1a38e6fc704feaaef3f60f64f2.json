{"id":"X1B3","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000}],"generated":{"js":"var e=function(e){var r=\"\";try{if(window.DOMParser)r=(new DOMParser).parseFromString(e,\"text/xml\");else(r=new ActiveXObject(\"Microsoft.XMLDOM\")).loadXML(e)}catch(t){r=null}return r&&r.documentElement&&!r.getElementsByTagName(\"parsererror\").length?r:null};module.exports=e;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":19,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":19,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":19,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":19,"column":0},"generated":{"line":1,"column":15}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":21,"column":0},"generated":{"line":1,"column":18}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":21,"column":0},"generated":{"line":1,"column":22}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":21,"column":0},"generated":{"line":1,"column":24}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":23,"column":0},"generated":{"line":1,"column":27}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":25,"column":0},"generated":{"line":1,"column":31}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":25,"column":0},"generated":{"line":1,"column":34}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":25,"column":0},"generated":{"line":1,"column":41}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":28,"column":0},"generated":{"line":1,"column":51}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":27,"column":0},"generated":{"line":1,"column":54}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":27,"column":0},"generated":{"line":1,"column":58}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":28,"column":0},"generated":{"line":1,"column":69}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":28,"column":0},"generated":{"line":1,"column":85}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":28,"column":0},"generated":{"line":1,"column":87}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":32,"column":0},"generated":{"line":1,"column":104}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":32,"column":0},"generated":{"line":1,"column":106}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":32,"column":0},"generated":{"line":1,"column":110}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":32,"column":0},"generated":{"line":1,"column":124}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":33,"column":0},"generated":{"line":1,"column":145}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":33,"column":0},"generated":{"line":1,"column":153}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":36,"column":0},"generated":{"line":1,"column":156}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":36,"column":0},"generated":{"line":1,"column":162}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":38,"column":0},"generated":{"line":1,"column":165}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":38,"column":0},"generated":{"line":1,"column":167}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":41,"column":0},"generated":{"line":1,"column":172}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":41,"column":0},"generated":{"line":1,"column":179}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":41,"column":0},"generated":{"line":1,"column":182}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":41,"column":0},"generated":{"line":1,"column":184}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":41,"column":0},"generated":{"line":1,"column":202}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":41,"column":0},"generated":{"line":1,"column":204}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":41,"column":0},"generated":{"line":1,"column":225}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":41,"column":0},"generated":{"line":1,"column":240}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":47,"column":0},"generated":{"line":1,"column":247}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":43,"column":0},"generated":{"line":1,"column":249}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":51,"column":0},"generated":{"line":1,"column":255}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":51,"column":0},"generated":{"line":1,"column":262}},{"source":"../node_modules/phaser/src/dom/ParseXML.js","original":{"line":51,"column":0},"generated":{"line":1,"column":270}}],"sources":{"../node_modules/phaser/src/dom/ParseXML.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Takes the given data string and parses it as XML.\r\n * First tries to use the window.DOMParser and reverts to the Microsoft.XMLDOM if that fails.\r\n * The parsed XML object is returned, or `null` if there was an error while parsing the data.\r\n *\r\n * @function Phaser.DOM.ParseXML\r\n * @since 3.0.0\r\n *\r\n * @param {string} data - The XML source stored in a string.\r\n *\r\n * @return {?(DOMParser|ActiveXObject)} The parsed XML data, or `null` if the data could not be parsed.\r\n */\r\nvar ParseXML = function (data)\r\n{\r\n    var xml = '';\r\n\r\n    try\r\n    {\r\n        if (window['DOMParser'])\r\n        {\r\n            var domparser = new DOMParser();\r\n            xml = domparser.parseFromString(data, 'text/xml');\r\n        }\r\n        else\r\n        {\r\n            xml = new ActiveXObject('Microsoft.XMLDOM');\r\n            xml.loadXML(data);\r\n        }\r\n    }\r\n    catch (e)\r\n    {\r\n        xml = null;\r\n    }\r\n\r\n    if (!xml || !xml.documentElement || xml.getElementsByTagName('parsererror').length)\r\n    {\r\n        return null;\r\n    }\r\n    else\r\n    {\r\n        return xml;\r\n    }\r\n};\r\n\r\nmodule.exports = ParseXML;\r\n"},"lineCount":null}},"error":null,"hash":"0176405fc1d4e188ff2c105b80dcdd01","cacheData":{"env":{}}}