{"id":"jIFE","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000}],"generated":{"js":"var r=function(r){return(r*=2)<1?.5*r*r*r*r:-.5*((r-=2)*r*r*r-2)};module.exports=r;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/math/easing/quartic/InOut.js","original":{"line":17,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/math/easing/quartic/InOut.js","original":{"line":17,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/math/easing/quartic/InOut.js","original":{"line":17,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/math/easing/quartic/InOut.js","original":{"line":17,"column":0},"generated":{"line":1,"column":15}},{"source":"../node_modules/phaser/src/math/easing/quartic/InOut.js","original":{"line":19,"column":0},"generated":{"line":1,"column":18}},{"source":"../node_modules/phaser/src/math/easing/quartic/InOut.js","original":{"line":19,"column":0},"generated":{"line":1,"column":25}},{"source":"../node_modules/phaser/src/math/easing/quartic/InOut.js","original":{"line":19,"column":0},"generated":{"line":1,"column":28}},{"source":"../node_modules/phaser/src/math/easing/quartic/InOut.js","original":{"line":19,"column":0},"generated":{"line":1,"column":31}},{"source":"../node_modules/phaser/src/math/easing/quartic/InOut.js","original":{"line":21,"column":0},"generated":{"line":1,"column":33}},{"source":"../node_modules/phaser/src/math/easing/quartic/InOut.js","original":{"line":21,"column":0},"generated":{"line":1,"column":36}},{"source":"../node_modules/phaser/src/math/easing/quartic/InOut.js","original":{"line":21,"column":0},"generated":{"line":1,"column":38}},{"source":"../node_modules/phaser/src/math/easing/quartic/InOut.js","original":{"line":21,"column":0},"generated":{"line":1,"column":40}},{"source":"../node_modules/phaser/src/math/easing/quartic/InOut.js","original":{"line":21,"column":0},"generated":{"line":1,"column":42}},{"source":"../node_modules/phaser/src/math/easing/quartic/InOut.js","original":{"line":25,"column":0},"generated":{"line":1,"column":45}},{"source":"../node_modules/phaser/src/math/easing/quartic/InOut.js","original":{"line":25,"column":0},"generated":{"line":1,"column":50}},{"source":"../node_modules/phaser/src/math/easing/quartic/InOut.js","original":{"line":25,"column":0},"generated":{"line":1,"column":53}},{"source":"../node_modules/phaser/src/math/easing/quartic/InOut.js","original":{"line":25,"column":0},"generated":{"line":1,"column":56}},{"source":"../node_modules/phaser/src/math/easing/quartic/InOut.js","original":{"line":25,"column":0},"generated":{"line":1,"column":58}},{"source":"../node_modules/phaser/src/math/easing/quartic/InOut.js","original":{"line":25,"column":0},"generated":{"line":1,"column":60}},{"source":"../node_modules/phaser/src/math/easing/quartic/InOut.js","original":{"line":25,"column":0},"generated":{"line":1,"column":62}},{"source":"../node_modules/phaser/src/math/easing/quartic/InOut.js","original":{"line":29,"column":0},"generated":{"line":1,"column":66}},{"source":"../node_modules/phaser/src/math/easing/quartic/InOut.js","original":{"line":29,"column":0},"generated":{"line":1,"column":73}},{"source":"../node_modules/phaser/src/math/easing/quartic/InOut.js","original":{"line":29,"column":0},"generated":{"line":1,"column":81}}],"sources":{"../node_modules/phaser/src/math/easing/quartic/InOut.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Quartic ease-in/out.\r\n *\r\n * @function Phaser.Math.Easing.Quartic.InOut\r\n * @since 3.0.0\r\n *\r\n * @param {number} v - The value to be tweened.\r\n *\r\n * @return {number} The tweened value.\r\n */\r\nvar InOut = function (v)\r\n{\r\n    if ((v *= 2) < 1)\r\n    {\r\n        return 0.5 * v * v * v * v;\r\n    }\r\n    else\r\n    {\r\n        return -0.5 * ((v -= 2) * v * v * v - 2);\r\n    }\r\n};\r\n\r\nmodule.exports = InOut;\r\n"},"lineCount":null}},"error":null,"hash":"a1021f4585e86763381ea8047dac0664","cacheData":{"env":{}}}