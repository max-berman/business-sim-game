{"id":"TNBX","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000},{"name":"./IsInLayerBounds","loc":{"line":7,"column":30},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/tilemaps/components/HasTileAt.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/tilemaps/components/IsInLayerBounds.js"}],"generated":{"js":"var r=require(\"./IsInLayerBounds\"),e=function(e,n,u){if(r(e,n,u)){var a=u.data[n][e];return null!==a&&a.index>-1}return!1};module.exports=e;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/tilemaps/components/HasTileAt.js","original":{"line":7,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/components/HasTileAt.js","original":{"line":7,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/tilemaps/components/HasTileAt.js","original":{"line":7,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/tilemaps/components/HasTileAt.js","original":{"line":7,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/phaser/src/tilemaps/components/HasTileAt.js","original":{"line":23,"column":0},"generated":{"line":1,"column":35}},{"source":"../node_modules/phaser/src/tilemaps/components/HasTileAt.js","original":{"line":23,"column":0},"generated":{"line":1,"column":37}},{"source":"../node_modules/phaser/src/tilemaps/components/HasTileAt.js","original":{"line":23,"column":0},"generated":{"line":1,"column":46}},{"source":"../node_modules/phaser/src/tilemaps/components/HasTileAt.js","original":{"line":23,"column":0},"generated":{"line":1,"column":48}},{"source":"../node_modules/phaser/src/tilemaps/components/HasTileAt.js","original":{"line":23,"column":0},"generated":{"line":1,"column":50}},{"source":"../node_modules/phaser/src/tilemaps/components/HasTileAt.js","original":{"line":25,"column":0},"generated":{"line":1,"column":53}},{"source":"../node_modules/phaser/src/tilemaps/components/HasTileAt.js","original":{"line":25,"column":0},"generated":{"line":1,"column":56}},{"source":"../node_modules/phaser/src/tilemaps/components/HasTileAt.js","original":{"line":25,"column":0},"generated":{"line":1,"column":58}},{"source":"../node_modules/phaser/src/tilemaps/components/HasTileAt.js","original":{"line":25,"column":0},"generated":{"line":1,"column":60}},{"source":"../node_modules/phaser/src/tilemaps/components/HasTileAt.js","original":{"line":25,"column":0},"generated":{"line":1,"column":62}},{"source":"../node_modules/phaser/src/tilemaps/components/HasTileAt.js","original":{"line":26,"column":0},"generated":{"line":1,"column":65}},{"source":"../node_modules/phaser/src/tilemaps/components/HasTileAt.js","original":{"line":27,"column":0},"generated":{"line":1,"column":66}},{"source":"../node_modules/phaser/src/tilemaps/components/HasTileAt.js","original":{"line":27,"column":0},"generated":{"line":1,"column":70}},{"source":"../node_modules/phaser/src/tilemaps/components/HasTileAt.js","original":{"line":27,"column":0},"generated":{"line":1,"column":72}},{"source":"../node_modules/phaser/src/tilemaps/components/HasTileAt.js","original":{"line":27,"column":0},"generated":{"line":1,"column":74}},{"source":"../node_modules/phaser/src/tilemaps/components/HasTileAt.js","original":{"line":27,"column":0},"generated":{"line":1,"column":79}},{"source":"../node_modules/phaser/src/tilemaps/components/HasTileAt.js","original":{"line":27,"column":0},"generated":{"line":1,"column":82}},{"source":"../node_modules/phaser/src/tilemaps/components/HasTileAt.js","original":{"line":28,"column":0},"generated":{"line":1,"column":85}},{"source":"../node_modules/phaser/src/tilemaps/components/HasTileAt.js","original":{"line":28,"column":0},"generated":{"line":1,"column":92}},{"source":"../node_modules/phaser/src/tilemaps/components/HasTileAt.js","original":{"line":28,"column":0},"generated":{"line":1,"column":99}},{"source":"../node_modules/phaser/src/tilemaps/components/HasTileAt.js","original":{"line":28,"column":0},"generated":{"line":1,"column":102}},{"source":"../node_modules/phaser/src/tilemaps/components/HasTileAt.js","original":{"line":28,"column":0},"generated":{"line":1,"column":104}},{"source":"../node_modules/phaser/src/tilemaps/components/HasTileAt.js","original":{"line":28,"column":0},"generated":{"line":1,"column":111}},{"source":"../node_modules/phaser/src/tilemaps/components/HasTileAt.js","original":{"line":32,"column":0},"generated":{"line":1,"column":113}},{"source":"../node_modules/phaser/src/tilemaps/components/HasTileAt.js","original":{"line":32,"column":0},"generated":{"line":1,"column":120}},{"source":"../node_modules/phaser/src/tilemaps/components/HasTileAt.js","original":{"line":37,"column":0},"generated":{"line":1,"column":123}},{"source":"../node_modules/phaser/src/tilemaps/components/HasTileAt.js","original":{"line":37,"column":0},"generated":{"line":1,"column":130}},{"source":"../node_modules/phaser/src/tilemaps/components/HasTileAt.js","original":{"line":37,"column":0},"generated":{"line":1,"column":138}}],"sources":{"../node_modules/phaser/src/tilemaps/components/HasTileAt.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar IsInLayerBounds = require('./IsInLayerBounds');\r\n\r\n/**\r\n * Checks if there is a tile at the given location (in tile coordinates) in the given layer. Returns\r\n * false if there is no tile or if the tile at that location has an index of -1.\r\n *\r\n * @function Phaser.Tilemaps.Components.HasTileAt\r\n * @private\r\n * @since 3.0.0\r\n *\r\n * @param {integer} tileX - X position to get the tile from (given in tile units, not pixels).\r\n * @param {integer} tileY - Y position to get the tile from (given in tile units, not pixels).\r\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\r\n * \r\n * @return {?boolean} Returns a boolean, or null if the layer given was invalid.\r\n */\r\nvar HasTileAt = function (tileX, tileY, layer)\r\n{\r\n    if (IsInLayerBounds(tileX, tileY, layer))\r\n    {\r\n        var tile = layer.data[tileY][tileX];\r\n        return (tile !== null && tile.index > -1);\r\n    }\r\n    else\r\n    {\r\n        return false;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = HasTileAt;\r\n"},"lineCount":null}},"error":null,"hash":"1008d968c170fc3849d353ebadb70acc","cacheData":{"env":{}}}