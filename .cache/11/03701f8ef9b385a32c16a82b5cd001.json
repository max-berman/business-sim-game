{"id":"tip6","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000},{"name":"../SmootherStep","loc":{"line":7,"column":27},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/math/interpolation/SmootherStepInterpolation.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/math/SmootherStep.js"}],"generated":{"js":"var e=require(\"../SmootherStep\"),r=function(r,o,t){return o+(t-o)*e(r,0,1)};module.exports=r;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/math/interpolation/SmootherStepInterpolation.js","original":{"line":7,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/math/interpolation/SmootherStepInterpolation.js","original":{"line":7,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/math/interpolation/SmootherStepInterpolation.js","original":{"line":7,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/math/interpolation/SmootherStepInterpolation.js","original":{"line":7,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/phaser/src/math/interpolation/SmootherStepInterpolation.js","original":{"line":22,"column":0},"generated":{"line":1,"column":33}},{"source":"../node_modules/phaser/src/math/interpolation/SmootherStepInterpolation.js","original":{"line":22,"column":0},"generated":{"line":1,"column":35}},{"source":"../node_modules/phaser/src/math/interpolation/SmootherStepInterpolation.js","original":{"line":22,"column":0},"generated":{"line":1,"column":44}},{"source":"../node_modules/phaser/src/math/interpolation/SmootherStepInterpolation.js","original":{"line":22,"column":0},"generated":{"line":1,"column":46}},{"source":"../node_modules/phaser/src/math/interpolation/SmootherStepInterpolation.js","original":{"line":22,"column":0},"generated":{"line":1,"column":48}},{"source":"../node_modules/phaser/src/math/interpolation/SmootherStepInterpolation.js","original":{"line":24,"column":0},"generated":{"line":1,"column":51}},{"source":"../node_modules/phaser/src/math/interpolation/SmootherStepInterpolation.js","original":{"line":24,"column":0},"generated":{"line":1,"column":58}},{"source":"../node_modules/phaser/src/math/interpolation/SmootherStepInterpolation.js","original":{"line":24,"column":0},"generated":{"line":1,"column":61}},{"source":"../node_modules/phaser/src/math/interpolation/SmootherStepInterpolation.js","original":{"line":24,"column":0},"generated":{"line":1,"column":63}},{"source":"../node_modules/phaser/src/math/interpolation/SmootherStepInterpolation.js","original":{"line":24,"column":0},"generated":{"line":1,"column":66}},{"source":"../node_modules/phaser/src/math/interpolation/SmootherStepInterpolation.js","original":{"line":24,"column":0},"generated":{"line":1,"column":68}},{"source":"../node_modules/phaser/src/math/interpolation/SmootherStepInterpolation.js","original":{"line":24,"column":0},"generated":{"line":1,"column":70}},{"source":"../node_modules/phaser/src/math/interpolation/SmootherStepInterpolation.js","original":{"line":24,"column":0},"generated":{"line":1,"column":72}},{"source":"../node_modules/phaser/src/math/interpolation/SmootherStepInterpolation.js","original":{"line":27,"column":0},"generated":{"line":1,"column":76}},{"source":"../node_modules/phaser/src/math/interpolation/SmootherStepInterpolation.js","original":{"line":27,"column":0},"generated":{"line":1,"column":83}},{"source":"../node_modules/phaser/src/math/interpolation/SmootherStepInterpolation.js","original":{"line":27,"column":0},"generated":{"line":1,"column":91}}],"sources":{"../node_modules/phaser/src/math/interpolation/SmootherStepInterpolation.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar SmootherStep = require('../SmootherStep');\r\n\r\n/**\r\n * A Smoother Step interpolation method.\r\n *\r\n * @function Phaser.Math.Interpolation.SmootherStep\r\n * @since 3.9.0\r\n * @see {@link https://en.wikipedia.org/wiki/Smoothstep#Variations}\r\n *\r\n * @param {number} t - The percentage of interpolation, between 0 and 1.\r\n * @param {number} min - The minimum value, also known as the 'left edge', assumed smaller than the 'right edge'.\r\n * @param {number} max - The maximum value, also known as the 'right edge', assumed greater than the 'left edge'.\r\n *\r\n * @return {number} The interpolated value.\r\n */\r\nvar SmootherStepInterpolation = function (t, min, max)\r\n{\r\n    return min + (max - min) * SmootherStep(t, 0, 1);\r\n};\r\n\r\nmodule.exports = SmootherStepInterpolation;\r\n"},"lineCount":null}},"error":null,"hash":"28c4709c61a4743a08fb7e086c4e1c9d","cacheData":{"env":{}}}