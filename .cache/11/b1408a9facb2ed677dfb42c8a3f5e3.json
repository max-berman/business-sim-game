{"id":"h9fC","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000}],"generated":{"js":"module.exports=\"animationcomplete-\";"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/animations/events/SPRITE_ANIMATION_KEY_COMPLETE_EVENT.js","original":{"line":22,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/animations/events/SPRITE_ANIMATION_KEY_COMPLETE_EVENT.js","original":{"line":22,"column":0},"generated":{"line":1,"column":7}},{"source":"../node_modules/phaser/src/animations/events/SPRITE_ANIMATION_KEY_COMPLETE_EVENT.js","original":{"line":22,"column":0},"generated":{"line":1,"column":15}}],"sources":{"../node_modules/phaser/src/animations/events/SPRITE_ANIMATION_KEY_COMPLETE_EVENT.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Sprite Animation Key Complete Event.\r\n * \r\n * This event is dispatched by a Sprite when a specific animation finishes playing on it.\r\n * \r\n * Listen for it on the Sprite using `sprite.on('animationcomplete-key', listener)` where `key` is the key of\r\n * the animation. For example, if you had an animation with the key 'explode' you should listen for `animationcomplete-explode`.\r\n *\r\n * @event Phaser.Animations.Events#SPRITE_ANIMATION_KEY_COMPLETE\r\n * @since 3.16.1\r\n * \r\n * @param {Phaser.Animations.Animation} animation - A reference to the Animation that completed.\r\n * @param {Phaser.Animations.AnimationFrame} frame - The current Animation Frame that the Animation completed on.\r\n * @param {Phaser.GameObjects.Sprite} gameObject - A reference to the Game Object on which the animation completed.\r\n */\r\nmodule.exports = 'animationcomplete-';\r\n"},"lineCount":null}},"error":null,"hash":"57777e31e7138b876ebfc962c2017998","cacheData":{"env":{}}}