{"id":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591206076000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000},{"name":"../gameobjects/GameObjectCreator","loc":{"line":7,"column":32},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/tilemaps/TilemapCreator.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/gameobjects/GameObjectCreator.js"},{"name":"./ParseToTilemap","loc":{"line":8,"column":29},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/tilemaps/TilemapCreator.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/tilemaps/ParseToTilemap.js"}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar GameObjectCreator = require('../gameobjects/GameObjectCreator');\r\nvar ParseToTilemap = require('./ParseToTilemap');\r\n\r\n/**\r\n * Creates a Tilemap from the given key or data, or creates a blank Tilemap if no key/data provided.\r\n * When loading from CSV or a 2D array, you should specify the tileWidth & tileHeight. When parsing\r\n * from a map from Tiled, the tileWidth, tileHeight, width & height will be pulled from the map\r\n * data. For an empty map, you should specify tileWidth, tileHeight, width & height.\r\n *\r\n * @method Phaser.GameObjects.GameObjectCreator#tilemap\r\n * @since 3.0.0\r\n * \r\n * @param {Phaser.Types.Tilemaps.TilemapConfig} [config] - The config options for the Tilemap.\r\n * \r\n * @return {Phaser.Tilemaps.Tilemap}\r\n */\r\nGameObjectCreator.register('tilemap', function (config)\r\n{\r\n    // Defaults are applied in ParseToTilemap\r\n    var c = (config !== undefined) ? config : {};\r\n\r\n    return ParseToTilemap(\r\n        this.scene,\r\n        c.key,\r\n        c.tileWidth,\r\n        c.tileHeight,\r\n        c.width,\r\n        c.height,\r\n        c.data,\r\n        c.insertNull\r\n    );\r\n});\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapCreator.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}}],"sources":{"../node_modules/phaser/src/tilemaps/TilemapCreator.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar GameObjectCreator = require('../gameobjects/GameObjectCreator');\r\nvar ParseToTilemap = require('./ParseToTilemap');\r\n\r\n/**\r\n * Creates a Tilemap from the given key or data, or creates a blank Tilemap if no key/data provided.\r\n * When loading from CSV or a 2D array, you should specify the tileWidth & tileHeight. When parsing\r\n * from a map from Tiled, the tileWidth, tileHeight, width & height will be pulled from the map\r\n * data. For an empty map, you should specify tileWidth, tileHeight, width & height.\r\n *\r\n * @method Phaser.GameObjects.GameObjectCreator#tilemap\r\n * @since 3.0.0\r\n * \r\n * @param {Phaser.Types.Tilemaps.TilemapConfig} [config] - The config options for the Tilemap.\r\n * \r\n * @return {Phaser.Tilemaps.Tilemap}\r\n */\r\nGameObjectCreator.register('tilemap', function (config)\r\n{\r\n    // Defaults are applied in ParseToTilemap\r\n    var c = (config !== undefined) ? config : {};\r\n\r\n    return ParseToTilemap(\r\n        this.scene,\r\n        c.key,\r\n        c.tileWidth,\r\n        c.tileHeight,\r\n        c.width,\r\n        c.height,\r\n        c.data,\r\n        c.insertNull\r\n    );\r\n});\r\n"},"lineCount":39}},"error":null,"hash":"affc5bfa71830677bc69f23191f57189","cacheData":{"env":{}}}