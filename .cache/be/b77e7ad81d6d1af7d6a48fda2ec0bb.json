{"id":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591206076000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000}],"generated":{"js":"/**\r\n * @author       Niklas von Hertzen (https://github.com/niklasvh/base64-arraybuffer)\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n\r\n/**\r\n * Converts an ArrayBuffer into a base64 string.\r\n * \r\n * The resulting string can optionally be a data uri if the `mediaType` argument is provided.\r\n * \r\n * See https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs for more details.\r\n *\r\n * @function Phaser.Utils.Base64.ArrayBufferToBase64\r\n * @since 3.18.0\r\n * \r\n * @param {ArrayBuffer} arrayBuffer - The Array Buffer to encode.\r\n * @param {string} [mediaType] - An optional media type, i.e. `audio/ogg` or `image/jpeg`. If included the resulting string will be a data URI.\r\n * \r\n * @return {string} The base64 encoded Array Buffer.\r\n */\r\nvar ArrayBufferToBase64 = function (arrayBuffer, mediaType)\r\n{\r\n    var bytes = new Uint8Array(arrayBuffer);\r\n    var len = bytes.length;\r\n\r\n    var base64 = (mediaType) ? 'data:' + mediaType + ';base64,' : '';\r\n\r\n    for (var i = 0; i < len; i += 3)\r\n    {\r\n        base64 += chars[bytes[i] >> 2];\r\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\r\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\r\n        base64 += chars[bytes[i + 2] & 63];\r\n    }\r\n\r\n    if ((len % 3) === 2)\r\n    {\r\n        base64 = base64.substring(0, base64.length - 1) + '=';\r\n    }\r\n    else if (len % 3 === 1)\r\n    {\r\n        base64 = base64.substring(0, base64.length - 2) + '==';\r\n    }\r\n  \r\n    return base64;\r\n};\r\n\r\nmodule.exports = ArrayBufferToBase64;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}}],"sources":{"../node_modules/phaser/src/utils/base64/ArrayBufferToBase64.js":"/**\r\n * @author       Niklas von Hertzen (https://github.com/niklasvh/base64-arraybuffer)\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n\r\n/**\r\n * Converts an ArrayBuffer into a base64 string.\r\n * \r\n * The resulting string can optionally be a data uri if the `mediaType` argument is provided.\r\n * \r\n * See https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs for more details.\r\n *\r\n * @function Phaser.Utils.Base64.ArrayBufferToBase64\r\n * @since 3.18.0\r\n * \r\n * @param {ArrayBuffer} arrayBuffer - The Array Buffer to encode.\r\n * @param {string} [mediaType] - An optional media type, i.e. `audio/ogg` or `image/jpeg`. If included the resulting string will be a data URI.\r\n * \r\n * @return {string} The base64 encoded Array Buffer.\r\n */\r\nvar ArrayBufferToBase64 = function (arrayBuffer, mediaType)\r\n{\r\n    var bytes = new Uint8Array(arrayBuffer);\r\n    var len = bytes.length;\r\n\r\n    var base64 = (mediaType) ? 'data:' + mediaType + ';base64,' : '';\r\n\r\n    for (var i = 0; i < len; i += 3)\r\n    {\r\n        base64 += chars[bytes[i] >> 2];\r\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\r\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\r\n        base64 += chars[bytes[i + 2] & 63];\r\n    }\r\n\r\n    if ((len % 3) === 2)\r\n    {\r\n        base64 = base64.substring(0, base64.length - 1) + '=';\r\n    }\r\n    else if (len % 3 === 1)\r\n    {\r\n        base64 = base64.substring(0, base64.length - 2) + '==';\r\n    }\r\n  \r\n    return base64;\r\n};\r\n\r\nmodule.exports = ArrayBufferToBase64;\r\n"},"lineCount":53}},"error":null,"hash":"7d7c3c8dd0d42e6022c8fd039dbd25c8","cacheData":{"env":{}}}