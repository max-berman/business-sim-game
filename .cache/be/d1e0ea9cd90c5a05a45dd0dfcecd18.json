{"id":"kuHI","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000}],"generated":{"js":"var r=function(r){var t=r.toString(16);return 1===t.length?\"0\"+t:t};module.exports=r;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/display/color/ComponentToHex.js","original":{"line":17,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/display/color/ComponentToHex.js","original":{"line":17,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/display/color/ComponentToHex.js","original":{"line":17,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/display/color/ComponentToHex.js","original":{"line":17,"column":0},"generated":{"line":1,"column":15}},{"source":"../node_modules/phaser/src/display/color/ComponentToHex.js","original":{"line":19,"column":0},"generated":{"line":1,"column":18}},{"source":"../node_modules/phaser/src/display/color/ComponentToHex.js","original":{"line":19,"column":0},"generated":{"line":1,"column":22}},{"source":"../node_modules/phaser/src/display/color/ComponentToHex.js","original":{"line":19,"column":0},"generated":{"line":1,"column":24}},{"source":"../node_modules/phaser/src/display/color/ComponentToHex.js","original":{"line":19,"column":0},"generated":{"line":1,"column":26}},{"source":"../node_modules/phaser/src/display/color/ComponentToHex.js","original":{"line":19,"column":0},"generated":{"line":1,"column":35}},{"source":"../node_modules/phaser/src/display/color/ComponentToHex.js","original":{"line":21,"column":0},"generated":{"line":1,"column":39}},{"source":"../node_modules/phaser/src/display/color/ComponentToHex.js","original":{"line":21,"column":0},"generated":{"line":1,"column":46}},{"source":"../node_modules/phaser/src/display/color/ComponentToHex.js","original":{"line":21,"column":0},"generated":{"line":1,"column":50}},{"source":"../node_modules/phaser/src/display/color/ComponentToHex.js","original":{"line":21,"column":0},"generated":{"line":1,"column":52}},{"source":"../node_modules/phaser/src/display/color/ComponentToHex.js","original":{"line":21,"column":0},"generated":{"line":1,"column":59}},{"source":"../node_modules/phaser/src/display/color/ComponentToHex.js","original":{"line":21,"column":0},"generated":{"line":1,"column":63}},{"source":"../node_modules/phaser/src/display/color/ComponentToHex.js","original":{"line":21,"column":0},"generated":{"line":1,"column":65}},{"source":"../node_modules/phaser/src/display/color/ComponentToHex.js","original":{"line":24,"column":0},"generated":{"line":1,"column":68}},{"source":"../node_modules/phaser/src/display/color/ComponentToHex.js","original":{"line":24,"column":0},"generated":{"line":1,"column":75}},{"source":"../node_modules/phaser/src/display/color/ComponentToHex.js","original":{"line":24,"column":0},"generated":{"line":1,"column":83}}],"sources":{"../node_modules/phaser/src/display/color/ComponentToHex.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Returns a string containing a hex representation of the given color component.\r\n *\r\n * @function Phaser.Display.Color.ComponentToHex\r\n * @since 3.0.0\r\n *\r\n * @param {integer} color - The color channel to get the hex value for, must be a value between 0 and 255.\r\n *\r\n * @return {string} A string of length 2 characters, i.e. 255 = ff, 100 = 64.\r\n */\r\nvar ComponentToHex = function (color)\r\n{\r\n    var hex = color.toString(16);\r\n\r\n    return (hex.length === 1) ? '0' + hex : hex;\r\n};\r\n\r\nmodule.exports = ComponentToHex;\r\n"},"lineCount":null}},"error":null,"hash":"be11202cfd9c1001b8ef0781d7de6129","cacheData":{"env":{}}}