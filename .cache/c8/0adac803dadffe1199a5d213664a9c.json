{"id":"gMDK","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000},{"name":"./PropertyValueSet","loc":{"line":7,"column":31},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/actions/SetScale.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/actions/PropertyValueSet.js"}],"generated":{"js":"var e=require(\"./PropertyValueSet\"),r=function(r,l,u,t,a,n,o){return null==u&&(u=l),e(r,\"scaleX\",l,t,n,o),e(r,\"scaleY\",u,a,n,o)};module.exports=r;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":7,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":7,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":7,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":7,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":32,"column":0},"generated":{"line":1,"column":36}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":32,"column":0},"generated":{"line":1,"column":38}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":32,"column":0},"generated":{"line":1,"column":47}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":32,"column":0},"generated":{"line":1,"column":49}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":32,"column":0},"generated":{"line":1,"column":51}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":32,"column":0},"generated":{"line":1,"column":53}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":32,"column":0},"generated":{"line":1,"column":55}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":32,"column":0},"generated":{"line":1,"column":57}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":32,"column":0},"generated":{"line":1,"column":59}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":38,"column":0},"generated":{"line":1,"column":62}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":34,"column":0},"generated":{"line":1,"column":69}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":34,"column":0},"generated":{"line":1,"column":75}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":34,"column":0},"generated":{"line":1,"column":79}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":34,"column":0},"generated":{"line":1,"column":81}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":36,"column":0},"generated":{"line":1,"column":84}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":36,"column":0},"generated":{"line":1,"column":86}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":36,"column":0},"generated":{"line":1,"column":88}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":36,"column":0},"generated":{"line":1,"column":97}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":36,"column":0},"generated":{"line":1,"column":99}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":36,"column":0},"generated":{"line":1,"column":101}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":36,"column":0},"generated":{"line":1,"column":103}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":38,"column":0},"generated":{"line":1,"column":106}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":38,"column":0},"generated":{"line":1,"column":108}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":38,"column":0},"generated":{"line":1,"column":110}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":38,"column":0},"generated":{"line":1,"column":119}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":38,"column":0},"generated":{"line":1,"column":121}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":38,"column":0},"generated":{"line":1,"column":123}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":38,"column":0},"generated":{"line":1,"column":125}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":41,"column":0},"generated":{"line":1,"column":129}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":41,"column":0},"generated":{"line":1,"column":136}},{"source":"../node_modules/phaser/src/actions/SetScale.js","original":{"line":41,"column":0},"generated":{"line":1,"column":144}}],"sources":{"../node_modules/phaser/src/actions/SetScale.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar PropertyValueSet = require('./PropertyValueSet');\r\n\r\n/**\r\n * Takes an array of Game Objects, or any objects that have the public properties `scaleX` and `scaleY`\r\n * and then sets them to the given values.\r\n *\r\n * The optional `stepX` and `stepY` properties are applied incrementally, multiplied by each item in the array.\r\n *\r\n * To use this with a Group: `SetScale(group.getChildren(), scaleX, scaleY, stepX, stepY)`\r\n *\r\n * @function Phaser.Actions.SetScale\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - The array of items to be updated by this action.\r\n * @param {number} scaleX - The amount to set the `scaleX` property to.\r\n * @param {number} [scaleY] - The amount to set the `scaleY` property to. If `undefined` or `null` it uses the `scaleX` value.\r\n * @param {number} [stepX=0] - This is added to the `scaleX` amount, multiplied by the iteration counter.\r\n * @param {number} [stepY=0] - This is added to the `scaleY` amount, multiplied by the iteration counter.\r\n * @param {integer} [index=0] - An optional offset to start searching from within the items array.\r\n * @param {integer} [direction=1] - The direction to iterate through the array. 1 is from beginning to end, -1 from end to beginning.\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of objects that were passed to this Action.\r\n */\r\nvar SetScale = function (items, scaleX, scaleY, stepX, stepY, index, direction)\r\n{\r\n    if (scaleY === undefined || scaleY === null) { scaleY = scaleX; }\r\n\r\n    PropertyValueSet(items, 'scaleX', scaleX, stepX, index, direction);\r\n\r\n    return PropertyValueSet(items, 'scaleY', scaleY, stepY, index, direction);\r\n};\r\n\r\nmodule.exports = SetScale;\r\n"},"lineCount":null}},"error":null,"hash":"6699088c8e05204cd323d8cbc2c81ce9","cacheData":{"env":{}}}