{"id":"pZSz","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000},{"name":"../../utils/Class","loc":{"line":7,"column":20},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/display/shader/BaseShader.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/utils/Class.js"}],"generated":{"js":"var i=require(\"../../utils/Class\"),o=new i({initialize:function(i,o,n,r){o&&\"\"!==o||(o=[\"precision mediump float;\",\"uniform vec2 resolution;\",\"varying vec2 fragCoord;\",\"void main () {\",\"    vec2 uv = fragCoord / resolution.xy;\",\"    gl_FragColor = vec4(uv.xyx, 1.0);\",\"}\"].join(\"\\n\")),n&&\"\"!==n||(n=[\"precision mediump float;\",\"uniform mat4 uProjectionMatrix;\",\"uniform mat4 uViewMatrix;\",\"uniform vec2 uResolution;\",\"attribute vec2 inPosition;\",\"varying vec2 fragCoord;\",\"void main () {\",\"gl_Position = uProjectionMatrix * uViewMatrix * vec4(inPosition, 1.0, 1.0);\",\"fragCoord = vec2(inPosition.x, uResolution.y - inPosition.y);\",\"}\"].join(\"\\n\")),void 0===r&&(r=null),this.key=i,this.fragmentSrc=o,this.vertexSrc=n,this.uniforms=r}});module.exports=o;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":7,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":7,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":7,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":7,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":35,"column":0},"generated":{"line":1,"column":35}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":35,"column":0},"generated":{"line":1,"column":37}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":35,"column":0},"generated":{"line":1,"column":41}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":35,"column":0},"generated":{"line":1,"column":43}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":37,"column":0},"generated":{"line":1,"column":44}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":39,"column":0},"generated":{"line":1,"column":55}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":39,"column":0},"generated":{"line":1,"column":64}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":39,"column":0},"generated":{"line":1,"column":66}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":39,"column":0},"generated":{"line":1,"column":68}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":39,"column":0},"generated":{"line":1,"column":70}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":41,"column":0},"generated":{"line":1,"column":73}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":41,"column":0},"generated":{"line":1,"column":76}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":41,"column":0},"generated":{"line":1,"column":81}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":43,"column":0},"generated":{"line":1,"column":85}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":43,"column":0},"generated":{"line":1,"column":87}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":44,"column":0},"generated":{"line":1,"column":88}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":46,"column":0},"generated":{"line":1,"column":115}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":48,"column":0},"generated":{"line":1,"column":142}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":50,"column":0},"generated":{"line":1,"column":168}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":51,"column":0},"generated":{"line":1,"column":185}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":52,"column":0},"generated":{"line":1,"column":228}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":53,"column":0},"generated":{"line":1,"column":268}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":54,"column":0},"generated":{"line":1,"column":273}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":54,"column":0},"generated":{"line":1,"column":278}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":57,"column":0},"generated":{"line":1,"column":285}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":57,"column":0},"generated":{"line":1,"column":288}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":57,"column":0},"generated":{"line":1,"column":293}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":59,"column":0},"generated":{"line":1,"column":297}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":59,"column":0},"generated":{"line":1,"column":299}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":60,"column":0},"generated":{"line":1,"column":300}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":62,"column":0},"generated":{"line":1,"column":327}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":63,"column":0},"generated":{"line":1,"column":361}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":64,"column":0},"generated":{"line":1,"column":389}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":66,"column":0},"generated":{"line":1,"column":417}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":68,"column":0},"generated":{"line":1,"column":446}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":70,"column":0},"generated":{"line":1,"column":472}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":71,"column":0},"generated":{"line":1,"column":489}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":72,"column":0},"generated":{"line":1,"column":567}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":73,"column":0},"generated":{"line":1,"column":631}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":74,"column":0},"generated":{"line":1,"column":636}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":74,"column":0},"generated":{"line":1,"column":641}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":77,"column":0},"generated":{"line":1,"column":653}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":77,"column":0},"generated":{"line":1,"column":657}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":77,"column":0},"generated":{"line":1,"column":661}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":77,"column":0},"generated":{"line":1,"column":663}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":86,"column":0},"generated":{"line":1,"column":669}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":86,"column":0},"generated":{"line":1,"column":674}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":86,"column":0},"generated":{"line":1,"column":678}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":95,"column":0},"generated":{"line":1,"column":680}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":95,"column":0},"generated":{"line":1,"column":685}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":95,"column":0},"generated":{"line":1,"column":697}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":104,"column":0},"generated":{"line":1,"column":699}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":104,"column":0},"generated":{"line":1,"column":704}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":104,"column":0},"generated":{"line":1,"column":714}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":113,"column":0},"generated":{"line":1,"column":716}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":113,"column":0},"generated":{"line":1,"column":721}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":113,"column":0},"generated":{"line":1,"column":730}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":118,"column":0},"generated":{"line":1,"column":735}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":118,"column":0},"generated":{"line":1,"column":742}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":118,"column":0},"generated":{"line":1,"column":750}}],"sources":{"../node_modules/phaser/src/display/shader/BaseShader.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\n\r\n/**\r\n * @classdesc\r\n * A BaseShader is a small resource class that contains the data required for a WebGL Shader to be created.\r\n * \r\n * It contains the raw source code to the fragment and vertex shader, as well as an object that defines\r\n * the uniforms the shader requires, if any.\r\n * \r\n * BaseShaders are stored in the Shader Cache, available in a Scene via `this.cache.shaders` and are referenced\r\n * by a unique key-based string. Retrieve them via `this.cache.shaders.get(key)`.\r\n * \r\n * BaseShaders are created automatically by the GLSL File Loader when loading an external shader resource.\r\n * They can also be created at runtime, allowing you to use dynamically generated shader source code.\r\n * \r\n * Default fragment and vertex source is used if not provided in the constructor, setting-up a basic shader,\r\n * suitable for debug rendering.\r\n *\r\n * @class BaseShader\r\n * @memberof Phaser.Display\r\n * @constructor\r\n * @since 3.17.0\r\n *\r\n * @param {string} key - The key of this shader. Must be unique within the shader cache.\r\n * @param {string} [fragmentSrc] - The fragment source for the shader.\r\n * @param {string} [vertexSrc] - The vertex source for the shader.\r\n * @param {any} [uniforms] - Optional object defining the uniforms the shader uses.\r\n */\r\nvar BaseShader = new Class({\r\n\r\n    initialize:\r\n\r\n    function BaseShader (key, fragmentSrc, vertexSrc, uniforms)\r\n    {\r\n        if (!fragmentSrc || fragmentSrc === '')\r\n        {\r\n            fragmentSrc = [\r\n                'precision mediump float;',\r\n\r\n                'uniform vec2 resolution;',\r\n\r\n                'varying vec2 fragCoord;',\r\n\r\n                'void main () {',\r\n                '    vec2 uv = fragCoord / resolution.xy;',\r\n                '    gl_FragColor = vec4(uv.xyx, 1.0);',\r\n                '}'\r\n            ].join('\\n');\r\n        }\r\n\r\n        if (!vertexSrc || vertexSrc === '')\r\n        {\r\n            vertexSrc = [\r\n                'precision mediump float;',\r\n\r\n                'uniform mat4 uProjectionMatrix;',\r\n                'uniform mat4 uViewMatrix;',\r\n                'uniform vec2 uResolution;',\r\n\r\n                'attribute vec2 inPosition;',\r\n\r\n                'varying vec2 fragCoord;',\r\n\r\n                'void main () {',\r\n                'gl_Position = uProjectionMatrix * uViewMatrix * vec4(inPosition, 1.0, 1.0);',\r\n                'fragCoord = vec2(inPosition.x, uResolution.y - inPosition.y);',\r\n                '}'\r\n            ].join('\\n');\r\n        }\r\n\r\n        if (uniforms === undefined) { uniforms = null; }\r\n\r\n        /**\r\n         * The key of this shader, unique within the shader cache of this Phaser game instance.\r\n         *\r\n         * @name Phaser.Display.BaseShader#key\r\n         * @type {string}\r\n         * @since 3.17.0\r\n         */\r\n        this.key = key;\r\n\r\n        /**\r\n         * The source code, as a string, of the fragment shader being used.\r\n         *\r\n         * @name Phaser.Display.BaseShader#fragmentSrc\r\n         * @type {string}\r\n         * @since 3.17.0\r\n         */\r\n        this.fragmentSrc = fragmentSrc;\r\n\r\n        /**\r\n         * The source code, as a string, of the vertex shader being used.\r\n         *\r\n         * @name Phaser.Display.BaseShader#vertexSrc\r\n         * @type {string}\r\n         * @since 3.17.0\r\n         */\r\n        this.vertexSrc = vertexSrc;\r\n\r\n        /**\r\n         * The default uniforms for this shader.\r\n         *\r\n         * @name Phaser.Display.BaseShader#uniforms\r\n         * @type {?any}\r\n         * @since 3.17.0\r\n         */\r\n        this.uniforms = uniforms;\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = BaseShader;\r\n"},"lineCount":null}},"error":null,"hash":"2eb2f2481c42fe4e1c194798a18d4dce","cacheData":{"env":{}}}