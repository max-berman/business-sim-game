{"id":"nlRR","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000}],"generated":{"js":"var o=function(o,r,n,t){return void 0===n&&(n=0),0===r?o:(o-=n,o=r*Math.round(o/r),t?(n+o)/r:n+o)};module.exports=o;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/math/snap/SnapTo.js","original":{"line":22,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/math/snap/SnapTo.js","original":{"line":22,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/math/snap/SnapTo.js","original":{"line":22,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/math/snap/SnapTo.js","original":{"line":22,"column":0},"generated":{"line":1,"column":15}},{"source":"../node_modules/phaser/src/math/snap/SnapTo.js","original":{"line":22,"column":0},"generated":{"line":1,"column":17}},{"source":"../node_modules/phaser/src/math/snap/SnapTo.js","original":{"line":22,"column":0},"generated":{"line":1,"column":19}},{"source":"../node_modules/phaser/src/math/snap/SnapTo.js","original":{"line":22,"column":0},"generated":{"line":1,"column":21}},{"source":"../node_modules/phaser/src/math/snap/SnapTo.js","original":{"line":26,"column":0},"generated":{"line":1,"column":24}},{"source":"../node_modules/phaser/src/math/snap/SnapTo.js","original":{"line":24,"column":0},"generated":{"line":1,"column":36}},{"source":"../node_modules/phaser/src/math/snap/SnapTo.js","original":{"line":24,"column":0},"generated":{"line":1,"column":40}},{"source":"../node_modules/phaser/src/math/snap/SnapTo.js","original":{"line":24,"column":0},"generated":{"line":1,"column":44}},{"source":"../node_modules/phaser/src/math/snap/SnapTo.js","original":{"line":24,"column":0},"generated":{"line":1,"column":46}},{"source":"../node_modules/phaser/src/math/snap/SnapTo.js","original":{"line":26,"column":0},"generated":{"line":1,"column":49}},{"source":"../node_modules/phaser/src/math/snap/SnapTo.js","original":{"line":26,"column":0},"generated":{"line":1,"column":53}},{"source":"../node_modules/phaser/src/math/snap/SnapTo.js","original":{"line":28,"column":0},"generated":{"line":1,"column":55}},{"source":"../node_modules/phaser/src/math/snap/SnapTo.js","original":{"line":31,"column":0},"generated":{"line":1,"column":58}},{"source":"../node_modules/phaser/src/math/snap/SnapTo.js","original":{"line":31,"column":0},"generated":{"line":1,"column":61}},{"source":"../node_modules/phaser/src/math/snap/SnapTo.js","original":{"line":32,"column":0},"generated":{"line":1,"column":63}},{"source":"../node_modules/phaser/src/math/snap/SnapTo.js","original":{"line":32,"column":0},"generated":{"line":1,"column":65}},{"source":"../node_modules/phaser/src/math/snap/SnapTo.js","original":{"line":32,"column":0},"generated":{"line":1,"column":67}},{"source":"../node_modules/phaser/src/math/snap/SnapTo.js","original":{"line":32,"column":0},"generated":{"line":1,"column":72}},{"source":"../node_modules/phaser/src/math/snap/SnapTo.js","original":{"line":32,"column":0},"generated":{"line":1,"column":78}},{"source":"../node_modules/phaser/src/math/snap/SnapTo.js","original":{"line":32,"column":0},"generated":{"line":1,"column":80}},{"source":"../node_modules/phaser/src/math/snap/SnapTo.js","original":{"line":34,"column":0},"generated":{"line":1,"column":83}},{"source":"../node_modules/phaser/src/math/snap/SnapTo.js","original":{"line":34,"column":0},"generated":{"line":1,"column":86}},{"source":"../node_modules/phaser/src/math/snap/SnapTo.js","original":{"line":34,"column":0},"generated":{"line":1,"column":88}},{"source":"../node_modules/phaser/src/math/snap/SnapTo.js","original":{"line":34,"column":0},"generated":{"line":1,"column":91}},{"source":"../node_modules/phaser/src/math/snap/SnapTo.js","original":{"line":34,"column":0},"generated":{"line":1,"column":93}},{"source":"../node_modules/phaser/src/math/snap/SnapTo.js","original":{"line":34,"column":0},"generated":{"line":1,"column":95}},{"source":"../node_modules/phaser/src/math/snap/SnapTo.js","original":{"line":37,"column":0},"generated":{"line":1,"column":99}},{"source":"../node_modules/phaser/src/math/snap/SnapTo.js","original":{"line":37,"column":0},"generated":{"line":1,"column":106}},{"source":"../node_modules/phaser/src/math/snap/SnapTo.js","original":{"line":37,"column":0},"generated":{"line":1,"column":114}}],"sources":{"../node_modules/phaser/src/math/snap/SnapTo.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Snap a value to nearest grid slice, using rounding.\r\n *\r\n * Example: if you have an interval gap of `5` and a position of `12`... you will snap to `10` whereas `14` will snap to `15`.\r\n *\r\n * @function Phaser.Math.Snap.To\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to snap.\r\n * @param {number} gap - The interval gap of the grid.\r\n * @param {number} [start=0] - Optional starting offset for gap.\r\n * @param {boolean} [divide=false] - If `true` it will divide the snapped value by the gap before returning.\r\n *\r\n * @return {number} The snapped value.\r\n */\r\nvar SnapTo = function (value, gap, start, divide)\r\n{\r\n    if (start === undefined) { start = 0; }\r\n\r\n    if (gap === 0)\r\n    {\r\n        return value;\r\n    }\r\n\r\n    value -= start;\r\n    value = gap * Math.round(value / gap);\r\n\r\n    return (divide) ? (start + value) / gap : start + value;\r\n};\r\n\r\nmodule.exports = SnapTo;\r\n"},"lineCount":null}},"error":null,"hash":"ba6d055e2a42c5daae036fc9679a86fd","cacheData":{"env":{}}}