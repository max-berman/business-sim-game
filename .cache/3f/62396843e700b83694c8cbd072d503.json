{"id":"ce9S","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000},{"name":"../../math/const","loc":{"line":7,"column":25},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/geom/line/NormalX.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/math/const.js"},{"name":"./Angle","loc":{"line":8,"column":20},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/geom/line/NormalX.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/geom/line/Angle.js"}],"generated":{"js":"var e=require(\"../../math/const\"),r=require(\"./Angle\"),t=function(t){return Math.cos(r(t)-e.TAU)};module.exports=t;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/geom/line/NormalX.js","original":{"line":7,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/geom/line/NormalX.js","original":{"line":7,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/geom/line/NormalX.js","original":{"line":7,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/geom/line/NormalX.js","original":{"line":7,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/phaser/src/geom/line/NormalX.js","original":{"line":8,"column":0},"generated":{"line":1,"column":34}},{"source":"../node_modules/phaser/src/geom/line/NormalX.js","original":{"line":8,"column":0},"generated":{"line":1,"column":36}},{"source":"../node_modules/phaser/src/geom/line/NormalX.js","original":{"line":8,"column":0},"generated":{"line":1,"column":44}},{"source":"../node_modules/phaser/src/geom/line/NormalX.js","original":{"line":20,"column":0},"generated":{"line":1,"column":55}},{"source":"../node_modules/phaser/src/geom/line/NormalX.js","original":{"line":20,"column":0},"generated":{"line":1,"column":57}},{"source":"../node_modules/phaser/src/geom/line/NormalX.js","original":{"line":20,"column":0},"generated":{"line":1,"column":66}},{"source":"../node_modules/phaser/src/geom/line/NormalX.js","original":{"line":22,"column":0},"generated":{"line":1,"column":69}},{"source":"../node_modules/phaser/src/geom/line/NormalX.js","original":{"line":22,"column":0},"generated":{"line":1,"column":76}},{"source":"../node_modules/phaser/src/geom/line/NormalX.js","original":{"line":22,"column":0},"generated":{"line":1,"column":81}},{"source":"../node_modules/phaser/src/geom/line/NormalX.js","original":{"line":22,"column":0},"generated":{"line":1,"column":85}},{"source":"../node_modules/phaser/src/geom/line/NormalX.js","original":{"line":22,"column":0},"generated":{"line":1,"column":87}},{"source":"../node_modules/phaser/src/geom/line/NormalX.js","original":{"line":22,"column":0},"generated":{"line":1,"column":90}},{"source":"../node_modules/phaser/src/geom/line/NormalX.js","original":{"line":22,"column":0},"generated":{"line":1,"column":92}},{"source":"../node_modules/phaser/src/geom/line/NormalX.js","original":{"line":25,"column":0},"generated":{"line":1,"column":98}},{"source":"../node_modules/phaser/src/geom/line/NormalX.js","original":{"line":25,"column":0},"generated":{"line":1,"column":105}},{"source":"../node_modules/phaser/src/geom/line/NormalX.js","original":{"line":25,"column":0},"generated":{"line":1,"column":113}}],"sources":{"../node_modules/phaser/src/geom/line/NormalX.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar MATH_CONST = require('../../math/const');\r\nvar Angle = require('./Angle');\r\n\r\n/**\r\n * Returns the x component of the normal vector of the given line.\r\n *\r\n * @function Phaser.Geom.Line.NormalX\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Line} line - The Line object to get the normal value from.\r\n *\r\n * @return {number} The x component of the normal vector of the line.\r\n */\r\nvar NormalX = function (line)\r\n{\r\n    return Math.cos(Angle(line) - MATH_CONST.TAU);\r\n};\r\n\r\nmodule.exports = NormalX;\r\n"},"lineCount":null}},"error":null,"hash":"a06528050a7aac7bfc334aa62840ebf6","cacheData":{"env":{}}}