{"id":"Bw1G","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000}],"generated":{"js":"var r=function(r,t,o,n){for(var e=[],u=r;u<=t;u++)if(o||n){var a=o?o+u.toString():u.toString();n&&(a=a.concat(n)),e.push(a)}else e.push(u);return e};module.exports=r;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":32,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":32,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":32,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":32,"column":0},"generated":{"line":1,"column":15}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":32,"column":0},"generated":{"line":1,"column":17}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":32,"column":0},"generated":{"line":1,"column":19}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":32,"column":0},"generated":{"line":1,"column":21}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":36,"column":0},"generated":{"line":1,"column":24}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":34,"column":0},"generated":{"line":1,"column":28}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":34,"column":0},"generated":{"line":1,"column":32}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":34,"column":0},"generated":{"line":1,"column":34}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":36,"column":0},"generated":{"line":1,"column":37}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":36,"column":0},"generated":{"line":1,"column":39}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":36,"column":0},"generated":{"line":1,"column":41}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":36,"column":0},"generated":{"line":1,"column":44}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":36,"column":0},"generated":{"line":1,"column":46}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":38,"column":0},"generated":{"line":1,"column":50}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":38,"column":0},"generated":{"line":1,"column":53}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":38,"column":0},"generated":{"line":1,"column":56}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":39,"column":0},"generated":{"line":1,"column":58}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":40,"column":0},"generated":{"line":1,"column":59}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":40,"column":0},"generated":{"line":1,"column":63}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":40,"column":0},"generated":{"line":1,"column":65}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":40,"column":0},"generated":{"line":1,"column":67}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":40,"column":0},"generated":{"line":1,"column":69}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":40,"column":0},"generated":{"line":1,"column":71}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":40,"column":0},"generated":{"line":1,"column":82}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":40,"column":0},"generated":{"line":1,"column":84}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":42,"column":0},"generated":{"line":1,"column":95}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":44,"column":0},"generated":{"line":1,"column":99}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":44,"column":0},"generated":{"line":1,"column":101}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":44,"column":0},"generated":{"line":1,"column":103}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":44,"column":0},"generated":{"line":1,"column":110}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":47,"column":0},"generated":{"line":1,"column":114}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":47,"column":0},"generated":{"line":1,"column":116}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":47,"column":0},"generated":{"line":1,"column":121}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":51,"column":0},"generated":{"line":1,"column":129}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":51,"column":0},"generated":{"line":1,"column":131}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":51,"column":0},"generated":{"line":1,"column":136}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":55,"column":0},"generated":{"line":1,"column":139}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":55,"column":0},"generated":{"line":1,"column":146}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":58,"column":0},"generated":{"line":1,"column":149}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":58,"column":0},"generated":{"line":1,"column":156}},{"source":"../node_modules/phaser/src/utils/array/NumberArray.js","original":{"line":58,"column":0},"generated":{"line":1,"column":164}}],"sources":{"../node_modules/phaser/src/utils/array/NumberArray.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Create an array representing the range of numbers (usually integers), between, and inclusive of,\r\n * the given `start` and `end` arguments. For example:\r\n *\r\n * `var array = numberArray(2, 4); // array = [2, 3, 4]`\r\n * `var array = numberArray(0, 9); // array = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]`\r\n *\r\n * This is equivalent to `numberArrayStep(start, end, 1)`.\r\n *\r\n * You can optionally provide a prefix and / or suffix string. If given the array will contain\r\n * strings, not integers. For example:\r\n *\r\n * `var array = numberArray(1, 4, 'Level '); // array = [\"Level 1\", \"Level 2\", \"Level 3\", \"Level 4\"]`\r\n * `var array = numberArray(5, 7, 'HD-', '.png'); // array = [\"HD-5.png\", \"HD-6.png\", \"HD-7.png\"]`\r\n *\r\n * @function Phaser.Utils.Array.NumberArray\r\n * @since 3.0.0\r\n *\r\n * @param {number} start - The minimum value the array starts with.\r\n * @param {number} end - The maximum value the array contains.\r\n * @param {string} [prefix] - Optional prefix to place before the number. If provided the array will contain strings, not integers.\r\n * @param {string} [suffix] - Optional suffix to place after the number. If provided the array will contain strings, not integers.\r\n *\r\n * @return {(number[]|string[])} The array of number values, or strings if a prefix or suffix was provided.\r\n */\r\nvar NumberArray = function (start, end, prefix, suffix)\r\n{\r\n    var result = [];\r\n\r\n    for (var i = start; i <= end; i++)\r\n    {\r\n        if (prefix || suffix)\r\n        {\r\n            var key = (prefix) ? prefix + i.toString() : i.toString();\r\n\r\n            if (suffix)\r\n            {\r\n                key = key.concat(suffix);\r\n            }\r\n\r\n            result.push(key);\r\n        }\r\n        else\r\n        {\r\n            result.push(i);\r\n        }\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nmodule.exports = NumberArray;\r\n"},"lineCount":null}},"error":null,"hash":"ed87688be053559e34b8a322594a39f0","cacheData":{"env":{}}}