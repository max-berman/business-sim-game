{"id":"../node_modules/phaser/src/physics/matter-js/World.js","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591206076000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000},{"name":"./lib/factory/Bodies","loc":{"line":7,"column":21},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/physics/matter-js/World.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/physics/matter-js/lib/factory/Bodies.js"},{"name":"./lib/body/Body","loc":{"line":17,"column":25},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/physics/matter-js/World.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/physics/matter-js/lib/body/Body.js"},{"name":"../../utils/Class","loc":{"line":9,"column":20},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/physics/matter-js/World.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/utils/Class.js"},{"name":"./lib/core/Common","loc":{"line":10,"column":21},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/physics/matter-js/World.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/physics/matter-js/lib/core/Common.js"},{"name":"./lib/body/Composite","loc":{"line":11,"column":24},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/physics/matter-js/World.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/physics/matter-js/lib/body/Composite.js"},{"name":"./lib/core/Engine","loc":{"line":12,"column":21},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/physics/matter-js/World.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/physics/matter-js/lib/core/Engine.js"},{"name":"eventemitter3","loc":{"line":13,"column":27},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/physics/matter-js/World.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/eventemitter3/index.js"},{"name":"./events","loc":{"line":14,"column":21},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/physics/matter-js/World.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/physics/matter-js/events/index.js"},{"name":"../../utils/object/GetFastValue","loc":{"line":15,"column":27},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/physics/matter-js/World.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/utils/object/GetFastValue.js"},{"name":"../../utils/object/GetValue","loc":{"line":16,"column":23},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/physics/matter-js/World.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/utils/object/GetValue.js"},{"name":"./lib/core/Events","loc":{"line":18,"column":27},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/physics/matter-js/World.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/physics/matter-js/lib/core/Events.js"},{"name":"./MatterTileBody","loc":{"line":19,"column":29},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/physics/matter-js/World.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/physics/matter-js/MatterTileBody.js"},{"name":"./lib/body/World","loc":{"line":20,"column":26},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/physics/matter-js/World.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/physics/matter-js/lib/body/World.js"},{"name":"./lib/geometry/Vector","loc":{"line":21,"column":21},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/physics/matter-js/World.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/physics/matter-js/lib/geometry/Vector.js"}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Bodies = require('./lib/factory/Bodies');\r\nvar Body = require('./lib/body/Body');\r\nvar Class = require('../../utils/Class');\r\nvar Common = require('./lib/core/Common');\r\nvar Composite = require('./lib/body/Composite');\r\nvar Engine = require('./lib/core/Engine');\r\nvar EventEmitter = require('eventemitter3');\r\nvar Events = require('./events');\r\nvar GetFastValue = require('../../utils/object/GetFastValue');\r\nvar GetValue = require('../../utils/object/GetValue');\r\nvar MatterBody = require('./lib/body/Body');\r\nvar MatterEvents = require('./lib/core/Events');\r\nvar MatterTileBody = require('./MatterTileBody');\r\nvar MatterWorld = require('./lib/body/World');\r\nvar Vector = require('./lib/geometry/Vector');\r\n\r\n/**\r\n * @classdesc\r\n * The Matter World class is responsible for managing one single instance of a Matter Physics World for Phaser.\r\n * \r\n * Access this via `this.matter.world` from within a Scene.\r\n * \r\n * This class creates a Matter JS World Composite along with the Matter JS Engine during instantiation. It also\r\n * handles delta timing, bounds, body and constraint creation and debug drawing.\r\n * \r\n * If you wish to access the Matter JS World object directly, see the `localWorld` property.\r\n * If you wish to access the Matter Engine directly, see the `engine` property.\r\n * \r\n * This class is an Event Emitter and will proxy _all_ Matter JS events, as they are received.\r\n *\r\n * @class World\r\n * @extends Phaser.Events.EventEmitter\r\n * @memberof Phaser.Physics.Matter\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Scene} scene - The Scene to which this Matter World instance belongs.\r\n * @param {Phaser.Types.Physics.Matter.MatterWorldConfig} config - The Matter World configuration object.\r\n */\r\nvar World = new Class({\r\n\r\n    Extends: EventEmitter,\r\n\r\n    initialize:\r\n\r\n    function World (scene, config)\r\n    {\r\n        EventEmitter.call(this);\r\n\r\n        /**\r\n         * The Scene to which this Matter World instance belongs.\r\n         *\r\n         * @name Phaser.Physics.Matter.World#scene\r\n         * @type {Phaser.Scene}\r\n         * @since 3.0.0\r\n         */\r\n        this.scene = scene;\r\n\r\n        /**\r\n         * An instance of the MatterJS Engine.\r\n         *\r\n         * @name Phaser.Physics.Matter.World#engine\r\n         * @type {MatterJS.Engine}\r\n         * @since 3.0.0\r\n         */\r\n        this.engine = Engine.create(config);\r\n\r\n        /**\r\n         * A `World` composite object that will contain all simulated bodies and constraints.\r\n         *\r\n         * @name Phaser.Physics.Matter.World#localWorld\r\n         * @type {MatterJS.World}\r\n         * @since 3.0.0\r\n         */\r\n        this.localWorld = this.engine.world;\r\n\r\n        var gravity = GetValue(config, 'gravity', null);\r\n\r\n        if (gravity)\r\n        {\r\n            this.setGravity(gravity.x, gravity.y, gravity.scale);\r\n        }\r\n        else if (gravity === false)\r\n        {\r\n            this.setGravity(0, 0, 0);\r\n        }\r\n\r\n        /**\r\n         * An object containing the 4 wall bodies that bound the physics world.\r\n         *\r\n         * @name Phaser.Physics.Matter.World#walls\r\n         * @type {object}\r\n         * @since 3.0.0\r\n         */\r\n        this.walls = { left: null, right: null, top: null, bottom: null };\r\n\r\n        /**\r\n         * A flag that toggles if the world is enabled or not.\r\n         *\r\n         * @name Phaser.Physics.Matter.World#enabled\r\n         * @type {boolean}\r\n         * @default true\r\n         * @since 3.0.0\r\n         */\r\n        this.enabled = GetValue(config, 'enabled', true);\r\n\r\n        /**\r\n         * The correction argument is an optional Number that specifies the time correction factor to apply to the update.\r\n         * This can help improve the accuracy of the simulation in cases where delta is changing between updates.\r\n         * The value of correction is defined as delta / lastDelta, i.e. the percentage change of delta over the last step.\r\n         * Therefore the value is always 1 (no correction) when delta is constant (or when no correction is desired, which is the default).\r\n         * See the paper on Time Corrected Verlet for more information.\r\n         *\r\n         * @name Phaser.Physics.Matter.World#correction\r\n         * @type {number}\r\n         * @default 1\r\n         * @since 3.4.0\r\n         */\r\n        this.correction = GetValue(config, 'correction', 1);\r\n\r\n        /**\r\n         * This function is called every time the core game loop steps, which is bound to the\r\n         * Request Animation Frame frequency unless otherwise modified.\r\n         * \r\n         * The function is passed two values: `time` and `delta`, both of which come from the game step values.\r\n         * \r\n         * It must return a number. This number is used as the delta value passed to Matter.Engine.update.\r\n         * \r\n         * You can override this function with your own to define your own timestep.\r\n         * \r\n         * If you need to update the Engine multiple times in a single game step then call\r\n         * `World.update` as many times as required. Each call will trigger the `getDelta` function.\r\n         * If you wish to have full control over when the Engine updates then see the property `autoUpdate`.\r\n         *\r\n         * You can also adjust the number of iterations that Engine.update performs.\r\n         * Use the Scene Matter Physics config object to set the following properties:\r\n         *\r\n         * positionIterations (defaults to 6)\r\n         * velocityIterations (defaults to 4)\r\n         * constraintIterations (defaults to 2)\r\n         *\r\n         * Adjusting these values can help performance in certain situations, depending on the physics requirements\r\n         * of your game.\r\n         *\r\n         * @name Phaser.Physics.Matter.World#getDelta\r\n         * @type {function}\r\n         * @since 3.4.0\r\n         */\r\n        this.getDelta = GetValue(config, 'getDelta', this.update60Hz);\r\n\r\n        var runnerConfig = GetFastValue(config, 'runner', {});\r\n\r\n        var hasFPS = GetFastValue(runnerConfig, 'fps', false);\r\n\r\n        var fps = GetFastValue(runnerConfig, 'fps', 60);\r\n\r\n        var delta = GetFastValue(runnerConfig, 'delta', 1000 / fps);\r\n        var deltaMin = GetFastValue(runnerConfig, 'deltaMin', 1000 / fps);\r\n        var deltaMax = GetFastValue(runnerConfig, 'deltaMax', 1000 / (fps * 0.5));\r\n\r\n        if (!hasFPS)\r\n        {\r\n            fps = 1000 / delta;\r\n        }\r\n\r\n        /**\r\n         * The Matter JS Runner Configuration object.\r\n         * \r\n         * This object is populated via the Matter Configuration object's `runner` property and is\r\n         * updated constantly during the game step.\r\n         *\r\n         * @name Phaser.Physics.Matter.World#runner\r\n         * @type {Phaser.Types.Physics.Matter.MatterRunnerConfig}\r\n         * @since 3.22.0\r\n         */\r\n        this.runner = {\r\n            fps: fps,\r\n            correction: GetFastValue(runnerConfig, 'correction', 1),\r\n            deltaSampleSize: GetFastValue(runnerConfig, 'deltaSampleSize', 60),\r\n            counterTimestamp: 0,\r\n            frameCounter: 0,\r\n            deltaHistory: [],\r\n            timePrev: null,\r\n            timeScalePrev: 1,\r\n            frameRequestId: null,\r\n            isFixed: GetFastValue(runnerConfig, 'isFixed', false),\r\n            delta: delta,\r\n            deltaMin: deltaMin,\r\n            deltaMax: deltaMax\r\n        };\r\n\r\n        /**\r\n         * Automatically call Engine.update every time the game steps.\r\n         * If you disable this then you are responsible for calling `World.step` directly from your game.\r\n         * If you call `set60Hz` or `set30Hz` then `autoUpdate` is reset to `true`.\r\n         *\r\n         * @name Phaser.Physics.Matter.World#autoUpdate\r\n         * @type {boolean}\r\n         * @default true\r\n         * @since 3.4.0\r\n         */\r\n        this.autoUpdate = GetValue(config, 'autoUpdate', true);\r\n\r\n        var debugConfig = GetValue(config, 'debug', false);\r\n\r\n        /**\r\n         * A flag that controls if the debug graphics will be drawn to or not.\r\n         *\r\n         * @name Phaser.Physics.Matter.World#drawDebug\r\n         * @type {boolean}\r\n         * @default false\r\n         * @since 3.0.0\r\n         */\r\n        this.drawDebug = (typeof(debugConfig) === 'object') ? true : debugConfig;\r\n\r\n        /**\r\n         * An instance of the Graphics object the debug bodies are drawn to, if enabled.\r\n         *\r\n         * @name Phaser.Physics.Matter.World#debugGraphic\r\n         * @type {Phaser.GameObjects.Graphics}\r\n         * @since 3.0.0\r\n         */\r\n        this.debugGraphic;\r\n\r\n        /**\r\n         * The debug configuration object.\r\n         * \r\n         * The values stored in this object are read from the Matter World Config `debug` property.\r\n         * \r\n         * When a new Body or Constraint is _added to the World_, they are given the values stored in this object,\r\n         * unless they have their own `render` object set that will override them.\r\n         * \r\n         * Note that while you can modify the values of properties in this object at run-time, it will not change\r\n         * any of the Matter objects _already added_. It will only impact objects newly added to the world, or one\r\n         * that is removed and then re-added at a later time.\r\n         *\r\n         * @name Phaser.Physics.Matter.World#debugConfig\r\n         * @type {Phaser.Types.Physics.Matter.MatterDebugConfig}\r\n         * @since 3.22.0\r\n         */\r\n        this.debugConfig = {\r\n            showAxes: GetFastValue(debugConfig, 'showAxes', false),\r\n            showAngleIndicator: GetFastValue(debugConfig, 'showAngleIndicator', false),\r\n            angleColor: GetFastValue(debugConfig, 'angleColor', 0xe81153),\r\n\r\n            showBroadphase: GetFastValue(debugConfig, 'showBroadphase', false),\r\n            broadphaseColor: GetFastValue(debugConfig, 'broadphaseColor', 0xffb400),\r\n\r\n            showBounds: GetFastValue(debugConfig, 'showBounds', false),\r\n            boundsColor: GetFastValue(debugConfig, 'boundsColor', 0xffffff),\r\n\r\n            showVelocity: GetFastValue(debugConfig, 'showVelocity', false),\r\n            velocityColor: GetFastValue(debugConfig, 'velocityColor', 0x00aeef),\r\n\r\n            showCollisions: GetFastValue(debugConfig, 'showCollisions', false),\r\n            collisionColor: GetFastValue(debugConfig, 'collisionColor', 0xf5950c),\r\n\r\n            showSeparations: GetFastValue(debugConfig, 'showSeparations', false),\r\n            separationColor: GetFastValue(debugConfig, 'separationColor', 0xffa500),\r\n\r\n            showBody: GetFastValue(debugConfig, 'showBody', true),\r\n            showStaticBody: GetFastValue(debugConfig, 'showStaticBody', true),\r\n            showInternalEdges: GetFastValue(debugConfig, 'showInternalEdges', false),\r\n\r\n            renderFill: GetFastValue(debugConfig, 'renderFill', false),\r\n            renderLine: GetFastValue(debugConfig, 'renderLine', true),\r\n\r\n            fillColor: GetFastValue(debugConfig, 'fillColor', 0x106909),\r\n            fillOpacity: GetFastValue(debugConfig, 'fillOpacity', 1),\r\n            lineColor: GetFastValue(debugConfig, 'lineColor', 0x28de19),\r\n            lineOpacity: GetFastValue(debugConfig, 'lineOpacity', 1),\r\n            lineThickness: GetFastValue(debugConfig, 'lineThickness', 1),\r\n\r\n            staticFillColor: GetFastValue(debugConfig, 'staticFillColor', 0x0d177b),\r\n            staticLineColor: GetFastValue(debugConfig, 'staticLineColor', 0x1327e4),\r\n\r\n            showSleeping: GetFastValue(debugConfig, 'showSleeping', false),\r\n            staticBodySleepOpacity: GetFastValue(debugConfig, 'staticBodySleepOpacity', 0.7),\r\n            sleepFillColor: GetFastValue(debugConfig, 'sleepFillColor', 0x464646),\r\n            sleepLineColor: GetFastValue(debugConfig, 'sleepLineColor', 0x999a99),\r\n\r\n            showSensors: GetFastValue(debugConfig, 'showSensors', true),\r\n            sensorFillColor: GetFastValue(debugConfig, 'sensorFillColor', 0x0d177b),\r\n            sensorLineColor: GetFastValue(debugConfig, 'sensorLineColor', 0x1327e4),\r\n\r\n            showPositions: GetFastValue(debugConfig, 'showPositions', true),\r\n            positionSize: GetFastValue(debugConfig, 'positionSize', 4),\r\n            positionColor: GetFastValue(debugConfig, 'positionColor', 0xe042da),\r\n\r\n            showJoint: GetFastValue(debugConfig, 'showJoint', true),\r\n            jointColor: GetFastValue(debugConfig, 'jointColor', 0xe0e042),\r\n            jointLineOpacity: GetFastValue(debugConfig, 'jointLineOpacity', 1),\r\n            jointLineThickness: GetFastValue(debugConfig, 'jointLineThickness', 2),\r\n\r\n            pinSize: GetFastValue(debugConfig, 'pinSize', 4),\r\n            pinColor: GetFastValue(debugConfig, 'pinColor', 0x42e0e0),\r\n\r\n            springColor: GetFastValue(debugConfig, 'springColor', 0xe042e0),\r\n\r\n            anchorColor: GetFastValue(debugConfig, 'anchorColor', 0xefefef),\r\n            anchorSize: GetFastValue(debugConfig, 'anchorSize', 4),\r\n\r\n            showConvexHulls: GetFastValue(debugConfig, 'showConvexHulls', false),\r\n            hullColor: GetFastValue(debugConfig, 'hullColor', 0xd703d0)\r\n        };\r\n\r\n        if (this.drawDebug)\r\n        {\r\n            this.createDebugGraphic();\r\n        }\r\n\r\n        this.setEventsProxy();\r\n\r\n        //  Create the walls\r\n\r\n        if (GetFastValue(config, 'setBounds', false))\r\n        {\r\n            var boundsConfig = config['setBounds'];\r\n\r\n            if (typeof boundsConfig === 'boolean')\r\n            {\r\n                this.setBounds();\r\n            }\r\n            else\r\n            {\r\n                var x = GetFastValue(boundsConfig, 'x', 0);\r\n                var y = GetFastValue(boundsConfig, 'y', 0);\r\n                var width = GetFastValue(boundsConfig, 'width', scene.sys.scale.width);\r\n                var height = GetFastValue(boundsConfig, 'height', scene.sys.scale.height);\r\n                var thickness = GetFastValue(boundsConfig, 'thickness', 64);\r\n                var left = GetFastValue(boundsConfig, 'left', true);\r\n                var right = GetFastValue(boundsConfig, 'right', true);\r\n                var top = GetFastValue(boundsConfig, 'top', true);\r\n                var bottom = GetFastValue(boundsConfig, 'bottom', true);\r\n\r\n                this.setBounds(x, y, width, height, thickness, left, right, top, bottom);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Sets the debug render style for the children of the given Matter Composite.\r\n     * \r\n     * Composites themselves do not render, but they can contain bodies, constraints and other composites that may do.\r\n     * So the children of this composite are passed to the `setBodyRenderStyle`, `setCompositeRenderStyle` and\r\n     * `setConstraintRenderStyle` methods accordingly.\r\n     * \r\n     * @method Phaser.Physics.Matter.World#setCompositeRenderStyle\r\n     * @since 3.22.0\r\n     *\r\n     * @param {MatterJS.CompositeType} composite - The Matter Composite to set the render style on.\r\n     * \r\n     * @return {this} This Matter World instance for method chaining.\r\n     */\r\n    setCompositeRenderStyle: function (composite)\r\n    {\r\n        var bodies = composite.bodies;\r\n        var constraints = composite.constraints;\r\n        var composites = composite.composites;\r\n\r\n        var i;\r\n        var obj;\r\n        var render;\r\n\r\n        for (i = 0; i < bodies.length; i++)\r\n        {\r\n            obj = bodies[i];\r\n            render = obj.render;\r\n\r\n            this.setBodyRenderStyle(obj, render.lineColor, render.lineOpacity, render.lineThickness, render.fillColor, render.fillOpacity);\r\n        }\r\n\r\n        for (i = 0; i < constraints.length; i++)\r\n        {\r\n            obj = constraints[i];\r\n            render = obj.render;\r\n\r\n            this.setConstraintRenderStyle(obj, render.lineColor, render.lineOpacity, render.lineThickness, render.pinSize, render.anchorColor, render.anchorSize);\r\n        }\r\n\r\n        for (i = 0; i < composites.length; i++)\r\n        {\r\n            obj = composites[i];\r\n\r\n            this.setCompositeRenderStyle(obj);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the debug render style for the given Matter Body.\r\n     * \r\n     * If you are using this on a Phaser Game Object, such as a Matter Sprite, then pass in the body property\r\n     * to this method, not the Game Object itself.\r\n     * \r\n     * If you wish to skip a parameter, so it retains its current value, pass `false` for it.\r\n     * \r\n     * If you wish to reset the Body render colors to the defaults found in the World Debug Config, then call\r\n     * this method with just the `body` parameter provided and no others.\r\n     * \r\n     * @method Phaser.Physics.Matter.World#setBodyRenderStyle\r\n     * @since 3.22.0\r\n     *\r\n     * @param {MatterJS.BodyType} body - The Matter Body to set the render style on.\r\n     * @param {number} [lineColor] - The line color. If `null` it will use the World Debug Config value.\r\n     * @param {number} [lineOpacity] - The line opacity, between 0 and 1. If `null` it will use the World Debug Config value.\r\n     * @param {number} [lineThickness] - The line thickness. If `null` it will use the World Debug Config value.\r\n     * @param {number} [fillColor] - The fill color. If `null` it will use the World Debug Config value.\r\n     * @param {number} [fillOpacity] - The fill opacity, between 0 and 1. If `null` it will use the World Debug Config value.\r\n     * \r\n     * @return {this} This Matter World instance for method chaining.\r\n     */\r\n    setBodyRenderStyle: function (body, lineColor, lineOpacity, lineThickness, fillColor, fillOpacity)\r\n    {\r\n        var render = body.render;\r\n        var config = this.debugConfig;\r\n\r\n        if (!render)\r\n        {\r\n            return this;\r\n        }\r\n\r\n        if (lineColor === undefined || lineColor === null)\r\n        {\r\n            lineColor = (body.isStatic) ? config.staticLineColor : config.lineColor;\r\n        }\r\n\r\n        if (lineOpacity === undefined || lineOpacity === null)\r\n        {\r\n            lineOpacity = config.lineOpacity;\r\n        }\r\n\r\n        if (lineThickness === undefined || lineThickness === null)\r\n        {\r\n            lineThickness = config.lineThickness;\r\n        }\r\n\r\n        if (fillColor === undefined || fillColor === null)\r\n        {\r\n            fillColor = (body.isStatic) ? config.staticFillColor : config.fillColor;\r\n        }\r\n\r\n        if (fillOpacity === undefined || fillOpacity === null)\r\n        {\r\n            fillOpacity = config.fillOpacity;\r\n        }\r\n\r\n        if (lineColor !== false)\r\n        {\r\n            render.lineColor = lineColor;\r\n        }\r\n\r\n        if (lineOpacity !== false)\r\n        {\r\n            render.lineOpacity = lineOpacity;\r\n        }\r\n\r\n        if (lineThickness !== false)\r\n        {\r\n            render.lineThickness = lineThickness;\r\n        }\r\n\r\n        if (fillColor !== false)\r\n        {\r\n            render.fillColor = fillColor;\r\n        }\r\n\r\n        if (fillOpacity !== false)\r\n        {\r\n            render.fillOpacity = fillOpacity;\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the debug render style for the given Matter Constraint.\r\n     * \r\n     * If you are using this on a Phaser Game Object, then pass in the body property\r\n     * to this method, not the Game Object itself.\r\n     * \r\n     * If you wish to skip a parameter, so it retains its current value, pass `false` for it.\r\n     * \r\n     * If you wish to reset the Constraint render colors to the defaults found in the World Debug Config, then call\r\n     * this method with just the `constraint` parameter provided and no others.\r\n     * \r\n     * @method Phaser.Physics.Matter.World#setConstraintRenderStyle\r\n     * @since 3.22.0\r\n     *\r\n     * @param {MatterJS.ConstraintType} constraint - The Matter Constraint to set the render style on.\r\n     * @param {number} [lineColor] - The line color. If `null` it will use the World Debug Config value.\r\n     * @param {number} [lineOpacity] - The line opacity, between 0 and 1. If `null` it will use the World Debug Config value.\r\n     * @param {number} [lineThickness] - The line thickness. If `null` it will use the World Debug Config value.\r\n     * @param {number} [pinSize] - If this constraint is a pin, this sets the size of the pin circle. If `null` it will use the World Debug Config value.\r\n     * @param {number} [anchorColor] - The color used when rendering this constraints anchors.  If `null` it will use the World Debug Config value.\r\n     * @param {number} [anchorSize] - The size of the anchor circle, if this constraint has anchors. If `null` it will use the World Debug Config value.\r\n     * \r\n     * @return {this} This Matter World instance for method chaining.\r\n     */\r\n    setConstraintRenderStyle: function (constraint, lineColor, lineOpacity, lineThickness, pinSize, anchorColor, anchorSize)\r\n    {\r\n        var render = constraint.render;\r\n        var config = this.debugConfig;\r\n\r\n        if (!render)\r\n        {\r\n            return this;\r\n        }\r\n\r\n        //  Reset them\r\n        if (lineColor === undefined || lineColor === null)\r\n        {\r\n            var type = render.type;\r\n\r\n            if (type === 'line')\r\n            {\r\n                lineColor = config.jointColor;\r\n            }\r\n            else if (type === 'pin')\r\n            {\r\n                lineColor = config.pinColor;\r\n            }\r\n            else if (type === 'spring')\r\n            {\r\n                lineColor = config.springColor;\r\n            }\r\n        }\r\n\r\n        if (lineOpacity === undefined || lineOpacity === null)\r\n        {\r\n            lineOpacity = config.jointLineOpacity;\r\n        }\r\n\r\n        if (lineThickness === undefined || lineThickness === null)\r\n        {\r\n            lineThickness = config.jointLineThickness;\r\n        }\r\n\r\n        if (pinSize === undefined || pinSize === null)\r\n        {\r\n            pinSize = config.pinSize;\r\n        }\r\n\r\n        if (anchorColor === undefined || anchorColor === null)\r\n        {\r\n            anchorColor = config.anchorColor;\r\n        }\r\n\r\n        if (anchorSize === undefined || anchorSize === null)\r\n        {\r\n            anchorSize = config.anchorSize;\r\n        }\r\n\r\n        if (lineColor !== false)\r\n        {\r\n            render.lineColor = lineColor;\r\n        }\r\n\r\n        if (lineOpacity !== false)\r\n        {\r\n            render.lineOpacity = lineOpacity;\r\n        }\r\n\r\n        if (lineThickness !== false)\r\n        {\r\n            render.lineThickness = lineThickness;\r\n        }\r\n\r\n        if (pinSize !== false)\r\n        {\r\n            render.pinSize = pinSize;\r\n        }\r\n\r\n        if (anchorColor !== false)\r\n        {\r\n            render.anchorColor = anchorColor;\r\n        }\r\n\r\n        if (anchorSize !== false)\r\n        {\r\n            render.anchorSize = anchorSize;\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * This internal method acts as a proxy between all of the Matter JS events and then re-emits them\r\n     * via this class.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#setEventsProxy\r\n     * @since 3.0.0\r\n     */\r\n    setEventsProxy: function ()\r\n    {\r\n        var _this = this;\r\n        var engine = this.engine;\r\n        var world = this.localWorld;\r\n\r\n        //  Inject debug styles\r\n\r\n        if (this.drawDebug)\r\n        {\r\n            MatterEvents.on(world, 'compositeModified', function (composite)\r\n            {\r\n                _this.setCompositeRenderStyle(composite);\r\n            });\r\n\r\n            MatterEvents.on(world, 'beforeAdd', function (event)\r\n            {\r\n                var objects = [].concat(event.object);\r\n    \r\n                for (var i = 0; i < objects.length; i++)\r\n                {\r\n                    var obj = objects[i];\r\n                    var render = obj.render;\r\n    \r\n                    if (obj.type === 'body')\r\n                    {\r\n                        _this.setBodyRenderStyle(obj, render.lineColor, render.lineOpacity, render.lineThickness, render.fillColor, render.fillOpacity);\r\n                    }\r\n                    else if (obj.type === 'composite')\r\n                    {\r\n                        _this.setCompositeRenderStyle(obj);\r\n                    }\r\n                    else if (obj.type === 'constraint')\r\n                    {\r\n                        _this.setConstraintRenderStyle(obj, render.lineColor, render.lineOpacity, render.lineThickness, render.pinSize, render.anchorColor, render.anchorSize);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        MatterEvents.on(world, 'beforeAdd', function (event)\r\n        {\r\n            _this.emit(Events.BEFORE_ADD, event);\r\n        });\r\n\r\n        MatterEvents.on(world, 'afterAdd', function (event)\r\n        {\r\n            _this.emit(Events.AFTER_ADD, event);\r\n        });\r\n\r\n        MatterEvents.on(world, 'beforeRemove', function (event)\r\n        {\r\n            _this.emit(Events.BEFORE_REMOVE, event);\r\n        });\r\n\r\n        MatterEvents.on(world, 'afterRemove', function (event)\r\n        {\r\n            _this.emit(Events.AFTER_REMOVE, event);\r\n        });\r\n\r\n        MatterEvents.on(engine, 'beforeUpdate', function (event)\r\n        {\r\n            _this.emit(Events.BEFORE_UPDATE, event);\r\n        });\r\n\r\n        MatterEvents.on(engine, 'afterUpdate', function (event)\r\n        {\r\n            _this.emit(Events.AFTER_UPDATE, event);\r\n        });\r\n\r\n        MatterEvents.on(engine, 'collisionStart', function (event)\r\n        {\r\n            var pairs = event.pairs;\r\n            var bodyA;\r\n            var bodyB;\r\n\r\n            if (pairs.length > 0)\r\n            {\r\n                bodyA = pairs[0].bodyA;\r\n                bodyB = pairs[0].bodyB;\r\n            }\r\n\r\n            _this.emit(Events.COLLISION_START, event, bodyA, bodyB);\r\n        });\r\n\r\n        MatterEvents.on(engine, 'collisionActive', function (event)\r\n        {\r\n            var pairs = event.pairs;\r\n            var bodyA;\r\n            var bodyB;\r\n\r\n            if (pairs.length > 0)\r\n            {\r\n                bodyA = pairs[0].bodyA;\r\n                bodyB = pairs[0].bodyB;\r\n            }\r\n\r\n            _this.emit(Events.COLLISION_ACTIVE, event, bodyA, bodyB);\r\n        });\r\n\r\n        MatterEvents.on(engine, 'collisionEnd', function (event)\r\n        {\r\n            var pairs = event.pairs;\r\n            var bodyA;\r\n            var bodyB;\r\n\r\n            if (pairs.length > 0)\r\n            {\r\n                bodyA = pairs[0].bodyA;\r\n                bodyB = pairs[0].bodyB;\r\n            }\r\n\r\n            _this.emit(Events.COLLISION_END, event, bodyA, bodyB);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Sets the bounds of the Physics world to match the given world pixel dimensions.\r\n     * You can optionally set which 'walls' to create: left, right, top or bottom.\r\n     * If none of the walls are given it will default to use the walls settings it had previously.\r\n     * I.e. if you previously told it to not have the left or right walls, and you then adjust the world size\r\n     * the newly created bounds will also not have the left and right walls.\r\n     * Explicitly state them in the parameters to override this.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#setBounds\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} [x=0] - The x coordinate of the top-left corner of the bounds.\r\n     * @param {number} [y=0] - The y coordinate of the top-left corner of the bounds.\r\n     * @param {number} [width] - The width of the bounds.\r\n     * @param {number} [height] - The height of the bounds.\r\n     * @param {number} [thickness=64] - The thickness of each wall, in pixels.\r\n     * @param {boolean} [left=true] - If true will create the left bounds wall.\r\n     * @param {boolean} [right=true] - If true will create the right bounds wall.\r\n     * @param {boolean} [top=true] - If true will create the top bounds wall.\r\n     * @param {boolean} [bottom=true] - If true will create the bottom bounds wall.\r\n     *\r\n     * @return {Phaser.Physics.Matter.World} This Matter World object.\r\n     */\r\n    setBounds: function (x, y, width, height, thickness, left, right, top, bottom)\r\n    {\r\n        if (x === undefined) { x = 0; }\r\n        if (y === undefined) { y = 0; }\r\n        if (width === undefined) { width = this.scene.sys.scale.width; }\r\n        if (height === undefined) { height = this.scene.sys.scale.height; }\r\n        if (thickness === undefined) { thickness = 64; }\r\n        if (left === undefined) { left = true; }\r\n        if (right === undefined) { right = true; }\r\n        if (top === undefined) { top = true; }\r\n        if (bottom === undefined) { bottom = true; }\r\n\r\n        this.updateWall(left, 'left', x - thickness, y - thickness, thickness, height + (thickness * 2));\r\n        this.updateWall(right, 'right', x + width, y - thickness, thickness, height + (thickness * 2));\r\n        this.updateWall(top, 'top', x, y - thickness, width, thickness);\r\n        this.updateWall(bottom, 'bottom', x, y + height, width, thickness);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Updates the 4 rectangle bodies that were created, if `setBounds` was set in the Matter config, to use\r\n     * the new positions and sizes. This method is usually only called internally via the `setBounds` method.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#updateWall\r\n     * @since 3.0.0\r\n     *\r\n     * @param {boolean} add - `true` if the walls are being added or updated, `false` to remove them from the world.\r\n     * @param {string} [position] - Either `left`, `right`, `top` or `bottom`. Only optional if `add` is `false`.\r\n     * @param {number} [x] - The horizontal position to place the walls at. Only optional if `add` is `false`.\r\n     * @param {number} [y] - The vertical position to place the walls at. Only optional if `add` is `false`.\r\n     * @param {number} [width] - The width of the walls, in pixels. Only optional if `add` is `false`.\r\n     * @param {number} [height] - The height of the walls, in pixels. Only optional if `add` is `false`.\r\n     */\r\n    updateWall: function (add, position, x, y, width, height)\r\n    {\r\n        var wall = this.walls[position];\r\n\r\n        if (add)\r\n        {\r\n            if (wall)\r\n            {\r\n                MatterWorld.remove(this.localWorld, wall);\r\n            }\r\n\r\n            //  adjust center\r\n            x += (width / 2);\r\n            y += (height / 2);\r\n\r\n            this.walls[position] = this.create(x, y, width, height, { isStatic: true, friction: 0, frictionStatic: 0 });\r\n        }\r\n        else\r\n        {\r\n            if (wall)\r\n            {\r\n                MatterWorld.remove(this.localWorld, wall);\r\n            }\r\n\r\n            this.walls[position] = null;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Creates a Phaser.GameObjects.Graphics object that is used to render all of the debug bodies and joints to.\r\n     * \r\n     * This method is called automatically by the constructor, if debugging has been enabled.\r\n     * \r\n     * The created Graphics object is automatically added to the Scene at 0x0 and given a depth of `Number.MAX_VALUE`,\r\n     * so it renders above all else in the Scene.\r\n     * \r\n     * The Graphics object is assigned to the `debugGraphic` property of this class and `drawDebug` is enabled.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#createDebugGraphic\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.GameObjects.Graphics} The newly created Graphics object.\r\n     */\r\n    createDebugGraphic: function ()\r\n    {\r\n        var graphic = this.scene.sys.add.graphics({ x: 0, y: 0 });\r\n\r\n        graphic.setDepth(Number.MAX_VALUE);\r\n\r\n        this.debugGraphic = graphic;\r\n\r\n        this.drawDebug = true;\r\n\r\n        return graphic;\r\n    },\r\n\r\n    /**\r\n     * Sets the world gravity and gravity scale to 0.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#disableGravity\r\n     * @since 3.0.0\r\n     *\r\n     * @return {this} This Matter World object.\r\n     */\r\n    disableGravity: function ()\r\n    {\r\n        this.localWorld.gravity.x = 0;\r\n        this.localWorld.gravity.y = 0;\r\n        this.localWorld.gravity.scale = 0;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the worlds gravity to the values given.\r\n     * \r\n     * Gravity effects all bodies in the world, unless they have the `ignoreGravity` flag set.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#setGravity\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} [x=0] - The world gravity x component.\r\n     * @param {number} [y=1] - The world gravity y component.\r\n     * @param {number} [scale=0.001] - The gravity scale factor.\r\n     *\r\n     * @return {this} This Matter World object.\r\n     */\r\n    setGravity: function (x, y, scale)\r\n    {\r\n        if (x === undefined) { x = 0; }\r\n        if (y === undefined) { y = 1; }\r\n\r\n        this.localWorld.gravity.x = x;\r\n        this.localWorld.gravity.y = y;\r\n\r\n        if (scale !== undefined)\r\n        {\r\n            this.localWorld.gravity.scale = scale;\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Creates a rectangle Matter body and adds it to the world.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#create\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The horizontal position of the body in the world.\r\n     * @param {number} y - The vertical position of the body in the world.\r\n     * @param {number} width - The width of the body.\r\n     * @param {number} height - The height of the body.\r\n     * @param {object} options - Optional Matter configuration object.\r\n     *\r\n     * @return {MatterJS.BodyType} The Matter.js body that was created.\r\n     */\r\n    create: function (x, y, width, height, options)\r\n    {\r\n        var body = Bodies.rectangle(x, y, width, height, options);\r\n\r\n        MatterWorld.add(this.localWorld, body);\r\n\r\n        return body;\r\n    },\r\n\r\n    /**\r\n     * Adds a Matter JS object, or array of objects, to the world.\r\n     * \r\n     * The objects should be valid Matter JS entities, such as a Body, Composite or Constraint.\r\n     * \r\n     * Triggers `beforeAdd` and `afterAdd` events.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#add\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(object|object[])} object - Can be single object, or an array, and can be a body, composite or constraint.\r\n     *\r\n     * @return {this} This Matter World object.\r\n     */\r\n    add: function (object)\r\n    {\r\n        MatterWorld.add(this.localWorld, object);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Removes a Matter JS object, or array of objects, from the world.\r\n     * \r\n     * The objects should be valid Matter JS entities, such as a Body, Composite or Constraint.\r\n     * \r\n     * Triggers `beforeRemove` and `afterRemove` events.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#remove\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(object|object[])} object - Can be single object, or an array, and can be a body, composite or constraint.\r\n     * @param {boolean} [deep=false] - Optionally search the objects children and recursively remove those as well.\r\n     *\r\n     * @return {this} This Matter World object.\r\n     */\r\n    remove: function (object, deep)\r\n    {\r\n        if (!Array.isArray(object))\r\n        {\r\n            object = [ object ];\r\n        }\r\n\r\n        for (var i = 0; i < object.length; i++)\r\n        {\r\n            var entity = object[i];\r\n\r\n            var body = (entity.body) ? entity.body : entity;\r\n\r\n            Composite.remove(this.localWorld, body, deep);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Removes a Matter JS constraint, or array of constraints, from the world.\r\n     * \r\n     * Triggers `beforeRemove` and `afterRemove` events.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#removeConstraint\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(MatterJS.ConstraintType|MatterJS.ConstraintType[])} constraint - A Matter JS Constraint, or an array of constraints, to be removed.\r\n     * @param {boolean} [deep=false] - Optionally search the objects children and recursively remove those as well.\r\n     *\r\n     * @return {this} This Matter World object.\r\n     */\r\n    removeConstraint: function (constraint, deep)\r\n    {\r\n        Composite.remove(this.localWorld, constraint, deep);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Adds `MatterTileBody` instances for all the colliding tiles within the given tilemap layer.\r\n     * \r\n     * Set the appropriate tiles in your layer to collide before calling this method!\r\n     *\r\n     * @method Phaser.Physics.Matter.World#convertTilemapLayer\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(Phaser.Tilemaps.DynamicTilemapLayer|Phaser.Tilemaps.StaticTilemapLayer)} tilemapLayer -\r\n     * An array of tiles.\r\n     * @param {object} [options] - Options to be passed to the MatterTileBody constructor. {@see Phaser.Physics.Matter.TileBody}\r\n     *\r\n     * @return {this} This Matter World object.\r\n     */\r\n    convertTilemapLayer: function (tilemapLayer, options)\r\n    {\r\n        var layerData = tilemapLayer.layer;\r\n        var tiles = tilemapLayer.getTilesWithin(0, 0, layerData.width, layerData.height, { isColliding: true });\r\n\r\n        this.convertTiles(tiles, options);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Adds `MatterTileBody` instances for the given tiles. This adds bodies regardless of whether the\r\n     * tiles are set to collide or not.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#convertTiles\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Tilemaps.Tile[]} tiles - An array of tiles.\r\n     * @param {object} [options] - Options to be passed to the MatterTileBody constructor. {@see Phaser.Physics.Matter.TileBody}\r\n     *\r\n     * @return {this} This Matter World object.\r\n     */\r\n    convertTiles: function (tiles, options)\r\n    {\r\n        if (tiles.length === 0)\r\n        {\r\n            return this;\r\n        }\r\n\r\n        for (var i = 0; i < tiles.length; i++)\r\n        {\r\n            new MatterTileBody(this, tiles[i], options);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Returns the next unique group index for which bodies will collide.\r\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will not collide.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#nextGroup\r\n     * @since 3.0.0\r\n     *\r\n     * @param {boolean} [isNonColliding=false] - If `true`, returns the next unique group index for which bodies will _not_ collide.\r\n     *\r\n     * @return {number} Unique category bitfield\r\n     */\r\n    nextGroup: function (isNonColliding)\r\n    {\r\n        return MatterBody.nextGroup(isNonColliding);\r\n    },\r\n\r\n    /**\r\n     * Returns the next unique category bitfield (starting after the initial default category 0x0001).\r\n     * There are 32 available.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#nextCategory\r\n     * @since 3.0.0\r\n     *\r\n     * @return {number} Unique category bitfield\r\n     */\r\n    nextCategory: function ()\r\n    {\r\n        return MatterBody.nextCategory();\r\n    },\r\n\r\n    /**\r\n     * Pauses this Matter World instance and sets `enabled` to `false`.\r\n     * \r\n     * A paused world will not run any simulations for the duration it is paused.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#pause\r\n     * @fires Phaser.Physics.Matter.Events#PAUSE\r\n     * @since 3.0.0\r\n     *\r\n     * @return {this} This Matter World object.\r\n     */\r\n    pause: function ()\r\n    {\r\n        this.enabled = false;\r\n\r\n        this.emit(Events.PAUSE);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Resumes this Matter World instance from a paused state and sets `enabled` to `true`.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#resume\r\n     * @fires Phaser.Physics.Matter.Events#RESUME\r\n     * @since 3.0.0\r\n     *\r\n     * @return {this} This Matter World object.\r\n     */\r\n    resume: function ()\r\n    {\r\n        this.enabled = true;\r\n\r\n        this.emit(Events.RESUME);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * The internal update method. This is called automatically by the parent Scene.\r\n     * \r\n     * Moves the simulation forward in time by delta ms. Uses `World.correction` value as an optional number that\r\n     * specifies the time correction factor to apply to the update. This can help improve the accuracy of the\r\n     * simulation in cases where delta is changing between updates. The value of correction is defined as `delta / lastDelta`,\r\n     * i.e. the percentage change of delta over the last step. Therefore the value is always 1 (no correction) when\r\n     * delta is constant (or when no correction is desired, which is the default).\r\n     * See the paper on Time Corrected Verlet for more information.\r\n     * \r\n     * Triggers `beforeUpdate` and `afterUpdate` events. Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\r\n     * \r\n     * If the World is paused, `update` is still run, but exits early and does not update the Matter Engine.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#update\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} time - The current time. Either a High Resolution Timer value if it comes from Request Animation Frame, or Date.now if using SetTimeout.\r\n     * @param {number} delta - The delta time in ms since the last frame. This is a smoothed and capped value based on the FPS rate.\r\n     */\r\n    update: function (time, delta)\r\n    {\r\n        if (!this.enabled || !this.autoUpdate)\r\n        {\r\n            return;\r\n        }\r\n\r\n        var engine = this.engine;\r\n        var runner = this.runner;\r\n\r\n        var timing = engine.timing;\r\n        var correction = this.correction;\r\n\r\n        if (runner.isFixed)\r\n        {\r\n            //  fixed timestep\r\n            delta = this.getDelta(time, delta);\r\n        }\r\n        else\r\n        {\r\n            //  dynamic timestep based on wall clock between calls\r\n            delta = (time - runner.timePrev) || runner.delta;\r\n            runner.timePrev = time;\r\n\r\n            // optimistically filter delta over a few frames, to improve stability\r\n            runner.deltaHistory.push(delta);\r\n            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\r\n            delta = Math.min.apply(null, runner.deltaHistory);\r\n            \r\n            // limit delta\r\n            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\r\n            delta = delta > runner.deltaMax ? runner.deltaMax : delta;\r\n\r\n            // correction for delta\r\n            correction = delta / runner.delta;\r\n\r\n            // update engine timing object\r\n            runner.delta = delta;\r\n        }\r\n\r\n        // time correction for time scaling\r\n        if (runner.timeScalePrev !== 0)\r\n        {\r\n            correction *= timing.timeScale / runner.timeScalePrev;\r\n        }\r\n\r\n        if (timing.timeScale === 0)\r\n        {\r\n            correction = 0;\r\n        }\r\n\r\n        runner.timeScalePrev = timing.timeScale;\r\n        runner.correction = correction;\r\n\r\n        // fps counter\r\n        runner.frameCounter += 1;\r\n\r\n        if (time - runner.counterTimestamp >= 1000)\r\n        {\r\n            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\r\n            runner.counterTimestamp = time;\r\n            runner.frameCounter = 0;\r\n        }\r\n\r\n        Engine.update(engine, delta, correction);\r\n    },\r\n\r\n    /**\r\n     * Manually advances the physics simulation by one iteration.\r\n     * \r\n     * You can optionally pass in the `delta` and `correction` values to be used by Engine.update.\r\n     * If undefined they use the Matter defaults of 60Hz and no correction.\r\n     * \r\n     * Calling `step` directly bypasses any checks of `enabled` or `autoUpdate`.\r\n     * \r\n     * It also ignores any custom `getDelta` functions, as you should be passing the delta\r\n     * value in to this call.\r\n     *\r\n     * You can adjust the number of iterations that Engine.update performs internally.\r\n     * Use the Scene Matter Physics config object to set the following properties:\r\n     *\r\n     * positionIterations (defaults to 6)\r\n     * velocityIterations (defaults to 4)\r\n     * constraintIterations (defaults to 2)\r\n     *\r\n     * Adjusting these values can help performance in certain situations, depending on the physics requirements\r\n     * of your game.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#step\r\n     * @since 3.4.0\r\n     *\r\n     * @param {number} [delta=16.666] - The delta value.\r\n     * @param {number} [correction=1] - Optional delta correction value.\r\n     */\r\n    step: function (delta, correction)\r\n    {\r\n        Engine.update(this.engine, delta, correction);\r\n    },\r\n\r\n    /**\r\n     * Runs the Matter Engine.update at a fixed timestep of 60Hz.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#update60Hz\r\n     * @since 3.4.0\r\n     *\r\n     * @return {number} The delta value to be passed to Engine.update.\r\n     */\r\n    update60Hz: function ()\r\n    {\r\n        return 1000 / 60;\r\n    },\r\n\r\n    /**\r\n     * Runs the Matter Engine.update at a fixed timestep of 30Hz.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#update30Hz\r\n     * @since 3.4.0\r\n     *\r\n     * @return {number} The delta value to be passed to Engine.update.\r\n     */\r\n    update30Hz: function ()\r\n    {\r\n        return 1000 / 30;\r\n    },\r\n\r\n    /**\r\n     * Returns `true` if the given body can be found within the World.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#has\r\n     * @since 3.22.0\r\n     * \r\n     * @param {(MatterJS.Body|Phaser.GameObjects.GameObject)} body - The Matter Body, or Game Object, to search for within the world.\r\n     * \r\n     * @return {MatterJS.BodyType[]} An array of all the Matter JS Bodies in this World.\r\n     */\r\n    has: function (body)\r\n    {\r\n        var src = (body.hasOwnProperty('body')) ? body.body : body;\r\n\r\n        return (Composite.get(this.localWorld, src.id, src.type) !== null);\r\n    },\r\n\r\n    /**\r\n     * Returns all the bodies in the Matter World, including all bodies in children, recursively.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#getAllBodies\r\n     * @since 3.22.0\r\n     * \r\n     * @return {MatterJS.BodyType[]} An array of all the Matter JS Bodies in this World.\r\n     */\r\n    getAllBodies: function ()\r\n    {\r\n        return Composite.allBodies(this.localWorld);\r\n    },\r\n\r\n    /**\r\n     * Returns all the constraints in the Matter World, including all constraints in children, recursively.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#getAllConstraints\r\n     * @since 3.22.0\r\n     * \r\n     * @return {MatterJS.ConstraintType[]} An array of all the Matter JS Constraints in this World.\r\n     */\r\n    getAllConstraints: function ()\r\n    {\r\n        return Composite.allConstraints(this.localWorld);\r\n    },\r\n\r\n    /**\r\n     * Returns all the composites in the Matter World, including all composites in children, recursively.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#getAllComposites\r\n     * @since 3.22.0\r\n     * \r\n     * @return {MatterJS.CompositeType[]} An array of all the Matter JS Composites in this World.\r\n     */\r\n    getAllComposites: function ()\r\n    {\r\n        return Composite.allComposites(this.localWorld);\r\n    },\r\n\r\n    /**\r\n     * Handles the rendering of bodies and debug information to the debug Graphics object, if enabled.\r\n     * \r\n     * This method is called automatically by the Scene after all processing has taken place.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#postUpdate\r\n     * @private\r\n     * @since 3.0.0\r\n     */\r\n    postUpdate: function ()\r\n    {\r\n        if (!this.drawDebug)\r\n        {\r\n            return;\r\n        }\r\n\r\n        var config = this.debugConfig;\r\n        var engine = this.engine;\r\n        var graphics = this.debugGraphic;\r\n\r\n        var bodies = Composite.allBodies(this.localWorld);\r\n\r\n        this.debugGraphic.clear();\r\n\r\n        if (config.showBroadphase && engine.broadphase.controller)\r\n        {\r\n            this.renderGrid(engine.broadphase, graphics, config.broadphaseColor, 0.5);\r\n        }\r\n\r\n        if (config.showBounds)\r\n        {\r\n            this.renderBodyBounds(bodies, graphics, config.boundsColor, 0.5);\r\n        }\r\n\r\n        if (config.showBody || config.showStaticBody)\r\n        {\r\n            this.renderBodies(bodies);\r\n        }\r\n\r\n        if (config.showJoint)\r\n        {\r\n            this.renderJoints();\r\n        }\r\n\r\n        if (config.showAxes || config.showAngleIndicator)\r\n        {\r\n            this.renderBodyAxes(bodies, graphics, config.showAxes, config.angleColor, 0.5);\r\n        }\r\n\r\n        if (config.showVelocity)\r\n        {\r\n            this.renderBodyVelocity(bodies, graphics, config.velocityColor, 1, 2);\r\n        }\r\n\r\n        if (config.showSeparations)\r\n        {\r\n            this.renderSeparations(engine.pairs.list, graphics, config.separationColor);\r\n        }\r\n\r\n        if (config.showCollisions)\r\n        {\r\n            this.renderCollisions(engine.pairs.list, graphics, config.collisionColor);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Renders the Engine Broadphase Controller Grid to the given Graphics instance.\r\n     * \r\n     * The debug renderer calls this method if the `showBroadphase` config value is set.\r\n     * \r\n     * This method is used internally by the Matter Debug Renderer, but is also exposed publically should\r\n     * you wish to render the Grid to your own Graphics instance.\r\n     * \r\n     * @method Phaser.Physics.Matter.World#renderGrid\r\n     * @since 3.22.0\r\n     * \r\n     * @param {MatterJS.Grid} grid - The Matter Grid to be rendered.\r\n     * @param {Phaser.GameObjects.Graphics} graphics - The Graphics object to render to.\r\n     * @param {number} lineColor - The line color.\r\n     * @param {number} lineOpacity - The line opacity, between 0 and 1.\r\n     * \r\n     * @return {this} This Matter World instance for method chaining.\r\n     */\r\n    renderGrid: function (grid, graphics, lineColor, lineOpacity)\r\n    {\r\n        graphics.lineStyle(1, lineColor, lineOpacity);\r\n\r\n        var bucketKeys = Common.keys(grid.buckets);\r\n\r\n        for (var i = 0; i < bucketKeys.length; i++)\r\n        {\r\n            var bucketId = bucketKeys[i];\r\n\r\n            if (grid.buckets[bucketId].length < 2)\r\n            {\r\n                continue;\r\n            }\r\n\r\n            var region = bucketId.split(/C|R/);\r\n\r\n            graphics.strokeRect(\r\n                parseInt(region[1], 10) * grid.bucketWidth,\r\n                parseInt(region[2], 10) * grid.bucketHeight,\r\n                grid.bucketWidth,\r\n                grid.bucketHeight\r\n            );\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Renders the list of Pair separations to the given Graphics instance.\r\n     * \r\n     * The debug renderer calls this method if the `showSeparations` config value is set.\r\n     * \r\n     * This method is used internally by the Matter Debug Renderer, but is also exposed publically should\r\n     * you wish to render the Grid to your own Graphics instance.\r\n     * \r\n     * @method Phaser.Physics.Matter.World#renderSeparations\r\n     * @since 3.22.0\r\n     * \r\n     * @param {MatterJS.Pair[]} pairs - An array of Matter Pairs to be rendered.\r\n     * @param {Phaser.GameObjects.Graphics} graphics - The Graphics object to render to.\r\n     * @param {number} lineColor - The line color.\r\n     * \r\n     * @return {this} This Matter World instance for method chaining.\r\n     */\r\n    renderSeparations: function (pairs, graphics, lineColor)\r\n    {\r\n        graphics.lineStyle(1, lineColor, 1);\r\n\r\n        for (var i = 0; i < pairs.length; i++)\r\n        {\r\n            var pair = pairs[i];\r\n\r\n            if (!pair.isActive)\r\n            {\r\n                continue;\r\n            }\r\n\r\n            var collision = pair.collision;\r\n            var bodyA = collision.bodyA;\r\n            var bodyB = collision.bodyB;\r\n            var posA = bodyA.position;\r\n            var posB = bodyB.position;\r\n            var penetration = collision.penetration;\r\n\r\n            var k = (!bodyA.isStatic && !bodyB.isStatic) ? 4 : 1;\r\n            \r\n            if (bodyB.isStatic)\r\n            {\r\n                k = 0;\r\n            }\r\n\r\n            graphics.lineBetween(\r\n                posB.x,\r\n                posB.y,\r\n                posB.x - (penetration.x * k),\r\n                posB.y - (penetration.y * k)\r\n            );\r\n\r\n            k = (!bodyA.isStatic && !bodyB.isStatic) ? 4 : 1;\r\n\r\n            if (bodyA.isStatic)\r\n            {\r\n                k = 0;\r\n            }\r\n\r\n            graphics.lineBetween(\r\n                posA.x,\r\n                posA.y,\r\n                posA.x - (penetration.x * k),\r\n                posA.y - (penetration.y * k)\r\n            );\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Renders the list of collision points and normals to the given Graphics instance.\r\n     * \r\n     * The debug renderer calls this method if the `showCollisions` config value is set.\r\n     * \r\n     * This method is used internally by the Matter Debug Renderer, but is also exposed publically should\r\n     * you wish to render the Grid to your own Graphics instance.\r\n     * \r\n     * @method Phaser.Physics.Matter.World#renderCollisions\r\n     * @since 3.22.0\r\n     * \r\n     * @param {MatterJS.Pair[]} pairs - An array of Matter Pairs to be rendered.\r\n     * @param {Phaser.GameObjects.Graphics} graphics - The Graphics object to render to.\r\n     * @param {number} lineColor - The line color.\r\n     * \r\n     * @return {this} This Matter World instance for method chaining.\r\n     */\r\n    renderCollisions: function (pairs, graphics, lineColor)\r\n    {\r\n        graphics.lineStyle(1, lineColor, 0.5);\r\n        graphics.fillStyle(lineColor, 1);\r\n\r\n        var i;\r\n        var pair;\r\n\r\n        //  Collision Positions\r\n\r\n        for (i = 0; i < pairs.length; i++)\r\n        {\r\n            pair = pairs[i];\r\n\r\n            if (!pair.isActive)\r\n            {\r\n                continue;\r\n            }\r\n\r\n            for (var j = 0; j < pair.activeContacts.length; j++)\r\n            {\r\n                var contact = pair.activeContacts[j];\r\n                var vertex = contact.vertex;\r\n\r\n                graphics.fillRect(vertex.x - 2, vertex.y - 2, 5, 5);\r\n            }\r\n        }\r\n\r\n        //  Collision Normals\r\n\r\n        for (i = 0; i < pairs.length; i++)\r\n        {\r\n            pair = pairs[i];\r\n\r\n            if (!pair.isActive)\r\n            {\r\n                continue;\r\n            }\r\n\r\n            var collision = pair.collision;\r\n            var contacts = pair.activeContacts;\r\n\r\n            if (contacts.length > 0)\r\n            {\r\n                var normalPosX = contacts[0].vertex.x;\r\n                var normalPosY = contacts[0].vertex.y;\r\n\r\n                if (contacts.length === 2)\r\n                {\r\n                    normalPosX = (contacts[0].vertex.x + contacts[1].vertex.x) / 2;\r\n                    normalPosY = (contacts[0].vertex.y + contacts[1].vertex.y) / 2;\r\n                }\r\n\r\n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic)\r\n                {\r\n                    graphics.lineBetween(\r\n                        normalPosX - collision.normal.x * 8,\r\n                        normalPosY - collision.normal.y * 8,\r\n                        normalPosX,\r\n                        normalPosY\r\n                    );\r\n                }\r\n                else\r\n                {\r\n                    graphics.lineBetween(\r\n                        normalPosX + collision.normal.x * 8,\r\n                        normalPosY + collision.normal.y * 8,\r\n                        normalPosX,\r\n                        normalPosY\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Renders the bounds of an array of Bodies to the given Graphics instance.\r\n     * \r\n     * If the body is a compound body, it will render the bounds for the parent compound.\r\n     * \r\n     * The debug renderer calls this method if the `showBounds` config value is set.\r\n     * \r\n     * This method is used internally by the Matter Debug Renderer, but is also exposed publically should\r\n     * you wish to render bounds to your own Graphics instance.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#renderBodyBounds\r\n     * @since 3.22.0\r\n     * \r\n     * @param {array} bodies - An array of bodies from the localWorld.\r\n     * @param {Phaser.GameObjects.Graphics} graphics - The Graphics object to render to.\r\n     * @param {number} lineColor - The line color.\r\n     * @param {number} lineOpacity - The line opacity, between 0 and 1.\r\n     */\r\n    renderBodyBounds: function (bodies, graphics, lineColor, lineOpacity)\r\n    {\r\n        graphics.lineStyle(1, lineColor, lineOpacity);\r\n\r\n        for (var i = 0; i < bodies.length; i++)\r\n        {\r\n            var body = bodies[i];\r\n\r\n            //  1) Don't show invisible bodies\r\n            if (!body.render.visible)\r\n            {\r\n                continue;\r\n            }\r\n\r\n            var bounds = body.bounds;\r\n\r\n            if (bounds)\r\n            {\r\n                graphics.strokeRect(\r\n                    bounds.min.x,\r\n                    bounds.min.y,\r\n                    bounds.max.x - bounds.min.x,\r\n                    bounds.max.y - bounds.min.y\r\n                );\r\n            }\r\n            else\r\n            {\r\n                var parts = body.parts;\r\n\r\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++)\r\n                {\r\n                    var part = parts[j];\r\n    \r\n                    graphics.strokeRect(\r\n                        part.bounds.min.x,\r\n                        part.bounds.min.y,\r\n                        part.bounds.max.x - part.bounds.min.x,\r\n                        part.bounds.max.y - part.bounds.min.y\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Renders either all axes, or a single axis indicator, for an array of Bodies, to the given Graphics instance.\r\n     * \r\n     * The debug renderer calls this method if the `showAxes` or `showAngleIndicator` config values are set.\r\n     * \r\n     * This method is used internally by the Matter Debug Renderer, but is also exposed publically should\r\n     * you wish to render bounds to your own Graphics instance.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#renderBodyAxes\r\n     * @since 3.22.0\r\n     * \r\n     * @param {array} bodies - An array of bodies from the localWorld.\r\n     * @param {Phaser.GameObjects.Graphics} graphics - The Graphics object to render to.\r\n     * @param {boolean} showAxes - If `true` it will render all body axes. If `false` it will render a single axis indicator.\r\n     * @param {number} lineColor - The line color.\r\n     * @param {number} lineOpacity - The line opacity, between 0 and 1.\r\n     */\r\n    renderBodyAxes: function (bodies, graphics, showAxes, lineColor, lineOpacity)\r\n    {\r\n        graphics.lineStyle(1, lineColor, lineOpacity);\r\n\r\n        for (var i = 0; i < bodies.length; i++)\r\n        {\r\n            var body = bodies[i];\r\n            var parts = body.parts;\r\n\r\n            //  1) Don't show invisible bodies\r\n            if (!body.render.visible)\r\n            {\r\n                continue;\r\n            }\r\n\r\n            var part;\r\n            var j;\r\n            var k;\r\n\r\n            if (showAxes)\r\n            {\r\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++)\r\n                {\r\n                    part = parts[j];\r\n    \r\n                    for (k = 0; k < part.axes.length; k++)\r\n                    {\r\n                        var axis = part.axes[k];\r\n\r\n                        graphics.lineBetween(\r\n                            part.position.x,\r\n                            part.position.y,\r\n                            part.position.x + axis.x * 20,\r\n                            part.position.y + axis.y * 20\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n            else\r\n            {\r\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++)\r\n                {\r\n                    part = parts[j];\r\n    \r\n                    for (k = 0; k < part.axes.length; k++)\r\n                    {\r\n                        graphics.lineBetween(\r\n                            part.position.x,\r\n                            part.position.y,\r\n                            (part.vertices[0].x + part.vertices[part.vertices.length - 1].x) / 2,\r\n                            (part.vertices[0].y + part.vertices[part.vertices.length - 1].y) / 2\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Renders a velocity indicator for an array of Bodies, to the given Graphics instance.\r\n     * \r\n     * The debug renderer calls this method if the `showVelocity` config value is set.\r\n     * \r\n     * This method is used internally by the Matter Debug Renderer, but is also exposed publically should\r\n     * you wish to render bounds to your own Graphics instance.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#renderBodyVelocity\r\n     * @since 3.22.0\r\n     * \r\n     * @param {array} bodies - An array of bodies from the localWorld.\r\n     * @param {Phaser.GameObjects.Graphics} graphics - The Graphics object to render to.\r\n     * @param {number} lineColor - The line color.\r\n     * @param {number} lineOpacity - The line opacity, between 0 and 1.\r\n     * @param {number} lineThickness - The line thickness.\r\n     */\r\n    renderBodyVelocity: function (bodies, graphics, lineColor, lineOpacity, lineThickness)\r\n    {\r\n        graphics.lineStyle(lineThickness, lineColor, lineOpacity);\r\n\r\n        for (var i = 0; i < bodies.length; i++)\r\n        {\r\n            var body = bodies[i];\r\n\r\n            //  1) Don't show invisible bodies\r\n            if (!body.render.visible)\r\n            {\r\n                continue;\r\n            }\r\n\r\n            graphics.lineBetween(\r\n                body.position.x,\r\n                body.position.y,\r\n                body.position.x + (body.position.x - body.positionPrev.x) * 2,\r\n                body.position.y + (body.position.y - body.positionPrev.y) * 2\r\n            );\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Renders the given array of Bodies to the debug graphics instance.\r\n     * \r\n     * Called automatically by the `postUpdate` method.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#renderBodies\r\n     * @private\r\n     * @since 3.14.0\r\n     * \r\n     * @param {array} bodies - An array of bodies from the localWorld.\r\n     */\r\n    renderBodies: function (bodies)\r\n    {\r\n        var graphics = this.debugGraphic;\r\n\r\n        var config = this.debugConfig;\r\n\r\n        var showBody = config.showBody;\r\n        var showStaticBody = config.showStaticBody;\r\n        var showSleeping = config.showSleeping;\r\n        var showInternalEdges = config.showInternalEdges;\r\n        var showConvexHulls = config.showConvexHulls;\r\n\r\n        var renderFill = config.renderFill;\r\n        var renderLine = config.renderLine;\r\n\r\n        var staticBodySleepOpacity = config.staticBodySleepOpacity;\r\n        var sleepFillColor = config.sleepFillColor;\r\n        var sleepLineColor = config.sleepLineColor;\r\n\r\n        var hullColor = config.hullColor;\r\n\r\n        for (var i = 0; i < bodies.length; i++)\r\n        {\r\n            var body = bodies[i];\r\n\r\n            //  1) Don't show invisible bodies\r\n            if (!body.render.visible)\r\n            {\r\n                continue;\r\n            }\r\n\r\n            //  2) Don't show static bodies, OR\r\n            //  3) Don't show dynamic bodies\r\n            if ((!showStaticBody && body.isStatic) || (!showBody && !body.isStatic))\r\n            {\r\n                continue;\r\n            }\r\n\r\n            var lineColor = body.render.lineColor;\r\n            var lineOpacity = body.render.lineOpacity;\r\n            var lineThickness = body.render.lineThickness;\r\n            var fillColor = body.render.fillColor;\r\n            var fillOpacity = body.render.fillOpacity;\r\n\r\n            if (showSleeping && body.isSleeping)\r\n            {\r\n                if (body.isStatic)\r\n                {\r\n                    lineOpacity *= staticBodySleepOpacity;\r\n                    fillOpacity *= staticBodySleepOpacity;\r\n                }\r\n                else\r\n                {\r\n                    lineColor = sleepLineColor;\r\n                    fillColor = sleepFillColor;\r\n                }\r\n            }\r\n\r\n            if (!renderFill)\r\n            {\r\n                fillColor = null;\r\n            }\r\n\r\n            if (!renderLine)\r\n            {\r\n                lineColor = null;\r\n            }\r\n\r\n            this.renderBody(body, graphics, showInternalEdges, lineColor, lineOpacity, lineThickness, fillColor, fillOpacity);\r\n\r\n            var partsLength = body.parts.length;\r\n\r\n            if (showConvexHulls && partsLength > 1)\r\n            {\r\n                this.renderConvexHull(body, graphics, hullColor, lineThickness);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Renders a single Matter Body to the given Phaser Graphics Game Object.\r\n     * \r\n     * This method is used internally by the Matter Debug Renderer, but is also exposed publically should\r\n     * you wish to render a Body to your own Graphics instance.\r\n     * \r\n     * If you don't wish to render a line around the body, set the `lineColor` parameter to `null`.\r\n     * Equally, if you don't wish to render a fill, set the `fillColor` parameter to `null`.\r\n     * \r\n     * @method Phaser.Physics.Matter.World#renderBody\r\n     * @since 3.22.0\r\n     * \r\n     * @param {MatterJS.BodyType} body - The Matter Body to be rendered.\r\n     * @param {Phaser.GameObjects.Graphics} graphics - The Graphics object to render to.\r\n     * @param {boolean} showInternalEdges - Render internal edges of the polygon?\r\n     * @param {number} [lineColor] - The line color.\r\n     * @param {number} [lineOpacity] - The line opacity, between 0 and 1.\r\n     * @param {number} [lineThickness=1] - The line thickness.\r\n     * @param {number} [fillColor] - The fill color.\r\n     * @param {number} [fillOpacity] - The fill opacity, between 0 and 1.\r\n     * \r\n     * @return {this} This Matter World instance for method chaining.\r\n     */\r\n    renderBody: function (body, graphics, showInternalEdges, lineColor, lineOpacity, lineThickness, fillColor, fillOpacity)\r\n    {\r\n        if (lineColor === undefined) { lineColor = null; }\r\n        if (lineOpacity === undefined) { lineOpacity = null; }\r\n        if (lineThickness === undefined) { lineThickness = 1; }\r\n        if (fillColor === undefined) { fillColor = null; }\r\n        if (fillOpacity === undefined) { fillOpacity = null; }\r\n\r\n        var config = this.debugConfig;\r\n\r\n        var sensorFillColor = config.sensorFillColor;\r\n        var sensorLineColor = config.sensorLineColor;\r\n\r\n        //  Handle compound parts\r\n        var parts = body.parts;\r\n        var partsLength = parts.length;\r\n\r\n        for (var k = (partsLength > 1) ? 1 : 0; k < partsLength; k++)\r\n        {\r\n            var part = parts[k];\r\n            var render = part.render;\r\n            var opacity = render.opacity;\r\n\r\n            if (!render.visible || opacity === 0 || (part.isSensor && !config.showSensors))\r\n            {\r\n                continue;\r\n            }\r\n\r\n            //  Part polygon\r\n            var circleRadius = part.circleRadius;\r\n\r\n            graphics.beginPath();\r\n\r\n            if (part.isSensor)\r\n            {\r\n                if (fillColor !== null)\r\n                {\r\n                    graphics.fillStyle(sensorFillColor, fillOpacity * opacity);\r\n                }\r\n    \r\n                if (lineColor !== null)\r\n                {\r\n                    graphics.lineStyle(lineThickness, sensorLineColor, lineOpacity * opacity);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if (fillColor !== null)\r\n                {\r\n                    graphics.fillStyle(fillColor, fillOpacity * opacity);\r\n                }\r\n    \r\n                if (lineColor !== null)\r\n                {\r\n                    graphics.lineStyle(lineThickness, lineColor, lineOpacity * opacity);\r\n                }\r\n            }\r\n\r\n            if (circleRadius)\r\n            {\r\n                graphics.arc(part.position.x, part.position.y, circleRadius, 0, 2 * Math.PI);\r\n            }\r\n            else\r\n            {\r\n                var vertices = part.vertices;\r\n                var vertLength = vertices.length;\r\n\r\n                graphics.moveTo(vertices[0].x, vertices[0].y);\r\n\r\n                for (var j = 1; j < vertLength; j++)\r\n                {\r\n                    var vert = vertices[j];\r\n\r\n                    if (!vertices[j - 1].isInternal || showInternalEdges)\r\n                    {\r\n                        graphics.lineTo(vert.x, vert.y);\r\n                    }\r\n                    else\r\n                    {\r\n                        graphics.moveTo(vert.x, vert.y);\r\n                    }\r\n\r\n                    if (j < vertLength && vert.isInternal && !showInternalEdges)\r\n                    {\r\n                        var nextIndex = (j + 1) % vertLength;\r\n\r\n                        graphics.moveTo(vertices[nextIndex].x, vertices[nextIndex].y);\r\n                    }\r\n                }\r\n                \r\n                graphics.closePath();\r\n            }\r\n\r\n            if (fillColor !== null)\r\n            {\r\n                graphics.fillPath();\r\n            }\r\n\r\n            if (lineColor !== null)\r\n            {\r\n                graphics.strokePath();\r\n            }\r\n        }\r\n\r\n        if (config.showPositions && !body.isStatic)\r\n        {\r\n            var px = body.position.x;\r\n            var py = body.position.y;\r\n            var hs = Math.ceil(config.positionSize / 2);\r\n\r\n            graphics.fillStyle(config.positionColor, 1);\r\n            graphics.fillRect(px - hs, py - hs, config.positionSize, config.positionSize);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Renders the Convex Hull for a single Matter Body to the given Phaser Graphics Game Object.\r\n     * \r\n     * This method is used internally by the Matter Debug Renderer, but is also exposed publically should\r\n     * you wish to render a Body hull to your own Graphics instance.\r\n     * \r\n     * @method Phaser.Physics.Matter.World#renderConvexHull\r\n     * @since 3.22.0\r\n     * \r\n     * @param {MatterJS.BodyType} body - The Matter Body to be rendered.\r\n     * @param {Phaser.GameObjects.Graphics} graphics - The Graphics object to render to.\r\n     * @param {number} hullColor - The color used to render the hull.\r\n     * @param {number} [lineThickness=1] - The hull line thickness.\r\n     * \r\n     * @return {this} This Matter World instance for method chaining.\r\n     */\r\n    renderConvexHull: function (body, graphics, hullColor, lineThickness)\r\n    {\r\n        if (lineThickness === undefined) { lineThickness = 1; }\r\n\r\n        var parts = body.parts;\r\n        var partsLength = parts.length;\r\n\r\n        //  Render Convex Hulls\r\n        if (partsLength > 1)\r\n        {\r\n            var verts = body.vertices;\r\n\r\n            graphics.lineStyle(lineThickness, hullColor);\r\n\r\n            graphics.beginPath();\r\n\r\n            graphics.moveTo(verts[0].x, verts[0].y);\r\n\r\n            for (var v = 1; v < verts.length; v++)\r\n            {\r\n                graphics.lineTo(verts[v].x, verts[v].y);\r\n            }\r\n            \r\n            graphics.lineTo(verts[0].x, verts[0].y);\r\n\r\n            graphics.strokePath();\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Renders all of the constraints in the world (unless they are specifically set to invisible).\r\n     * \r\n     * Called automatically by the `postUpdate` method.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#renderJoints\r\n     * @private\r\n     * @since 3.14.0\r\n     */\r\n    renderJoints: function ()\r\n    {\r\n        var graphics = this.debugGraphic;\r\n\r\n        // Render constraints \r\n        var constraints = Composite.allConstraints(this.localWorld);\r\n\r\n        for (var i = 0; i < constraints.length; i++)\r\n        {\r\n            var config = constraints[i].render;\r\n\r\n            var lineColor = config.lineColor;\r\n            var lineOpacity = config.lineOpacity;\r\n            var lineThickness = config.lineThickness;\r\n            var pinSize = config.pinSize;\r\n            var anchorColor = config.anchorColor;\r\n            var anchorSize = config.anchorSize;\r\n\r\n            this.renderConstraint(constraints[i], graphics, lineColor, lineOpacity, lineThickness, pinSize, anchorColor, anchorSize);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Renders a single Matter Constraint, such as a Pin or a Spring, to the given Phaser Graphics Game Object.\r\n     * \r\n     * This method is used internally by the Matter Debug Renderer, but is also exposed publically should\r\n     * you wish to render a Constraint to your own Graphics instance.\r\n     * \r\n     * @method Phaser.Physics.Matter.World#renderConstraint\r\n     * @since 3.22.0\r\n     * \r\n     * @param {MatterJS.ConstraintType} constraint - The Matter Constraint to render.\r\n     * @param {Phaser.GameObjects.Graphics} graphics - The Graphics object to render to.\r\n     * @param {number} lineColor - The line color.\r\n     * @param {number} lineOpacity - The line opacity, between 0 and 1.\r\n     * @param {number} lineThickness - The line thickness.\r\n     * @param {number} pinSize - If this constraint is a pin, this sets the size of the pin circle.\r\n     * @param {number} anchorColor - The color used when rendering this constraints anchors. Set to `null` to not render anchors.\r\n     * @param {number} anchorSize - The size of the anchor circle, if this constraint has anchors and is rendering them.\r\n     * \r\n     * @return {this} This Matter World instance for method chaining.\r\n     */\r\n    renderConstraint: function (constraint, graphics, lineColor, lineOpacity, lineThickness, pinSize, anchorColor, anchorSize)\r\n    {\r\n        var render = constraint.render;\r\n\r\n        if (!render.visible || !constraint.pointA || !constraint.pointB)\r\n        {\r\n            return this;\r\n        }\r\n\r\n        graphics.lineStyle(lineThickness, lineColor, lineOpacity);\r\n\r\n        var bodyA = constraint.bodyA;\r\n        var bodyB = constraint.bodyB;\r\n        var start;\r\n        var end;\r\n\r\n        if (bodyA)\r\n        {\r\n            start = Vector.add(bodyA.position, constraint.pointA);\r\n        }\r\n        else\r\n        {\r\n            start = constraint.pointA;\r\n        }\r\n\r\n        if (render.type === 'pin')\r\n        {\r\n            graphics.strokeCircle(start.x, start.y, pinSize);\r\n        }\r\n        else\r\n        {\r\n            if (bodyB)\r\n            {\r\n                end = Vector.add(bodyB.position, constraint.pointB);\r\n            }\r\n            else\r\n            {\r\n                end = constraint.pointB;\r\n            }\r\n\r\n            graphics.beginPath();\r\n            graphics.moveTo(start.x, start.y);\r\n\r\n            if (render.type === 'spring')\r\n            {\r\n                var delta = Vector.sub(end, start);\r\n                var normal = Vector.perp(Vector.normalise(delta));\r\n                var coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20));\r\n                var offset;\r\n\r\n                for (var j = 1; j < coils; j += 1)\r\n                {\r\n                    offset = (j % 2 === 0) ? 1 : -1;\r\n\r\n                    graphics.lineTo(\r\n                        start.x + delta.x * (j / coils) + normal.x * offset * 4,\r\n                        start.y + delta.y * (j / coils) + normal.y * offset * 4\r\n                    );\r\n                }\r\n            }\r\n\r\n            graphics.lineTo(end.x, end.y);\r\n        }\r\n\r\n        graphics.strokePath();\r\n\r\n        if (render.anchors && anchorSize > 0)\r\n        {\r\n            graphics.fillStyle(anchorColor);\r\n            graphics.fillCircle(start.x, start.y, anchorSize);\r\n            graphics.fillCircle(end.x, end.y, anchorSize);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Resets the internal collision IDs that Matter.JS uses for Body collision groups.\r\n     * \r\n     * You should call this before destroying your game if you need to restart the game\r\n     * again on the same page, without first reloading the page. Or, if you wish to\r\n     * consistently destroy a Scene that contains Matter.js and then run it again\r\n     * later in the same game.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#resetCollisionIDs\r\n     * @since 3.17.0\r\n     */\r\n    resetCollisionIDs: function ()\r\n    {\r\n        Body._nextCollidingGroupId = 1;\r\n        Body._nextNonCollidingGroupId = -1;\r\n        Body._nextCategory = 0x0001;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Will remove all Matter physics event listeners and clear the matter physics world,\r\n     * engine and any debug graphics, if any.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#shutdown\r\n     * @since 3.0.0\r\n     */\r\n    shutdown: function ()\r\n    {\r\n        MatterEvents.off(this.engine);\r\n\r\n        this.removeAllListeners();\r\n\r\n        MatterWorld.clear(this.localWorld, false);\r\n\r\n        Engine.clear(this.engine);\r\n\r\n        if (this.drawDebug)\r\n        {\r\n            this.debugGraphic.destroy();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Will remove all Matter physics event listeners and clear the matter physics world,\r\n     * engine and any debug graphics, if any.\r\n     *\r\n     * After destroying the world it cannot be re-used again.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#destroy\r\n     * @since 3.0.0\r\n     */\r\n    destroy: function ()\r\n    {\r\n        this.shutdown();\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = World;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":898,"column":0},"generated":{"line":898,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":899,"column":0},"generated":{"line":899,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":900,"column":0},"generated":{"line":900,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":901,"column":0},"generated":{"line":901,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":902,"column":0},"generated":{"line":902,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":903,"column":0},"generated":{"line":903,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":904,"column":0},"generated":{"line":904,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":905,"column":0},"generated":{"line":905,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":906,"column":0},"generated":{"line":906,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":907,"column":0},"generated":{"line":907,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":908,"column":0},"generated":{"line":908,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":909,"column":0},"generated":{"line":909,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":910,"column":0},"generated":{"line":910,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":911,"column":0},"generated":{"line":911,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":912,"column":0},"generated":{"line":912,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":913,"column":0},"generated":{"line":913,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":914,"column":0},"generated":{"line":914,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":915,"column":0},"generated":{"line":915,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":916,"column":0},"generated":{"line":916,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":917,"column":0},"generated":{"line":917,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":918,"column":0},"generated":{"line":918,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":919,"column":0},"generated":{"line":919,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":920,"column":0},"generated":{"line":920,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":921,"column":0},"generated":{"line":921,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":922,"column":0},"generated":{"line":922,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":923,"column":0},"generated":{"line":923,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":924,"column":0},"generated":{"line":924,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":925,"column":0},"generated":{"line":925,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":926,"column":0},"generated":{"line":926,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":927,"column":0},"generated":{"line":927,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":928,"column":0},"generated":{"line":928,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":929,"column":0},"generated":{"line":929,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":930,"column":0},"generated":{"line":930,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":931,"column":0},"generated":{"line":931,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":932,"column":0},"generated":{"line":932,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":933,"column":0},"generated":{"line":933,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":934,"column":0},"generated":{"line":934,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":935,"column":0},"generated":{"line":935,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":936,"column":0},"generated":{"line":936,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":937,"column":0},"generated":{"line":937,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":938,"column":0},"generated":{"line":938,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":939,"column":0},"generated":{"line":939,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":940,"column":0},"generated":{"line":940,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":941,"column":0},"generated":{"line":941,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":942,"column":0},"generated":{"line":942,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":943,"column":0},"generated":{"line":943,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":944,"column":0},"generated":{"line":944,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":945,"column":0},"generated":{"line":945,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":946,"column":0},"generated":{"line":946,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":947,"column":0},"generated":{"line":947,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":948,"column":0},"generated":{"line":948,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":949,"column":0},"generated":{"line":949,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":950,"column":0},"generated":{"line":950,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":951,"column":0},"generated":{"line":951,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":952,"column":0},"generated":{"line":952,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":953,"column":0},"generated":{"line":953,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":954,"column":0},"generated":{"line":954,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":955,"column":0},"generated":{"line":955,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":956,"column":0},"generated":{"line":956,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":957,"column":0},"generated":{"line":957,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":958,"column":0},"generated":{"line":958,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":959,"column":0},"generated":{"line":959,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":960,"column":0},"generated":{"line":960,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":961,"column":0},"generated":{"line":961,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":962,"column":0},"generated":{"line":962,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":963,"column":0},"generated":{"line":963,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":964,"column":0},"generated":{"line":964,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":965,"column":0},"generated":{"line":965,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":966,"column":0},"generated":{"line":966,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":967,"column":0},"generated":{"line":967,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":968,"column":0},"generated":{"line":968,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":969,"column":0},"generated":{"line":969,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":970,"column":0},"generated":{"line":970,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":971,"column":0},"generated":{"line":971,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":972,"column":0},"generated":{"line":972,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":973,"column":0},"generated":{"line":973,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":974,"column":0},"generated":{"line":974,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":975,"column":0},"generated":{"line":975,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":976,"column":0},"generated":{"line":976,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":977,"column":0},"generated":{"line":977,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":978,"column":0},"generated":{"line":978,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":979,"column":0},"generated":{"line":979,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":980,"column":0},"generated":{"line":980,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":981,"column":0},"generated":{"line":981,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":982,"column":0},"generated":{"line":982,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":983,"column":0},"generated":{"line":983,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":984,"column":0},"generated":{"line":984,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":985,"column":0},"generated":{"line":985,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":986,"column":0},"generated":{"line":986,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":987,"column":0},"generated":{"line":987,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":988,"column":0},"generated":{"line":988,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":989,"column":0},"generated":{"line":989,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":990,"column":0},"generated":{"line":990,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":991,"column":0},"generated":{"line":991,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":992,"column":0},"generated":{"line":992,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":993,"column":0},"generated":{"line":993,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":994,"column":0},"generated":{"line":994,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":995,"column":0},"generated":{"line":995,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":996,"column":0},"generated":{"line":996,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":997,"column":0},"generated":{"line":997,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":998,"column":0},"generated":{"line":998,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":999,"column":0},"generated":{"line":999,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1000,"column":0},"generated":{"line":1000,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1001,"column":0},"generated":{"line":1001,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1002,"column":0},"generated":{"line":1002,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1003,"column":0},"generated":{"line":1003,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1004,"column":0},"generated":{"line":1004,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1005,"column":0},"generated":{"line":1005,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1006,"column":0},"generated":{"line":1006,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1007,"column":0},"generated":{"line":1007,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1008,"column":0},"generated":{"line":1008,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1009,"column":0},"generated":{"line":1009,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1010,"column":0},"generated":{"line":1010,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1011,"column":0},"generated":{"line":1011,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1012,"column":0},"generated":{"line":1012,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1013,"column":0},"generated":{"line":1013,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1014,"column":0},"generated":{"line":1014,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1015,"column":0},"generated":{"line":1015,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1016,"column":0},"generated":{"line":1016,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1017,"column":0},"generated":{"line":1017,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1018,"column":0},"generated":{"line":1018,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1019,"column":0},"generated":{"line":1019,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1020,"column":0},"generated":{"line":1020,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1021,"column":0},"generated":{"line":1021,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1022,"column":0},"generated":{"line":1022,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1023,"column":0},"generated":{"line":1023,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1024,"column":0},"generated":{"line":1024,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1025,"column":0},"generated":{"line":1025,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1026,"column":0},"generated":{"line":1026,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1027,"column":0},"generated":{"line":1027,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1028,"column":0},"generated":{"line":1028,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1029,"column":0},"generated":{"line":1029,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1030,"column":0},"generated":{"line":1030,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1031,"column":0},"generated":{"line":1031,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1032,"column":0},"generated":{"line":1032,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1033,"column":0},"generated":{"line":1033,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1034,"column":0},"generated":{"line":1034,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1035,"column":0},"generated":{"line":1035,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1036,"column":0},"generated":{"line":1036,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1037,"column":0},"generated":{"line":1037,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1038,"column":0},"generated":{"line":1038,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1039,"column":0},"generated":{"line":1039,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1040,"column":0},"generated":{"line":1040,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1041,"column":0},"generated":{"line":1041,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1042,"column":0},"generated":{"line":1042,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1043,"column":0},"generated":{"line":1043,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1044,"column":0},"generated":{"line":1044,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1045,"column":0},"generated":{"line":1045,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1046,"column":0},"generated":{"line":1046,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1047,"column":0},"generated":{"line":1047,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1048,"column":0},"generated":{"line":1048,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1049,"column":0},"generated":{"line":1049,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1050,"column":0},"generated":{"line":1050,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1051,"column":0},"generated":{"line":1051,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1052,"column":0},"generated":{"line":1052,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1053,"column":0},"generated":{"line":1053,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1054,"column":0},"generated":{"line":1054,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1055,"column":0},"generated":{"line":1055,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1056,"column":0},"generated":{"line":1056,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1057,"column":0},"generated":{"line":1057,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1058,"column":0},"generated":{"line":1058,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1059,"column":0},"generated":{"line":1059,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1060,"column":0},"generated":{"line":1060,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1061,"column":0},"generated":{"line":1061,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1062,"column":0},"generated":{"line":1062,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1063,"column":0},"generated":{"line":1063,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1064,"column":0},"generated":{"line":1064,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1065,"column":0},"generated":{"line":1065,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1066,"column":0},"generated":{"line":1066,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1067,"column":0},"generated":{"line":1067,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1068,"column":0},"generated":{"line":1068,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1069,"column":0},"generated":{"line":1069,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1070,"column":0},"generated":{"line":1070,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1071,"column":0},"generated":{"line":1071,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1072,"column":0},"generated":{"line":1072,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1073,"column":0},"generated":{"line":1073,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1074,"column":0},"generated":{"line":1074,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1075,"column":0},"generated":{"line":1075,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1076,"column":0},"generated":{"line":1076,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1077,"column":0},"generated":{"line":1077,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1078,"column":0},"generated":{"line":1078,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1079,"column":0},"generated":{"line":1079,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1080,"column":0},"generated":{"line":1080,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1081,"column":0},"generated":{"line":1081,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1082,"column":0},"generated":{"line":1082,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1083,"column":0},"generated":{"line":1083,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1084,"column":0},"generated":{"line":1084,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1085,"column":0},"generated":{"line":1085,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1086,"column":0},"generated":{"line":1086,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1087,"column":0},"generated":{"line":1087,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1088,"column":0},"generated":{"line":1088,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1089,"column":0},"generated":{"line":1089,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1090,"column":0},"generated":{"line":1090,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1091,"column":0},"generated":{"line":1091,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1092,"column":0},"generated":{"line":1092,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1093,"column":0},"generated":{"line":1093,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1094,"column":0},"generated":{"line":1094,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1095,"column":0},"generated":{"line":1095,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1096,"column":0},"generated":{"line":1096,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1097,"column":0},"generated":{"line":1097,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1098,"column":0},"generated":{"line":1098,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1099,"column":0},"generated":{"line":1099,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1100,"column":0},"generated":{"line":1100,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1101,"column":0},"generated":{"line":1101,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1102,"column":0},"generated":{"line":1102,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1103,"column":0},"generated":{"line":1103,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1104,"column":0},"generated":{"line":1104,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1105,"column":0},"generated":{"line":1105,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1106,"column":0},"generated":{"line":1106,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1107,"column":0},"generated":{"line":1107,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1108,"column":0},"generated":{"line":1108,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1109,"column":0},"generated":{"line":1109,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1110,"column":0},"generated":{"line":1110,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1111,"column":0},"generated":{"line":1111,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1112,"column":0},"generated":{"line":1112,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1113,"column":0},"generated":{"line":1113,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1114,"column":0},"generated":{"line":1114,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1115,"column":0},"generated":{"line":1115,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1116,"column":0},"generated":{"line":1116,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1117,"column":0},"generated":{"line":1117,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1118,"column":0},"generated":{"line":1118,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1119,"column":0},"generated":{"line":1119,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1120,"column":0},"generated":{"line":1120,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1121,"column":0},"generated":{"line":1121,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1122,"column":0},"generated":{"line":1122,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1123,"column":0},"generated":{"line":1123,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1124,"column":0},"generated":{"line":1124,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1125,"column":0},"generated":{"line":1125,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1126,"column":0},"generated":{"line":1126,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1127,"column":0},"generated":{"line":1127,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1128,"column":0},"generated":{"line":1128,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1129,"column":0},"generated":{"line":1129,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1130,"column":0},"generated":{"line":1130,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1131,"column":0},"generated":{"line":1131,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1132,"column":0},"generated":{"line":1132,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1133,"column":0},"generated":{"line":1133,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1134,"column":0},"generated":{"line":1134,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1135,"column":0},"generated":{"line":1135,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1136,"column":0},"generated":{"line":1136,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1137,"column":0},"generated":{"line":1137,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1138,"column":0},"generated":{"line":1138,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1139,"column":0},"generated":{"line":1139,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1140,"column":0},"generated":{"line":1140,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1141,"column":0},"generated":{"line":1141,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1142,"column":0},"generated":{"line":1142,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1143,"column":0},"generated":{"line":1143,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1144,"column":0},"generated":{"line":1144,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1145,"column":0},"generated":{"line":1145,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1146,"column":0},"generated":{"line":1146,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1147,"column":0},"generated":{"line":1147,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1148,"column":0},"generated":{"line":1148,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1149,"column":0},"generated":{"line":1149,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1150,"column":0},"generated":{"line":1150,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1151,"column":0},"generated":{"line":1151,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1152,"column":0},"generated":{"line":1152,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1153,"column":0},"generated":{"line":1153,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1154,"column":0},"generated":{"line":1154,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1155,"column":0},"generated":{"line":1155,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1156,"column":0},"generated":{"line":1156,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1157,"column":0},"generated":{"line":1157,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1158,"column":0},"generated":{"line":1158,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1159,"column":0},"generated":{"line":1159,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1160,"column":0},"generated":{"line":1160,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1161,"column":0},"generated":{"line":1161,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1162,"column":0},"generated":{"line":1162,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1163,"column":0},"generated":{"line":1163,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1164,"column":0},"generated":{"line":1164,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1165,"column":0},"generated":{"line":1165,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1166,"column":0},"generated":{"line":1166,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1167,"column":0},"generated":{"line":1167,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1168,"column":0},"generated":{"line":1168,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1169,"column":0},"generated":{"line":1169,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1170,"column":0},"generated":{"line":1170,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1171,"column":0},"generated":{"line":1171,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1172,"column":0},"generated":{"line":1172,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1173,"column":0},"generated":{"line":1173,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1174,"column":0},"generated":{"line":1174,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1175,"column":0},"generated":{"line":1175,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1176,"column":0},"generated":{"line":1176,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1177,"column":0},"generated":{"line":1177,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1178,"column":0},"generated":{"line":1178,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1179,"column":0},"generated":{"line":1179,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1180,"column":0},"generated":{"line":1180,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1181,"column":0},"generated":{"line":1181,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1182,"column":0},"generated":{"line":1182,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1183,"column":0},"generated":{"line":1183,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1184,"column":0},"generated":{"line":1184,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1185,"column":0},"generated":{"line":1185,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1186,"column":0},"generated":{"line":1186,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1187,"column":0},"generated":{"line":1187,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1188,"column":0},"generated":{"line":1188,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1189,"column":0},"generated":{"line":1189,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1190,"column":0},"generated":{"line":1190,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1191,"column":0},"generated":{"line":1191,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1192,"column":0},"generated":{"line":1192,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1193,"column":0},"generated":{"line":1193,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1194,"column":0},"generated":{"line":1194,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1195,"column":0},"generated":{"line":1195,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1196,"column":0},"generated":{"line":1196,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1197,"column":0},"generated":{"line":1197,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1198,"column":0},"generated":{"line":1198,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1199,"column":0},"generated":{"line":1199,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1200,"column":0},"generated":{"line":1200,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1201,"column":0},"generated":{"line":1201,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1202,"column":0},"generated":{"line":1202,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1203,"column":0},"generated":{"line":1203,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1204,"column":0},"generated":{"line":1204,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1205,"column":0},"generated":{"line":1205,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1206,"column":0},"generated":{"line":1206,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1207,"column":0},"generated":{"line":1207,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1208,"column":0},"generated":{"line":1208,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1209,"column":0},"generated":{"line":1209,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1210,"column":0},"generated":{"line":1210,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1211,"column":0},"generated":{"line":1211,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1212,"column":0},"generated":{"line":1212,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1213,"column":0},"generated":{"line":1213,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1214,"column":0},"generated":{"line":1214,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1215,"column":0},"generated":{"line":1215,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1216,"column":0},"generated":{"line":1216,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1217,"column":0},"generated":{"line":1217,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1218,"column":0},"generated":{"line":1218,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1219,"column":0},"generated":{"line":1219,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1220,"column":0},"generated":{"line":1220,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1221,"column":0},"generated":{"line":1221,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1222,"column":0},"generated":{"line":1222,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1223,"column":0},"generated":{"line":1223,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1224,"column":0},"generated":{"line":1224,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1225,"column":0},"generated":{"line":1225,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1226,"column":0},"generated":{"line":1226,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1227,"column":0},"generated":{"line":1227,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1228,"column":0},"generated":{"line":1228,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1229,"column":0},"generated":{"line":1229,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1230,"column":0},"generated":{"line":1230,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1231,"column":0},"generated":{"line":1231,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1232,"column":0},"generated":{"line":1232,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1233,"column":0},"generated":{"line":1233,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1234,"column":0},"generated":{"line":1234,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1235,"column":0},"generated":{"line":1235,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1236,"column":0},"generated":{"line":1236,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1237,"column":0},"generated":{"line":1237,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1238,"column":0},"generated":{"line":1238,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1239,"column":0},"generated":{"line":1239,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1240,"column":0},"generated":{"line":1240,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1241,"column":0},"generated":{"line":1241,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1242,"column":0},"generated":{"line":1242,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1243,"column":0},"generated":{"line":1243,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1244,"column":0},"generated":{"line":1244,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1245,"column":0},"generated":{"line":1245,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1246,"column":0},"generated":{"line":1246,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1247,"column":0},"generated":{"line":1247,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1248,"column":0},"generated":{"line":1248,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1249,"column":0},"generated":{"line":1249,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1250,"column":0},"generated":{"line":1250,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1251,"column":0},"generated":{"line":1251,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1252,"column":0},"generated":{"line":1252,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1253,"column":0},"generated":{"line":1253,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1254,"column":0},"generated":{"line":1254,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1255,"column":0},"generated":{"line":1255,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1256,"column":0},"generated":{"line":1256,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1257,"column":0},"generated":{"line":1257,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1258,"column":0},"generated":{"line":1258,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1259,"column":0},"generated":{"line":1259,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1260,"column":0},"generated":{"line":1260,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1261,"column":0},"generated":{"line":1261,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1262,"column":0},"generated":{"line":1262,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1263,"column":0},"generated":{"line":1263,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1264,"column":0},"generated":{"line":1264,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1265,"column":0},"generated":{"line":1265,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1266,"column":0},"generated":{"line":1266,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1267,"column":0},"generated":{"line":1267,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1268,"column":0},"generated":{"line":1268,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1269,"column":0},"generated":{"line":1269,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1270,"column":0},"generated":{"line":1270,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1271,"column":0},"generated":{"line":1271,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1272,"column":0},"generated":{"line":1272,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1273,"column":0},"generated":{"line":1273,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1274,"column":0},"generated":{"line":1274,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1275,"column":0},"generated":{"line":1275,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1276,"column":0},"generated":{"line":1276,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1277,"column":0},"generated":{"line":1277,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1278,"column":0},"generated":{"line":1278,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1279,"column":0},"generated":{"line":1279,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1280,"column":0},"generated":{"line":1280,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1281,"column":0},"generated":{"line":1281,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1282,"column":0},"generated":{"line":1282,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1283,"column":0},"generated":{"line":1283,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1284,"column":0},"generated":{"line":1284,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1285,"column":0},"generated":{"line":1285,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1286,"column":0},"generated":{"line":1286,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1287,"column":0},"generated":{"line":1287,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1288,"column":0},"generated":{"line":1288,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1289,"column":0},"generated":{"line":1289,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1290,"column":0},"generated":{"line":1290,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1291,"column":0},"generated":{"line":1291,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1292,"column":0},"generated":{"line":1292,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1293,"column":0},"generated":{"line":1293,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1294,"column":0},"generated":{"line":1294,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1295,"column":0},"generated":{"line":1295,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1296,"column":0},"generated":{"line":1296,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1297,"column":0},"generated":{"line":1297,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1298,"column":0},"generated":{"line":1298,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1299,"column":0},"generated":{"line":1299,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1300,"column":0},"generated":{"line":1300,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1301,"column":0},"generated":{"line":1301,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1302,"column":0},"generated":{"line":1302,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1303,"column":0},"generated":{"line":1303,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1304,"column":0},"generated":{"line":1304,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1305,"column":0},"generated":{"line":1305,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1306,"column":0},"generated":{"line":1306,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1307,"column":0},"generated":{"line":1307,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1308,"column":0},"generated":{"line":1308,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1309,"column":0},"generated":{"line":1309,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1310,"column":0},"generated":{"line":1310,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1311,"column":0},"generated":{"line":1311,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1312,"column":0},"generated":{"line":1312,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1313,"column":0},"generated":{"line":1313,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1314,"column":0},"generated":{"line":1314,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1315,"column":0},"generated":{"line":1315,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1316,"column":0},"generated":{"line":1316,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1317,"column":0},"generated":{"line":1317,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1318,"column":0},"generated":{"line":1318,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1319,"column":0},"generated":{"line":1319,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1320,"column":0},"generated":{"line":1320,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1321,"column":0},"generated":{"line":1321,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1322,"column":0},"generated":{"line":1322,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1323,"column":0},"generated":{"line":1323,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1324,"column":0},"generated":{"line":1324,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1325,"column":0},"generated":{"line":1325,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1326,"column":0},"generated":{"line":1326,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1327,"column":0},"generated":{"line":1327,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1328,"column":0},"generated":{"line":1328,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1329,"column":0},"generated":{"line":1329,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1330,"column":0},"generated":{"line":1330,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1331,"column":0},"generated":{"line":1331,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1332,"column":0},"generated":{"line":1332,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1333,"column":0},"generated":{"line":1333,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1334,"column":0},"generated":{"line":1334,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1335,"column":0},"generated":{"line":1335,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1336,"column":0},"generated":{"line":1336,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1337,"column":0},"generated":{"line":1337,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1338,"column":0},"generated":{"line":1338,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1339,"column":0},"generated":{"line":1339,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1340,"column":0},"generated":{"line":1340,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1341,"column":0},"generated":{"line":1341,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1342,"column":0},"generated":{"line":1342,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1343,"column":0},"generated":{"line":1343,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1344,"column":0},"generated":{"line":1344,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1345,"column":0},"generated":{"line":1345,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1346,"column":0},"generated":{"line":1346,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1347,"column":0},"generated":{"line":1347,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1348,"column":0},"generated":{"line":1348,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1349,"column":0},"generated":{"line":1349,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1350,"column":0},"generated":{"line":1350,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1351,"column":0},"generated":{"line":1351,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1352,"column":0},"generated":{"line":1352,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1353,"column":0},"generated":{"line":1353,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1354,"column":0},"generated":{"line":1354,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1355,"column":0},"generated":{"line":1355,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1356,"column":0},"generated":{"line":1356,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1357,"column":0},"generated":{"line":1357,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1358,"column":0},"generated":{"line":1358,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1359,"column":0},"generated":{"line":1359,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1360,"column":0},"generated":{"line":1360,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1361,"column":0},"generated":{"line":1361,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1362,"column":0},"generated":{"line":1362,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1363,"column":0},"generated":{"line":1363,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1364,"column":0},"generated":{"line":1364,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1365,"column":0},"generated":{"line":1365,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1366,"column":0},"generated":{"line":1366,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1367,"column":0},"generated":{"line":1367,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1368,"column":0},"generated":{"line":1368,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1369,"column":0},"generated":{"line":1369,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1370,"column":0},"generated":{"line":1370,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1371,"column":0},"generated":{"line":1371,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1372,"column":0},"generated":{"line":1372,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1373,"column":0},"generated":{"line":1373,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1374,"column":0},"generated":{"line":1374,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1375,"column":0},"generated":{"line":1375,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1376,"column":0},"generated":{"line":1376,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1377,"column":0},"generated":{"line":1377,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1378,"column":0},"generated":{"line":1378,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1379,"column":0},"generated":{"line":1379,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1380,"column":0},"generated":{"line":1380,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1381,"column":0},"generated":{"line":1381,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1382,"column":0},"generated":{"line":1382,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1383,"column":0},"generated":{"line":1383,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1384,"column":0},"generated":{"line":1384,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1385,"column":0},"generated":{"line":1385,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1386,"column":0},"generated":{"line":1386,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1387,"column":0},"generated":{"line":1387,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1388,"column":0},"generated":{"line":1388,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1389,"column":0},"generated":{"line":1389,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1390,"column":0},"generated":{"line":1390,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1391,"column":0},"generated":{"line":1391,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1392,"column":0},"generated":{"line":1392,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1393,"column":0},"generated":{"line":1393,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1394,"column":0},"generated":{"line":1394,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1395,"column":0},"generated":{"line":1395,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1396,"column":0},"generated":{"line":1396,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1397,"column":0},"generated":{"line":1397,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1398,"column":0},"generated":{"line":1398,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1399,"column":0},"generated":{"line":1399,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1400,"column":0},"generated":{"line":1400,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1401,"column":0},"generated":{"line":1401,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1402,"column":0},"generated":{"line":1402,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1403,"column":0},"generated":{"line":1403,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1404,"column":0},"generated":{"line":1404,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1405,"column":0},"generated":{"line":1405,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1406,"column":0},"generated":{"line":1406,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1407,"column":0},"generated":{"line":1407,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1408,"column":0},"generated":{"line":1408,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1409,"column":0},"generated":{"line":1409,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1410,"column":0},"generated":{"line":1410,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1411,"column":0},"generated":{"line":1411,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1412,"column":0},"generated":{"line":1412,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1413,"column":0},"generated":{"line":1413,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1414,"column":0},"generated":{"line":1414,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1415,"column":0},"generated":{"line":1415,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1416,"column":0},"generated":{"line":1416,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1417,"column":0},"generated":{"line":1417,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1418,"column":0},"generated":{"line":1418,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1419,"column":0},"generated":{"line":1419,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1420,"column":0},"generated":{"line":1420,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1421,"column":0},"generated":{"line":1421,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1422,"column":0},"generated":{"line":1422,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1423,"column":0},"generated":{"line":1423,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1424,"column":0},"generated":{"line":1424,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1425,"column":0},"generated":{"line":1425,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1426,"column":0},"generated":{"line":1426,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1427,"column":0},"generated":{"line":1427,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1428,"column":0},"generated":{"line":1428,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1429,"column":0},"generated":{"line":1429,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1430,"column":0},"generated":{"line":1430,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1431,"column":0},"generated":{"line":1431,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1432,"column":0},"generated":{"line":1432,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1433,"column":0},"generated":{"line":1433,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1434,"column":0},"generated":{"line":1434,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1435,"column":0},"generated":{"line":1435,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1436,"column":0},"generated":{"line":1436,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1437,"column":0},"generated":{"line":1437,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1438,"column":0},"generated":{"line":1438,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1439,"column":0},"generated":{"line":1439,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1440,"column":0},"generated":{"line":1440,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1441,"column":0},"generated":{"line":1441,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1442,"column":0},"generated":{"line":1442,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1443,"column":0},"generated":{"line":1443,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1444,"column":0},"generated":{"line":1444,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1445,"column":0},"generated":{"line":1445,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1446,"column":0},"generated":{"line":1446,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1447,"column":0},"generated":{"line":1447,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1448,"column":0},"generated":{"line":1448,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1449,"column":0},"generated":{"line":1449,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1450,"column":0},"generated":{"line":1450,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1451,"column":0},"generated":{"line":1451,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1452,"column":0},"generated":{"line":1452,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1453,"column":0},"generated":{"line":1453,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1454,"column":0},"generated":{"line":1454,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1455,"column":0},"generated":{"line":1455,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1456,"column":0},"generated":{"line":1456,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1457,"column":0},"generated":{"line":1457,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1458,"column":0},"generated":{"line":1458,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1459,"column":0},"generated":{"line":1459,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1460,"column":0},"generated":{"line":1460,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1461,"column":0},"generated":{"line":1461,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1462,"column":0},"generated":{"line":1462,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1463,"column":0},"generated":{"line":1463,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1464,"column":0},"generated":{"line":1464,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1465,"column":0},"generated":{"line":1465,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1466,"column":0},"generated":{"line":1466,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1467,"column":0},"generated":{"line":1467,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1468,"column":0},"generated":{"line":1468,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1469,"column":0},"generated":{"line":1469,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1470,"column":0},"generated":{"line":1470,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1471,"column":0},"generated":{"line":1471,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1472,"column":0},"generated":{"line":1472,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1473,"column":0},"generated":{"line":1473,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1474,"column":0},"generated":{"line":1474,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1475,"column":0},"generated":{"line":1475,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1476,"column":0},"generated":{"line":1476,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1477,"column":0},"generated":{"line":1477,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1478,"column":0},"generated":{"line":1478,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1479,"column":0},"generated":{"line":1479,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1480,"column":0},"generated":{"line":1480,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1481,"column":0},"generated":{"line":1481,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1482,"column":0},"generated":{"line":1482,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1483,"column":0},"generated":{"line":1483,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1484,"column":0},"generated":{"line":1484,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1485,"column":0},"generated":{"line":1485,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1486,"column":0},"generated":{"line":1486,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1487,"column":0},"generated":{"line":1487,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1488,"column":0},"generated":{"line":1488,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1489,"column":0},"generated":{"line":1489,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1490,"column":0},"generated":{"line":1490,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1491,"column":0},"generated":{"line":1491,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1492,"column":0},"generated":{"line":1492,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1493,"column":0},"generated":{"line":1493,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1494,"column":0},"generated":{"line":1494,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1495,"column":0},"generated":{"line":1495,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1496,"column":0},"generated":{"line":1496,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1497,"column":0},"generated":{"line":1497,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1498,"column":0},"generated":{"line":1498,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1499,"column":0},"generated":{"line":1499,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1500,"column":0},"generated":{"line":1500,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1501,"column":0},"generated":{"line":1501,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1502,"column":0},"generated":{"line":1502,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1503,"column":0},"generated":{"line":1503,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1504,"column":0},"generated":{"line":1504,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1505,"column":0},"generated":{"line":1505,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1506,"column":0},"generated":{"line":1506,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1507,"column":0},"generated":{"line":1507,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1508,"column":0},"generated":{"line":1508,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1509,"column":0},"generated":{"line":1509,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1510,"column":0},"generated":{"line":1510,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1511,"column":0},"generated":{"line":1511,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1512,"column":0},"generated":{"line":1512,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1513,"column":0},"generated":{"line":1513,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1514,"column":0},"generated":{"line":1514,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1515,"column":0},"generated":{"line":1515,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1516,"column":0},"generated":{"line":1516,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1517,"column":0},"generated":{"line":1517,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1518,"column":0},"generated":{"line":1518,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1519,"column":0},"generated":{"line":1519,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1520,"column":0},"generated":{"line":1520,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1521,"column":0},"generated":{"line":1521,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1522,"column":0},"generated":{"line":1522,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1523,"column":0},"generated":{"line":1523,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1524,"column":0},"generated":{"line":1524,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1525,"column":0},"generated":{"line":1525,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1526,"column":0},"generated":{"line":1526,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1527,"column":0},"generated":{"line":1527,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1528,"column":0},"generated":{"line":1528,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1529,"column":0},"generated":{"line":1529,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1530,"column":0},"generated":{"line":1530,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1531,"column":0},"generated":{"line":1531,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1532,"column":0},"generated":{"line":1532,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1533,"column":0},"generated":{"line":1533,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1534,"column":0},"generated":{"line":1534,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1535,"column":0},"generated":{"line":1535,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1536,"column":0},"generated":{"line":1536,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1537,"column":0},"generated":{"line":1537,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1538,"column":0},"generated":{"line":1538,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1539,"column":0},"generated":{"line":1539,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1540,"column":0},"generated":{"line":1540,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1541,"column":0},"generated":{"line":1541,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1542,"column":0},"generated":{"line":1542,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1543,"column":0},"generated":{"line":1543,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1544,"column":0},"generated":{"line":1544,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1545,"column":0},"generated":{"line":1545,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1546,"column":0},"generated":{"line":1546,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1547,"column":0},"generated":{"line":1547,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1548,"column":0},"generated":{"line":1548,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1549,"column":0},"generated":{"line":1549,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1550,"column":0},"generated":{"line":1550,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1551,"column":0},"generated":{"line":1551,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1552,"column":0},"generated":{"line":1552,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1553,"column":0},"generated":{"line":1553,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1554,"column":0},"generated":{"line":1554,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1555,"column":0},"generated":{"line":1555,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1556,"column":0},"generated":{"line":1556,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1557,"column":0},"generated":{"line":1557,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1558,"column":0},"generated":{"line":1558,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1559,"column":0},"generated":{"line":1559,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1560,"column":0},"generated":{"line":1560,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1561,"column":0},"generated":{"line":1561,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1562,"column":0},"generated":{"line":1562,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1563,"column":0},"generated":{"line":1563,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1564,"column":0},"generated":{"line":1564,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1565,"column":0},"generated":{"line":1565,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1566,"column":0},"generated":{"line":1566,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1567,"column":0},"generated":{"line":1567,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1568,"column":0},"generated":{"line":1568,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1569,"column":0},"generated":{"line":1569,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1570,"column":0},"generated":{"line":1570,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1571,"column":0},"generated":{"line":1571,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1572,"column":0},"generated":{"line":1572,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1573,"column":0},"generated":{"line":1573,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1574,"column":0},"generated":{"line":1574,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1575,"column":0},"generated":{"line":1575,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1576,"column":0},"generated":{"line":1576,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1577,"column":0},"generated":{"line":1577,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1578,"column":0},"generated":{"line":1578,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1579,"column":0},"generated":{"line":1579,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1580,"column":0},"generated":{"line":1580,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1581,"column":0},"generated":{"line":1581,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1582,"column":0},"generated":{"line":1582,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1583,"column":0},"generated":{"line":1583,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1584,"column":0},"generated":{"line":1584,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1585,"column":0},"generated":{"line":1585,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1586,"column":0},"generated":{"line":1586,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1587,"column":0},"generated":{"line":1587,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1588,"column":0},"generated":{"line":1588,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1589,"column":0},"generated":{"line":1589,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1590,"column":0},"generated":{"line":1590,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1591,"column":0},"generated":{"line":1591,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1592,"column":0},"generated":{"line":1592,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1593,"column":0},"generated":{"line":1593,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1594,"column":0},"generated":{"line":1594,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1595,"column":0},"generated":{"line":1595,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1596,"column":0},"generated":{"line":1596,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1597,"column":0},"generated":{"line":1597,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1598,"column":0},"generated":{"line":1598,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1599,"column":0},"generated":{"line":1599,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1600,"column":0},"generated":{"line":1600,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1601,"column":0},"generated":{"line":1601,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1602,"column":0},"generated":{"line":1602,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1603,"column":0},"generated":{"line":1603,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1604,"column":0},"generated":{"line":1604,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1605,"column":0},"generated":{"line":1605,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1606,"column":0},"generated":{"line":1606,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1607,"column":0},"generated":{"line":1607,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1608,"column":0},"generated":{"line":1608,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1609,"column":0},"generated":{"line":1609,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1610,"column":0},"generated":{"line":1610,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1611,"column":0},"generated":{"line":1611,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1612,"column":0},"generated":{"line":1612,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1613,"column":0},"generated":{"line":1613,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1614,"column":0},"generated":{"line":1614,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1615,"column":0},"generated":{"line":1615,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1616,"column":0},"generated":{"line":1616,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1617,"column":0},"generated":{"line":1617,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1618,"column":0},"generated":{"line":1618,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1619,"column":0},"generated":{"line":1619,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1620,"column":0},"generated":{"line":1620,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1621,"column":0},"generated":{"line":1621,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1622,"column":0},"generated":{"line":1622,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1623,"column":0},"generated":{"line":1623,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1624,"column":0},"generated":{"line":1624,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1625,"column":0},"generated":{"line":1625,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1626,"column":0},"generated":{"line":1626,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1627,"column":0},"generated":{"line":1627,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1628,"column":0},"generated":{"line":1628,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1629,"column":0},"generated":{"line":1629,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1630,"column":0},"generated":{"line":1630,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1631,"column":0},"generated":{"line":1631,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1632,"column":0},"generated":{"line":1632,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1633,"column":0},"generated":{"line":1633,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1634,"column":0},"generated":{"line":1634,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1635,"column":0},"generated":{"line":1635,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1636,"column":0},"generated":{"line":1636,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1637,"column":0},"generated":{"line":1637,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1638,"column":0},"generated":{"line":1638,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1639,"column":0},"generated":{"line":1639,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1640,"column":0},"generated":{"line":1640,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1641,"column":0},"generated":{"line":1641,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1642,"column":0},"generated":{"line":1642,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1643,"column":0},"generated":{"line":1643,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1644,"column":0},"generated":{"line":1644,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1645,"column":0},"generated":{"line":1645,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1646,"column":0},"generated":{"line":1646,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1647,"column":0},"generated":{"line":1647,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1648,"column":0},"generated":{"line":1648,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1649,"column":0},"generated":{"line":1649,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1650,"column":0},"generated":{"line":1650,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1651,"column":0},"generated":{"line":1651,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1652,"column":0},"generated":{"line":1652,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1653,"column":0},"generated":{"line":1653,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1654,"column":0},"generated":{"line":1654,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1655,"column":0},"generated":{"line":1655,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1656,"column":0},"generated":{"line":1656,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1657,"column":0},"generated":{"line":1657,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1658,"column":0},"generated":{"line":1658,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1659,"column":0},"generated":{"line":1659,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1660,"column":0},"generated":{"line":1660,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1661,"column":0},"generated":{"line":1661,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1662,"column":0},"generated":{"line":1662,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1663,"column":0},"generated":{"line":1663,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1664,"column":0},"generated":{"line":1664,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1665,"column":0},"generated":{"line":1665,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1666,"column":0},"generated":{"line":1666,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1667,"column":0},"generated":{"line":1667,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1668,"column":0},"generated":{"line":1668,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1669,"column":0},"generated":{"line":1669,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1670,"column":0},"generated":{"line":1670,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1671,"column":0},"generated":{"line":1671,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1672,"column":0},"generated":{"line":1672,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1673,"column":0},"generated":{"line":1673,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1674,"column":0},"generated":{"line":1674,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1675,"column":0},"generated":{"line":1675,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1676,"column":0},"generated":{"line":1676,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1677,"column":0},"generated":{"line":1677,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1678,"column":0},"generated":{"line":1678,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1679,"column":0},"generated":{"line":1679,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1680,"column":0},"generated":{"line":1680,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1681,"column":0},"generated":{"line":1681,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1682,"column":0},"generated":{"line":1682,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1683,"column":0},"generated":{"line":1683,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1684,"column":0},"generated":{"line":1684,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1685,"column":0},"generated":{"line":1685,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1686,"column":0},"generated":{"line":1686,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1687,"column":0},"generated":{"line":1687,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1688,"column":0},"generated":{"line":1688,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1689,"column":0},"generated":{"line":1689,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1690,"column":0},"generated":{"line":1690,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1691,"column":0},"generated":{"line":1691,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1692,"column":0},"generated":{"line":1692,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1693,"column":0},"generated":{"line":1693,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1694,"column":0},"generated":{"line":1694,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1695,"column":0},"generated":{"line":1695,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1696,"column":0},"generated":{"line":1696,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1697,"column":0},"generated":{"line":1697,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1698,"column":0},"generated":{"line":1698,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1699,"column":0},"generated":{"line":1699,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1700,"column":0},"generated":{"line":1700,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1701,"column":0},"generated":{"line":1701,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1702,"column":0},"generated":{"line":1702,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1703,"column":0},"generated":{"line":1703,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1704,"column":0},"generated":{"line":1704,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1705,"column":0},"generated":{"line":1705,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1706,"column":0},"generated":{"line":1706,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1707,"column":0},"generated":{"line":1707,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1708,"column":0},"generated":{"line":1708,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1709,"column":0},"generated":{"line":1709,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1710,"column":0},"generated":{"line":1710,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1711,"column":0},"generated":{"line":1711,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1712,"column":0},"generated":{"line":1712,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1713,"column":0},"generated":{"line":1713,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1714,"column":0},"generated":{"line":1714,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1715,"column":0},"generated":{"line":1715,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1716,"column":0},"generated":{"line":1716,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1717,"column":0},"generated":{"line":1717,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1718,"column":0},"generated":{"line":1718,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1719,"column":0},"generated":{"line":1719,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1720,"column":0},"generated":{"line":1720,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1721,"column":0},"generated":{"line":1721,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1722,"column":0},"generated":{"line":1722,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1723,"column":0},"generated":{"line":1723,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1724,"column":0},"generated":{"line":1724,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1725,"column":0},"generated":{"line":1725,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1726,"column":0},"generated":{"line":1726,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1727,"column":0},"generated":{"line":1727,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1728,"column":0},"generated":{"line":1728,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1729,"column":0},"generated":{"line":1729,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1730,"column":0},"generated":{"line":1730,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1731,"column":0},"generated":{"line":1731,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1732,"column":0},"generated":{"line":1732,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1733,"column":0},"generated":{"line":1733,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1734,"column":0},"generated":{"line":1734,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1735,"column":0},"generated":{"line":1735,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1736,"column":0},"generated":{"line":1736,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1737,"column":0},"generated":{"line":1737,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1738,"column":0},"generated":{"line":1738,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1739,"column":0},"generated":{"line":1739,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1740,"column":0},"generated":{"line":1740,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1741,"column":0},"generated":{"line":1741,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1742,"column":0},"generated":{"line":1742,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1743,"column":0},"generated":{"line":1743,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1744,"column":0},"generated":{"line":1744,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1745,"column":0},"generated":{"line":1745,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1746,"column":0},"generated":{"line":1746,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1747,"column":0},"generated":{"line":1747,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1748,"column":0},"generated":{"line":1748,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1749,"column":0},"generated":{"line":1749,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1750,"column":0},"generated":{"line":1750,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1751,"column":0},"generated":{"line":1751,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1752,"column":0},"generated":{"line":1752,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1753,"column":0},"generated":{"line":1753,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1754,"column":0},"generated":{"line":1754,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1755,"column":0},"generated":{"line":1755,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1756,"column":0},"generated":{"line":1756,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1757,"column":0},"generated":{"line":1757,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1758,"column":0},"generated":{"line":1758,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1759,"column":0},"generated":{"line":1759,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1760,"column":0},"generated":{"line":1760,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1761,"column":0},"generated":{"line":1761,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1762,"column":0},"generated":{"line":1762,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1763,"column":0},"generated":{"line":1763,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1764,"column":0},"generated":{"line":1764,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1765,"column":0},"generated":{"line":1765,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1766,"column":0},"generated":{"line":1766,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1767,"column":0},"generated":{"line":1767,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1768,"column":0},"generated":{"line":1768,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1769,"column":0},"generated":{"line":1769,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1770,"column":0},"generated":{"line":1770,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1771,"column":0},"generated":{"line":1771,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1772,"column":0},"generated":{"line":1772,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1773,"column":0},"generated":{"line":1773,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1774,"column":0},"generated":{"line":1774,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1775,"column":0},"generated":{"line":1775,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1776,"column":0},"generated":{"line":1776,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1777,"column":0},"generated":{"line":1777,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1778,"column":0},"generated":{"line":1778,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1779,"column":0},"generated":{"line":1779,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1780,"column":0},"generated":{"line":1780,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1781,"column":0},"generated":{"line":1781,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1782,"column":0},"generated":{"line":1782,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1783,"column":0},"generated":{"line":1783,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1784,"column":0},"generated":{"line":1784,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1785,"column":0},"generated":{"line":1785,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1786,"column":0},"generated":{"line":1786,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1787,"column":0},"generated":{"line":1787,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1788,"column":0},"generated":{"line":1788,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1789,"column":0},"generated":{"line":1789,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1790,"column":0},"generated":{"line":1790,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1791,"column":0},"generated":{"line":1791,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1792,"column":0},"generated":{"line":1792,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1793,"column":0},"generated":{"line":1793,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1794,"column":0},"generated":{"line":1794,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1795,"column":0},"generated":{"line":1795,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1796,"column":0},"generated":{"line":1796,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1797,"column":0},"generated":{"line":1797,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1798,"column":0},"generated":{"line":1798,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1799,"column":0},"generated":{"line":1799,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1800,"column":0},"generated":{"line":1800,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1801,"column":0},"generated":{"line":1801,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1802,"column":0},"generated":{"line":1802,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1803,"column":0},"generated":{"line":1803,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1804,"column":0},"generated":{"line":1804,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1805,"column":0},"generated":{"line":1805,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1806,"column":0},"generated":{"line":1806,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1807,"column":0},"generated":{"line":1807,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1808,"column":0},"generated":{"line":1808,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1809,"column":0},"generated":{"line":1809,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1810,"column":0},"generated":{"line":1810,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1811,"column":0},"generated":{"line":1811,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1812,"column":0},"generated":{"line":1812,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1813,"column":0},"generated":{"line":1813,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1814,"column":0},"generated":{"line":1814,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1815,"column":0},"generated":{"line":1815,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1816,"column":0},"generated":{"line":1816,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1817,"column":0},"generated":{"line":1817,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1818,"column":0},"generated":{"line":1818,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1819,"column":0},"generated":{"line":1819,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1820,"column":0},"generated":{"line":1820,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1821,"column":0},"generated":{"line":1821,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1822,"column":0},"generated":{"line":1822,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1823,"column":0},"generated":{"line":1823,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1824,"column":0},"generated":{"line":1824,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1825,"column":0},"generated":{"line":1825,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1826,"column":0},"generated":{"line":1826,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1827,"column":0},"generated":{"line":1827,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1828,"column":0},"generated":{"line":1828,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1829,"column":0},"generated":{"line":1829,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1830,"column":0},"generated":{"line":1830,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1831,"column":0},"generated":{"line":1831,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1832,"column":0},"generated":{"line":1832,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1833,"column":0},"generated":{"line":1833,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1834,"column":0},"generated":{"line":1834,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1835,"column":0},"generated":{"line":1835,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1836,"column":0},"generated":{"line":1836,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1837,"column":0},"generated":{"line":1837,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1838,"column":0},"generated":{"line":1838,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1839,"column":0},"generated":{"line":1839,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1840,"column":0},"generated":{"line":1840,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1841,"column":0},"generated":{"line":1841,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1842,"column":0},"generated":{"line":1842,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1843,"column":0},"generated":{"line":1843,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1844,"column":0},"generated":{"line":1844,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1845,"column":0},"generated":{"line":1845,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1846,"column":0},"generated":{"line":1846,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1847,"column":0},"generated":{"line":1847,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1848,"column":0},"generated":{"line":1848,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1849,"column":0},"generated":{"line":1849,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1850,"column":0},"generated":{"line":1850,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1851,"column":0},"generated":{"line":1851,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1852,"column":0},"generated":{"line":1852,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1853,"column":0},"generated":{"line":1853,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1854,"column":0},"generated":{"line":1854,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1855,"column":0},"generated":{"line":1855,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1856,"column":0},"generated":{"line":1856,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1857,"column":0},"generated":{"line":1857,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1858,"column":0},"generated":{"line":1858,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1859,"column":0},"generated":{"line":1859,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1860,"column":0},"generated":{"line":1860,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1861,"column":0},"generated":{"line":1861,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1862,"column":0},"generated":{"line":1862,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1863,"column":0},"generated":{"line":1863,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1864,"column":0},"generated":{"line":1864,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1865,"column":0},"generated":{"line":1865,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1866,"column":0},"generated":{"line":1866,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1867,"column":0},"generated":{"line":1867,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1868,"column":0},"generated":{"line":1868,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1869,"column":0},"generated":{"line":1869,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1870,"column":0},"generated":{"line":1870,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1871,"column":0},"generated":{"line":1871,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1872,"column":0},"generated":{"line":1872,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1873,"column":0},"generated":{"line":1873,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1874,"column":0},"generated":{"line":1874,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1875,"column":0},"generated":{"line":1875,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1876,"column":0},"generated":{"line":1876,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1877,"column":0},"generated":{"line":1877,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1878,"column":0},"generated":{"line":1878,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1879,"column":0},"generated":{"line":1879,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1880,"column":0},"generated":{"line":1880,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1881,"column":0},"generated":{"line":1881,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1882,"column":0},"generated":{"line":1882,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1883,"column":0},"generated":{"line":1883,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1884,"column":0},"generated":{"line":1884,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1885,"column":0},"generated":{"line":1885,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1886,"column":0},"generated":{"line":1886,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1887,"column":0},"generated":{"line":1887,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1888,"column":0},"generated":{"line":1888,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1889,"column":0},"generated":{"line":1889,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1890,"column":0},"generated":{"line":1890,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1891,"column":0},"generated":{"line":1891,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1892,"column":0},"generated":{"line":1892,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1893,"column":0},"generated":{"line":1893,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1894,"column":0},"generated":{"line":1894,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1895,"column":0},"generated":{"line":1895,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1896,"column":0},"generated":{"line":1896,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1897,"column":0},"generated":{"line":1897,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1898,"column":0},"generated":{"line":1898,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1899,"column":0},"generated":{"line":1899,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1900,"column":0},"generated":{"line":1900,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1901,"column":0},"generated":{"line":1901,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1902,"column":0},"generated":{"line":1902,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1903,"column":0},"generated":{"line":1903,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1904,"column":0},"generated":{"line":1904,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1905,"column":0},"generated":{"line":1905,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1906,"column":0},"generated":{"line":1906,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1907,"column":0},"generated":{"line":1907,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1908,"column":0},"generated":{"line":1908,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1909,"column":0},"generated":{"line":1909,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1910,"column":0},"generated":{"line":1910,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1911,"column":0},"generated":{"line":1911,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1912,"column":0},"generated":{"line":1912,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1913,"column":0},"generated":{"line":1913,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1914,"column":0},"generated":{"line":1914,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1915,"column":0},"generated":{"line":1915,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1916,"column":0},"generated":{"line":1916,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1917,"column":0},"generated":{"line":1917,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1918,"column":0},"generated":{"line":1918,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1919,"column":0},"generated":{"line":1919,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1920,"column":0},"generated":{"line":1920,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1921,"column":0},"generated":{"line":1921,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1922,"column":0},"generated":{"line":1922,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1923,"column":0},"generated":{"line":1923,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1924,"column":0},"generated":{"line":1924,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1925,"column":0},"generated":{"line":1925,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1926,"column":0},"generated":{"line":1926,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1927,"column":0},"generated":{"line":1927,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1928,"column":0},"generated":{"line":1928,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1929,"column":0},"generated":{"line":1929,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1930,"column":0},"generated":{"line":1930,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1931,"column":0},"generated":{"line":1931,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1932,"column":0},"generated":{"line":1932,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1933,"column":0},"generated":{"line":1933,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1934,"column":0},"generated":{"line":1934,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1935,"column":0},"generated":{"line":1935,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1936,"column":0},"generated":{"line":1936,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1937,"column":0},"generated":{"line":1937,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1938,"column":0},"generated":{"line":1938,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1939,"column":0},"generated":{"line":1939,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1940,"column":0},"generated":{"line":1940,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1941,"column":0},"generated":{"line":1941,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1942,"column":0},"generated":{"line":1942,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1943,"column":0},"generated":{"line":1943,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1944,"column":0},"generated":{"line":1944,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1945,"column":0},"generated":{"line":1945,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1946,"column":0},"generated":{"line":1946,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1947,"column":0},"generated":{"line":1947,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1948,"column":0},"generated":{"line":1948,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1949,"column":0},"generated":{"line":1949,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1950,"column":0},"generated":{"line":1950,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1951,"column":0},"generated":{"line":1951,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1952,"column":0},"generated":{"line":1952,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1953,"column":0},"generated":{"line":1953,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1954,"column":0},"generated":{"line":1954,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1955,"column":0},"generated":{"line":1955,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1956,"column":0},"generated":{"line":1956,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1957,"column":0},"generated":{"line":1957,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1958,"column":0},"generated":{"line":1958,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1959,"column":0},"generated":{"line":1959,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1960,"column":0},"generated":{"line":1960,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1961,"column":0},"generated":{"line":1961,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1962,"column":0},"generated":{"line":1962,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1963,"column":0},"generated":{"line":1963,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1964,"column":0},"generated":{"line":1964,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1965,"column":0},"generated":{"line":1965,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1966,"column":0},"generated":{"line":1966,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1967,"column":0},"generated":{"line":1967,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1968,"column":0},"generated":{"line":1968,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1969,"column":0},"generated":{"line":1969,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1970,"column":0},"generated":{"line":1970,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1971,"column":0},"generated":{"line":1971,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1972,"column":0},"generated":{"line":1972,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1973,"column":0},"generated":{"line":1973,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1974,"column":0},"generated":{"line":1974,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1975,"column":0},"generated":{"line":1975,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1976,"column":0},"generated":{"line":1976,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1977,"column":0},"generated":{"line":1977,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1978,"column":0},"generated":{"line":1978,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1979,"column":0},"generated":{"line":1979,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1980,"column":0},"generated":{"line":1980,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1981,"column":0},"generated":{"line":1981,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1982,"column":0},"generated":{"line":1982,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1983,"column":0},"generated":{"line":1983,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1984,"column":0},"generated":{"line":1984,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1985,"column":0},"generated":{"line":1985,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1986,"column":0},"generated":{"line":1986,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1987,"column":0},"generated":{"line":1987,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1988,"column":0},"generated":{"line":1988,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1989,"column":0},"generated":{"line":1989,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1990,"column":0},"generated":{"line":1990,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1991,"column":0},"generated":{"line":1991,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1992,"column":0},"generated":{"line":1992,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1993,"column":0},"generated":{"line":1993,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1994,"column":0},"generated":{"line":1994,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1995,"column":0},"generated":{"line":1995,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1996,"column":0},"generated":{"line":1996,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1997,"column":0},"generated":{"line":1997,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1998,"column":0},"generated":{"line":1998,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":1999,"column":0},"generated":{"line":1999,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2000,"column":0},"generated":{"line":2000,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2001,"column":0},"generated":{"line":2001,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2002,"column":0},"generated":{"line":2002,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2003,"column":0},"generated":{"line":2003,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2004,"column":0},"generated":{"line":2004,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2005,"column":0},"generated":{"line":2005,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2006,"column":0},"generated":{"line":2006,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2007,"column":0},"generated":{"line":2007,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2008,"column":0},"generated":{"line":2008,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2009,"column":0},"generated":{"line":2009,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2010,"column":0},"generated":{"line":2010,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2011,"column":0},"generated":{"line":2011,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2012,"column":0},"generated":{"line":2012,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2013,"column":0},"generated":{"line":2013,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2014,"column":0},"generated":{"line":2014,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2015,"column":0},"generated":{"line":2015,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2016,"column":0},"generated":{"line":2016,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2017,"column":0},"generated":{"line":2017,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2018,"column":0},"generated":{"line":2018,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2019,"column":0},"generated":{"line":2019,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2020,"column":0},"generated":{"line":2020,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2021,"column":0},"generated":{"line":2021,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2022,"column":0},"generated":{"line":2022,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2023,"column":0},"generated":{"line":2023,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2024,"column":0},"generated":{"line":2024,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2025,"column":0},"generated":{"line":2025,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2026,"column":0},"generated":{"line":2026,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2027,"column":0},"generated":{"line":2027,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2028,"column":0},"generated":{"line":2028,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2029,"column":0},"generated":{"line":2029,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2030,"column":0},"generated":{"line":2030,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2031,"column":0},"generated":{"line":2031,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2032,"column":0},"generated":{"line":2032,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2033,"column":0},"generated":{"line":2033,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2034,"column":0},"generated":{"line":2034,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2035,"column":0},"generated":{"line":2035,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2036,"column":0},"generated":{"line":2036,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2037,"column":0},"generated":{"line":2037,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2038,"column":0},"generated":{"line":2038,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2039,"column":0},"generated":{"line":2039,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2040,"column":0},"generated":{"line":2040,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2041,"column":0},"generated":{"line":2041,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2042,"column":0},"generated":{"line":2042,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2043,"column":0},"generated":{"line":2043,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2044,"column":0},"generated":{"line":2044,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2045,"column":0},"generated":{"line":2045,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2046,"column":0},"generated":{"line":2046,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2047,"column":0},"generated":{"line":2047,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2048,"column":0},"generated":{"line":2048,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2049,"column":0},"generated":{"line":2049,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2050,"column":0},"generated":{"line":2050,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2051,"column":0},"generated":{"line":2051,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2052,"column":0},"generated":{"line":2052,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2053,"column":0},"generated":{"line":2053,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2054,"column":0},"generated":{"line":2054,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2055,"column":0},"generated":{"line":2055,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2056,"column":0},"generated":{"line":2056,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2057,"column":0},"generated":{"line":2057,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2058,"column":0},"generated":{"line":2058,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2059,"column":0},"generated":{"line":2059,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2060,"column":0},"generated":{"line":2060,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2061,"column":0},"generated":{"line":2061,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2062,"column":0},"generated":{"line":2062,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2063,"column":0},"generated":{"line":2063,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2064,"column":0},"generated":{"line":2064,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2065,"column":0},"generated":{"line":2065,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2066,"column":0},"generated":{"line":2066,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2067,"column":0},"generated":{"line":2067,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2068,"column":0},"generated":{"line":2068,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2069,"column":0},"generated":{"line":2069,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2070,"column":0},"generated":{"line":2070,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2071,"column":0},"generated":{"line":2071,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2072,"column":0},"generated":{"line":2072,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2073,"column":0},"generated":{"line":2073,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2074,"column":0},"generated":{"line":2074,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2075,"column":0},"generated":{"line":2075,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2076,"column":0},"generated":{"line":2076,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2077,"column":0},"generated":{"line":2077,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2078,"column":0},"generated":{"line":2078,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2079,"column":0},"generated":{"line":2079,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2080,"column":0},"generated":{"line":2080,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2081,"column":0},"generated":{"line":2081,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2082,"column":0},"generated":{"line":2082,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2083,"column":0},"generated":{"line":2083,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2084,"column":0},"generated":{"line":2084,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2085,"column":0},"generated":{"line":2085,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2086,"column":0},"generated":{"line":2086,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2087,"column":0},"generated":{"line":2087,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2088,"column":0},"generated":{"line":2088,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2089,"column":0},"generated":{"line":2089,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2090,"column":0},"generated":{"line":2090,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2091,"column":0},"generated":{"line":2091,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2092,"column":0},"generated":{"line":2092,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2093,"column":0},"generated":{"line":2093,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2094,"column":0},"generated":{"line":2094,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2095,"column":0},"generated":{"line":2095,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2096,"column":0},"generated":{"line":2096,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2097,"column":0},"generated":{"line":2097,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2098,"column":0},"generated":{"line":2098,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2099,"column":0},"generated":{"line":2099,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2100,"column":0},"generated":{"line":2100,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2101,"column":0},"generated":{"line":2101,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2102,"column":0},"generated":{"line":2102,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2103,"column":0},"generated":{"line":2103,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2104,"column":0},"generated":{"line":2104,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2105,"column":0},"generated":{"line":2105,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2106,"column":0},"generated":{"line":2106,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2107,"column":0},"generated":{"line":2107,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2108,"column":0},"generated":{"line":2108,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2109,"column":0},"generated":{"line":2109,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2110,"column":0},"generated":{"line":2110,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2111,"column":0},"generated":{"line":2111,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2112,"column":0},"generated":{"line":2112,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2113,"column":0},"generated":{"line":2113,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2114,"column":0},"generated":{"line":2114,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2115,"column":0},"generated":{"line":2115,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2116,"column":0},"generated":{"line":2116,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2117,"column":0},"generated":{"line":2117,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2118,"column":0},"generated":{"line":2118,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2119,"column":0},"generated":{"line":2119,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2120,"column":0},"generated":{"line":2120,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2121,"column":0},"generated":{"line":2121,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2122,"column":0},"generated":{"line":2122,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2123,"column":0},"generated":{"line":2123,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2124,"column":0},"generated":{"line":2124,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2125,"column":0},"generated":{"line":2125,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2126,"column":0},"generated":{"line":2126,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2127,"column":0},"generated":{"line":2127,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2128,"column":0},"generated":{"line":2128,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2129,"column":0},"generated":{"line":2129,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2130,"column":0},"generated":{"line":2130,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2131,"column":0},"generated":{"line":2131,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2132,"column":0},"generated":{"line":2132,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2133,"column":0},"generated":{"line":2133,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2134,"column":0},"generated":{"line":2134,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2135,"column":0},"generated":{"line":2135,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2136,"column":0},"generated":{"line":2136,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2137,"column":0},"generated":{"line":2137,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2138,"column":0},"generated":{"line":2138,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2139,"column":0},"generated":{"line":2139,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2140,"column":0},"generated":{"line":2140,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2141,"column":0},"generated":{"line":2141,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2142,"column":0},"generated":{"line":2142,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2143,"column":0},"generated":{"line":2143,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2144,"column":0},"generated":{"line":2144,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2145,"column":0},"generated":{"line":2145,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2146,"column":0},"generated":{"line":2146,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2147,"column":0},"generated":{"line":2147,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2148,"column":0},"generated":{"line":2148,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2149,"column":0},"generated":{"line":2149,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2150,"column":0},"generated":{"line":2150,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2151,"column":0},"generated":{"line":2151,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2152,"column":0},"generated":{"line":2152,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2153,"column":0},"generated":{"line":2153,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2154,"column":0},"generated":{"line":2154,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2155,"column":0},"generated":{"line":2155,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2156,"column":0},"generated":{"line":2156,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2157,"column":0},"generated":{"line":2157,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2158,"column":0},"generated":{"line":2158,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2159,"column":0},"generated":{"line":2159,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2160,"column":0},"generated":{"line":2160,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2161,"column":0},"generated":{"line":2161,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2162,"column":0},"generated":{"line":2162,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2163,"column":0},"generated":{"line":2163,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2164,"column":0},"generated":{"line":2164,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2165,"column":0},"generated":{"line":2165,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2166,"column":0},"generated":{"line":2166,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2167,"column":0},"generated":{"line":2167,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2168,"column":0},"generated":{"line":2168,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2169,"column":0},"generated":{"line":2169,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2170,"column":0},"generated":{"line":2170,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2171,"column":0},"generated":{"line":2171,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2172,"column":0},"generated":{"line":2172,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2173,"column":0},"generated":{"line":2173,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2174,"column":0},"generated":{"line":2174,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2175,"column":0},"generated":{"line":2175,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2176,"column":0},"generated":{"line":2176,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2177,"column":0},"generated":{"line":2177,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2178,"column":0},"generated":{"line":2178,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2179,"column":0},"generated":{"line":2179,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2180,"column":0},"generated":{"line":2180,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2181,"column":0},"generated":{"line":2181,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2182,"column":0},"generated":{"line":2182,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2183,"column":0},"generated":{"line":2183,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2184,"column":0},"generated":{"line":2184,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2185,"column":0},"generated":{"line":2185,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2186,"column":0},"generated":{"line":2186,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2187,"column":0},"generated":{"line":2187,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2188,"column":0},"generated":{"line":2188,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2189,"column":0},"generated":{"line":2189,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2190,"column":0},"generated":{"line":2190,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2191,"column":0},"generated":{"line":2191,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2192,"column":0},"generated":{"line":2192,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2193,"column":0},"generated":{"line":2193,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2194,"column":0},"generated":{"line":2194,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2195,"column":0},"generated":{"line":2195,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2196,"column":0},"generated":{"line":2196,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2197,"column":0},"generated":{"line":2197,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2198,"column":0},"generated":{"line":2198,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2199,"column":0},"generated":{"line":2199,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2200,"column":0},"generated":{"line":2200,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2201,"column":0},"generated":{"line":2201,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2202,"column":0},"generated":{"line":2202,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2203,"column":0},"generated":{"line":2203,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2204,"column":0},"generated":{"line":2204,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2205,"column":0},"generated":{"line":2205,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2206,"column":0},"generated":{"line":2206,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2207,"column":0},"generated":{"line":2207,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2208,"column":0},"generated":{"line":2208,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2209,"column":0},"generated":{"line":2209,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2210,"column":0},"generated":{"line":2210,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2211,"column":0},"generated":{"line":2211,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2212,"column":0},"generated":{"line":2212,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2213,"column":0},"generated":{"line":2213,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2214,"column":0},"generated":{"line":2214,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2215,"column":0},"generated":{"line":2215,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/World.js","original":{"line":2216,"column":0},"generated":{"line":2216,"column":0}}],"sources":{"../node_modules/phaser/src/physics/matter-js/World.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Bodies = require('./lib/factory/Bodies');\r\nvar Body = require('./lib/body/Body');\r\nvar Class = require('../../utils/Class');\r\nvar Common = require('./lib/core/Common');\r\nvar Composite = require('./lib/body/Composite');\r\nvar Engine = require('./lib/core/Engine');\r\nvar EventEmitter = require('eventemitter3');\r\nvar Events = require('./events');\r\nvar GetFastValue = require('../../utils/object/GetFastValue');\r\nvar GetValue = require('../../utils/object/GetValue');\r\nvar MatterBody = require('./lib/body/Body');\r\nvar MatterEvents = require('./lib/core/Events');\r\nvar MatterTileBody = require('./MatterTileBody');\r\nvar MatterWorld = require('./lib/body/World');\r\nvar Vector = require('./lib/geometry/Vector');\r\n\r\n/**\r\n * @classdesc\r\n * The Matter World class is responsible for managing one single instance of a Matter Physics World for Phaser.\r\n * \r\n * Access this via `this.matter.world` from within a Scene.\r\n * \r\n * This class creates a Matter JS World Composite along with the Matter JS Engine during instantiation. It also\r\n * handles delta timing, bounds, body and constraint creation and debug drawing.\r\n * \r\n * If you wish to access the Matter JS World object directly, see the `localWorld` property.\r\n * If you wish to access the Matter Engine directly, see the `engine` property.\r\n * \r\n * This class is an Event Emitter and will proxy _all_ Matter JS events, as they are received.\r\n *\r\n * @class World\r\n * @extends Phaser.Events.EventEmitter\r\n * @memberof Phaser.Physics.Matter\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Scene} scene - The Scene to which this Matter World instance belongs.\r\n * @param {Phaser.Types.Physics.Matter.MatterWorldConfig} config - The Matter World configuration object.\r\n */\r\nvar World = new Class({\r\n\r\n    Extends: EventEmitter,\r\n\r\n    initialize:\r\n\r\n    function World (scene, config)\r\n    {\r\n        EventEmitter.call(this);\r\n\r\n        /**\r\n         * The Scene to which this Matter World instance belongs.\r\n         *\r\n         * @name Phaser.Physics.Matter.World#scene\r\n         * @type {Phaser.Scene}\r\n         * @since 3.0.0\r\n         */\r\n        this.scene = scene;\r\n\r\n        /**\r\n         * An instance of the MatterJS Engine.\r\n         *\r\n         * @name Phaser.Physics.Matter.World#engine\r\n         * @type {MatterJS.Engine}\r\n         * @since 3.0.0\r\n         */\r\n        this.engine = Engine.create(config);\r\n\r\n        /**\r\n         * A `World` composite object that will contain all simulated bodies and constraints.\r\n         *\r\n         * @name Phaser.Physics.Matter.World#localWorld\r\n         * @type {MatterJS.World}\r\n         * @since 3.0.0\r\n         */\r\n        this.localWorld = this.engine.world;\r\n\r\n        var gravity = GetValue(config, 'gravity', null);\r\n\r\n        if (gravity)\r\n        {\r\n            this.setGravity(gravity.x, gravity.y, gravity.scale);\r\n        }\r\n        else if (gravity === false)\r\n        {\r\n            this.setGravity(0, 0, 0);\r\n        }\r\n\r\n        /**\r\n         * An object containing the 4 wall bodies that bound the physics world.\r\n         *\r\n         * @name Phaser.Physics.Matter.World#walls\r\n         * @type {object}\r\n         * @since 3.0.0\r\n         */\r\n        this.walls = { left: null, right: null, top: null, bottom: null };\r\n\r\n        /**\r\n         * A flag that toggles if the world is enabled or not.\r\n         *\r\n         * @name Phaser.Physics.Matter.World#enabled\r\n         * @type {boolean}\r\n         * @default true\r\n         * @since 3.0.0\r\n         */\r\n        this.enabled = GetValue(config, 'enabled', true);\r\n\r\n        /**\r\n         * The correction argument is an optional Number that specifies the time correction factor to apply to the update.\r\n         * This can help improve the accuracy of the simulation in cases where delta is changing between updates.\r\n         * The value of correction is defined as delta / lastDelta, i.e. the percentage change of delta over the last step.\r\n         * Therefore the value is always 1 (no correction) when delta is constant (or when no correction is desired, which is the default).\r\n         * See the paper on Time Corrected Verlet for more information.\r\n         *\r\n         * @name Phaser.Physics.Matter.World#correction\r\n         * @type {number}\r\n         * @default 1\r\n         * @since 3.4.0\r\n         */\r\n        this.correction = GetValue(config, 'correction', 1);\r\n\r\n        /**\r\n         * This function is called every time the core game loop steps, which is bound to the\r\n         * Request Animation Frame frequency unless otherwise modified.\r\n         * \r\n         * The function is passed two values: `time` and `delta`, both of which come from the game step values.\r\n         * \r\n         * It must return a number. This number is used as the delta value passed to Matter.Engine.update.\r\n         * \r\n         * You can override this function with your own to define your own timestep.\r\n         * \r\n         * If you need to update the Engine multiple times in a single game step then call\r\n         * `World.update` as many times as required. Each call will trigger the `getDelta` function.\r\n         * If you wish to have full control over when the Engine updates then see the property `autoUpdate`.\r\n         *\r\n         * You can also adjust the number of iterations that Engine.update performs.\r\n         * Use the Scene Matter Physics config object to set the following properties:\r\n         *\r\n         * positionIterations (defaults to 6)\r\n         * velocityIterations (defaults to 4)\r\n         * constraintIterations (defaults to 2)\r\n         *\r\n         * Adjusting these values can help performance in certain situations, depending on the physics requirements\r\n         * of your game.\r\n         *\r\n         * @name Phaser.Physics.Matter.World#getDelta\r\n         * @type {function}\r\n         * @since 3.4.0\r\n         */\r\n        this.getDelta = GetValue(config, 'getDelta', this.update60Hz);\r\n\r\n        var runnerConfig = GetFastValue(config, 'runner', {});\r\n\r\n        var hasFPS = GetFastValue(runnerConfig, 'fps', false);\r\n\r\n        var fps = GetFastValue(runnerConfig, 'fps', 60);\r\n\r\n        var delta = GetFastValue(runnerConfig, 'delta', 1000 / fps);\r\n        var deltaMin = GetFastValue(runnerConfig, 'deltaMin', 1000 / fps);\r\n        var deltaMax = GetFastValue(runnerConfig, 'deltaMax', 1000 / (fps * 0.5));\r\n\r\n        if (!hasFPS)\r\n        {\r\n            fps = 1000 / delta;\r\n        }\r\n\r\n        /**\r\n         * The Matter JS Runner Configuration object.\r\n         * \r\n         * This object is populated via the Matter Configuration object's `runner` property and is\r\n         * updated constantly during the game step.\r\n         *\r\n         * @name Phaser.Physics.Matter.World#runner\r\n         * @type {Phaser.Types.Physics.Matter.MatterRunnerConfig}\r\n         * @since 3.22.0\r\n         */\r\n        this.runner = {\r\n            fps: fps,\r\n            correction: GetFastValue(runnerConfig, 'correction', 1),\r\n            deltaSampleSize: GetFastValue(runnerConfig, 'deltaSampleSize', 60),\r\n            counterTimestamp: 0,\r\n            frameCounter: 0,\r\n            deltaHistory: [],\r\n            timePrev: null,\r\n            timeScalePrev: 1,\r\n            frameRequestId: null,\r\n            isFixed: GetFastValue(runnerConfig, 'isFixed', false),\r\n            delta: delta,\r\n            deltaMin: deltaMin,\r\n            deltaMax: deltaMax\r\n        };\r\n\r\n        /**\r\n         * Automatically call Engine.update every time the game steps.\r\n         * If you disable this then you are responsible for calling `World.step` directly from your game.\r\n         * If you call `set60Hz` or `set30Hz` then `autoUpdate` is reset to `true`.\r\n         *\r\n         * @name Phaser.Physics.Matter.World#autoUpdate\r\n         * @type {boolean}\r\n         * @default true\r\n         * @since 3.4.0\r\n         */\r\n        this.autoUpdate = GetValue(config, 'autoUpdate', true);\r\n\r\n        var debugConfig = GetValue(config, 'debug', false);\r\n\r\n        /**\r\n         * A flag that controls if the debug graphics will be drawn to or not.\r\n         *\r\n         * @name Phaser.Physics.Matter.World#drawDebug\r\n         * @type {boolean}\r\n         * @default false\r\n         * @since 3.0.0\r\n         */\r\n        this.drawDebug = (typeof(debugConfig) === 'object') ? true : debugConfig;\r\n\r\n        /**\r\n         * An instance of the Graphics object the debug bodies are drawn to, if enabled.\r\n         *\r\n         * @name Phaser.Physics.Matter.World#debugGraphic\r\n         * @type {Phaser.GameObjects.Graphics}\r\n         * @since 3.0.0\r\n         */\r\n        this.debugGraphic;\r\n\r\n        /**\r\n         * The debug configuration object.\r\n         * \r\n         * The values stored in this object are read from the Matter World Config `debug` property.\r\n         * \r\n         * When a new Body or Constraint is _added to the World_, they are given the values stored in this object,\r\n         * unless they have their own `render` object set that will override them.\r\n         * \r\n         * Note that while you can modify the values of properties in this object at run-time, it will not change\r\n         * any of the Matter objects _already added_. It will only impact objects newly added to the world, or one\r\n         * that is removed and then re-added at a later time.\r\n         *\r\n         * @name Phaser.Physics.Matter.World#debugConfig\r\n         * @type {Phaser.Types.Physics.Matter.MatterDebugConfig}\r\n         * @since 3.22.0\r\n         */\r\n        this.debugConfig = {\r\n            showAxes: GetFastValue(debugConfig, 'showAxes', false),\r\n            showAngleIndicator: GetFastValue(debugConfig, 'showAngleIndicator', false),\r\n            angleColor: GetFastValue(debugConfig, 'angleColor', 0xe81153),\r\n\r\n            showBroadphase: GetFastValue(debugConfig, 'showBroadphase', false),\r\n            broadphaseColor: GetFastValue(debugConfig, 'broadphaseColor', 0xffb400),\r\n\r\n            showBounds: GetFastValue(debugConfig, 'showBounds', false),\r\n            boundsColor: GetFastValue(debugConfig, 'boundsColor', 0xffffff),\r\n\r\n            showVelocity: GetFastValue(debugConfig, 'showVelocity', false),\r\n            velocityColor: GetFastValue(debugConfig, 'velocityColor', 0x00aeef),\r\n\r\n            showCollisions: GetFastValue(debugConfig, 'showCollisions', false),\r\n            collisionColor: GetFastValue(debugConfig, 'collisionColor', 0xf5950c),\r\n\r\n            showSeparations: GetFastValue(debugConfig, 'showSeparations', false),\r\n            separationColor: GetFastValue(debugConfig, 'separationColor', 0xffa500),\r\n\r\n            showBody: GetFastValue(debugConfig, 'showBody', true),\r\n            showStaticBody: GetFastValue(debugConfig, 'showStaticBody', true),\r\n            showInternalEdges: GetFastValue(debugConfig, 'showInternalEdges', false),\r\n\r\n            renderFill: GetFastValue(debugConfig, 'renderFill', false),\r\n            renderLine: GetFastValue(debugConfig, 'renderLine', true),\r\n\r\n            fillColor: GetFastValue(debugConfig, 'fillColor', 0x106909),\r\n            fillOpacity: GetFastValue(debugConfig, 'fillOpacity', 1),\r\n            lineColor: GetFastValue(debugConfig, 'lineColor', 0x28de19),\r\n            lineOpacity: GetFastValue(debugConfig, 'lineOpacity', 1),\r\n            lineThickness: GetFastValue(debugConfig, 'lineThickness', 1),\r\n\r\n            staticFillColor: GetFastValue(debugConfig, 'staticFillColor', 0x0d177b),\r\n            staticLineColor: GetFastValue(debugConfig, 'staticLineColor', 0x1327e4),\r\n\r\n            showSleeping: GetFastValue(debugConfig, 'showSleeping', false),\r\n            staticBodySleepOpacity: GetFastValue(debugConfig, 'staticBodySleepOpacity', 0.7),\r\n            sleepFillColor: GetFastValue(debugConfig, 'sleepFillColor', 0x464646),\r\n            sleepLineColor: GetFastValue(debugConfig, 'sleepLineColor', 0x999a99),\r\n\r\n            showSensors: GetFastValue(debugConfig, 'showSensors', true),\r\n            sensorFillColor: GetFastValue(debugConfig, 'sensorFillColor', 0x0d177b),\r\n            sensorLineColor: GetFastValue(debugConfig, 'sensorLineColor', 0x1327e4),\r\n\r\n            showPositions: GetFastValue(debugConfig, 'showPositions', true),\r\n            positionSize: GetFastValue(debugConfig, 'positionSize', 4),\r\n            positionColor: GetFastValue(debugConfig, 'positionColor', 0xe042da),\r\n\r\n            showJoint: GetFastValue(debugConfig, 'showJoint', true),\r\n            jointColor: GetFastValue(debugConfig, 'jointColor', 0xe0e042),\r\n            jointLineOpacity: GetFastValue(debugConfig, 'jointLineOpacity', 1),\r\n            jointLineThickness: GetFastValue(debugConfig, 'jointLineThickness', 2),\r\n\r\n            pinSize: GetFastValue(debugConfig, 'pinSize', 4),\r\n            pinColor: GetFastValue(debugConfig, 'pinColor', 0x42e0e0),\r\n\r\n            springColor: GetFastValue(debugConfig, 'springColor', 0xe042e0),\r\n\r\n            anchorColor: GetFastValue(debugConfig, 'anchorColor', 0xefefef),\r\n            anchorSize: GetFastValue(debugConfig, 'anchorSize', 4),\r\n\r\n            showConvexHulls: GetFastValue(debugConfig, 'showConvexHulls', false),\r\n            hullColor: GetFastValue(debugConfig, 'hullColor', 0xd703d0)\r\n        };\r\n\r\n        if (this.drawDebug)\r\n        {\r\n            this.createDebugGraphic();\r\n        }\r\n\r\n        this.setEventsProxy();\r\n\r\n        //  Create the walls\r\n\r\n        if (GetFastValue(config, 'setBounds', false))\r\n        {\r\n            var boundsConfig = config['setBounds'];\r\n\r\n            if (typeof boundsConfig === 'boolean')\r\n            {\r\n                this.setBounds();\r\n            }\r\n            else\r\n            {\r\n                var x = GetFastValue(boundsConfig, 'x', 0);\r\n                var y = GetFastValue(boundsConfig, 'y', 0);\r\n                var width = GetFastValue(boundsConfig, 'width', scene.sys.scale.width);\r\n                var height = GetFastValue(boundsConfig, 'height', scene.sys.scale.height);\r\n                var thickness = GetFastValue(boundsConfig, 'thickness', 64);\r\n                var left = GetFastValue(boundsConfig, 'left', true);\r\n                var right = GetFastValue(boundsConfig, 'right', true);\r\n                var top = GetFastValue(boundsConfig, 'top', true);\r\n                var bottom = GetFastValue(boundsConfig, 'bottom', true);\r\n\r\n                this.setBounds(x, y, width, height, thickness, left, right, top, bottom);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Sets the debug render style for the children of the given Matter Composite.\r\n     * \r\n     * Composites themselves do not render, but they can contain bodies, constraints and other composites that may do.\r\n     * So the children of this composite are passed to the `setBodyRenderStyle`, `setCompositeRenderStyle` and\r\n     * `setConstraintRenderStyle` methods accordingly.\r\n     * \r\n     * @method Phaser.Physics.Matter.World#setCompositeRenderStyle\r\n     * @since 3.22.0\r\n     *\r\n     * @param {MatterJS.CompositeType} composite - The Matter Composite to set the render style on.\r\n     * \r\n     * @return {this} This Matter World instance for method chaining.\r\n     */\r\n    setCompositeRenderStyle: function (composite)\r\n    {\r\n        var bodies = composite.bodies;\r\n        var constraints = composite.constraints;\r\n        var composites = composite.composites;\r\n\r\n        var i;\r\n        var obj;\r\n        var render;\r\n\r\n        for (i = 0; i < bodies.length; i++)\r\n        {\r\n            obj = bodies[i];\r\n            render = obj.render;\r\n\r\n            this.setBodyRenderStyle(obj, render.lineColor, render.lineOpacity, render.lineThickness, render.fillColor, render.fillOpacity);\r\n        }\r\n\r\n        for (i = 0; i < constraints.length; i++)\r\n        {\r\n            obj = constraints[i];\r\n            render = obj.render;\r\n\r\n            this.setConstraintRenderStyle(obj, render.lineColor, render.lineOpacity, render.lineThickness, render.pinSize, render.anchorColor, render.anchorSize);\r\n        }\r\n\r\n        for (i = 0; i < composites.length; i++)\r\n        {\r\n            obj = composites[i];\r\n\r\n            this.setCompositeRenderStyle(obj);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the debug render style for the given Matter Body.\r\n     * \r\n     * If you are using this on a Phaser Game Object, such as a Matter Sprite, then pass in the body property\r\n     * to this method, not the Game Object itself.\r\n     * \r\n     * If you wish to skip a parameter, so it retains its current value, pass `false` for it.\r\n     * \r\n     * If you wish to reset the Body render colors to the defaults found in the World Debug Config, then call\r\n     * this method with just the `body` parameter provided and no others.\r\n     * \r\n     * @method Phaser.Physics.Matter.World#setBodyRenderStyle\r\n     * @since 3.22.0\r\n     *\r\n     * @param {MatterJS.BodyType} body - The Matter Body to set the render style on.\r\n     * @param {number} [lineColor] - The line color. If `null` it will use the World Debug Config value.\r\n     * @param {number} [lineOpacity] - The line opacity, between 0 and 1. If `null` it will use the World Debug Config value.\r\n     * @param {number} [lineThickness] - The line thickness. If `null` it will use the World Debug Config value.\r\n     * @param {number} [fillColor] - The fill color. If `null` it will use the World Debug Config value.\r\n     * @param {number} [fillOpacity] - The fill opacity, between 0 and 1. If `null` it will use the World Debug Config value.\r\n     * \r\n     * @return {this} This Matter World instance for method chaining.\r\n     */\r\n    setBodyRenderStyle: function (body, lineColor, lineOpacity, lineThickness, fillColor, fillOpacity)\r\n    {\r\n        var render = body.render;\r\n        var config = this.debugConfig;\r\n\r\n        if (!render)\r\n        {\r\n            return this;\r\n        }\r\n\r\n        if (lineColor === undefined || lineColor === null)\r\n        {\r\n            lineColor = (body.isStatic) ? config.staticLineColor : config.lineColor;\r\n        }\r\n\r\n        if (lineOpacity === undefined || lineOpacity === null)\r\n        {\r\n            lineOpacity = config.lineOpacity;\r\n        }\r\n\r\n        if (lineThickness === undefined || lineThickness === null)\r\n        {\r\n            lineThickness = config.lineThickness;\r\n        }\r\n\r\n        if (fillColor === undefined || fillColor === null)\r\n        {\r\n            fillColor = (body.isStatic) ? config.staticFillColor : config.fillColor;\r\n        }\r\n\r\n        if (fillOpacity === undefined || fillOpacity === null)\r\n        {\r\n            fillOpacity = config.fillOpacity;\r\n        }\r\n\r\n        if (lineColor !== false)\r\n        {\r\n            render.lineColor = lineColor;\r\n        }\r\n\r\n        if (lineOpacity !== false)\r\n        {\r\n            render.lineOpacity = lineOpacity;\r\n        }\r\n\r\n        if (lineThickness !== false)\r\n        {\r\n            render.lineThickness = lineThickness;\r\n        }\r\n\r\n        if (fillColor !== false)\r\n        {\r\n            render.fillColor = fillColor;\r\n        }\r\n\r\n        if (fillOpacity !== false)\r\n        {\r\n            render.fillOpacity = fillOpacity;\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the debug render style for the given Matter Constraint.\r\n     * \r\n     * If you are using this on a Phaser Game Object, then pass in the body property\r\n     * to this method, not the Game Object itself.\r\n     * \r\n     * If you wish to skip a parameter, so it retains its current value, pass `false` for it.\r\n     * \r\n     * If you wish to reset the Constraint render colors to the defaults found in the World Debug Config, then call\r\n     * this method with just the `constraint` parameter provided and no others.\r\n     * \r\n     * @method Phaser.Physics.Matter.World#setConstraintRenderStyle\r\n     * @since 3.22.0\r\n     *\r\n     * @param {MatterJS.ConstraintType} constraint - The Matter Constraint to set the render style on.\r\n     * @param {number} [lineColor] - The line color. If `null` it will use the World Debug Config value.\r\n     * @param {number} [lineOpacity] - The line opacity, between 0 and 1. If `null` it will use the World Debug Config value.\r\n     * @param {number} [lineThickness] - The line thickness. If `null` it will use the World Debug Config value.\r\n     * @param {number} [pinSize] - If this constraint is a pin, this sets the size of the pin circle. If `null` it will use the World Debug Config value.\r\n     * @param {number} [anchorColor] - The color used when rendering this constraints anchors.  If `null` it will use the World Debug Config value.\r\n     * @param {number} [anchorSize] - The size of the anchor circle, if this constraint has anchors. If `null` it will use the World Debug Config value.\r\n     * \r\n     * @return {this} This Matter World instance for method chaining.\r\n     */\r\n    setConstraintRenderStyle: function (constraint, lineColor, lineOpacity, lineThickness, pinSize, anchorColor, anchorSize)\r\n    {\r\n        var render = constraint.render;\r\n        var config = this.debugConfig;\r\n\r\n        if (!render)\r\n        {\r\n            return this;\r\n        }\r\n\r\n        //  Reset them\r\n        if (lineColor === undefined || lineColor === null)\r\n        {\r\n            var type = render.type;\r\n\r\n            if (type === 'line')\r\n            {\r\n                lineColor = config.jointColor;\r\n            }\r\n            else if (type === 'pin')\r\n            {\r\n                lineColor = config.pinColor;\r\n            }\r\n            else if (type === 'spring')\r\n            {\r\n                lineColor = config.springColor;\r\n            }\r\n        }\r\n\r\n        if (lineOpacity === undefined || lineOpacity === null)\r\n        {\r\n            lineOpacity = config.jointLineOpacity;\r\n        }\r\n\r\n        if (lineThickness === undefined || lineThickness === null)\r\n        {\r\n            lineThickness = config.jointLineThickness;\r\n        }\r\n\r\n        if (pinSize === undefined || pinSize === null)\r\n        {\r\n            pinSize = config.pinSize;\r\n        }\r\n\r\n        if (anchorColor === undefined || anchorColor === null)\r\n        {\r\n            anchorColor = config.anchorColor;\r\n        }\r\n\r\n        if (anchorSize === undefined || anchorSize === null)\r\n        {\r\n            anchorSize = config.anchorSize;\r\n        }\r\n\r\n        if (lineColor !== false)\r\n        {\r\n            render.lineColor = lineColor;\r\n        }\r\n\r\n        if (lineOpacity !== false)\r\n        {\r\n            render.lineOpacity = lineOpacity;\r\n        }\r\n\r\n        if (lineThickness !== false)\r\n        {\r\n            render.lineThickness = lineThickness;\r\n        }\r\n\r\n        if (pinSize !== false)\r\n        {\r\n            render.pinSize = pinSize;\r\n        }\r\n\r\n        if (anchorColor !== false)\r\n        {\r\n            render.anchorColor = anchorColor;\r\n        }\r\n\r\n        if (anchorSize !== false)\r\n        {\r\n            render.anchorSize = anchorSize;\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * This internal method acts as a proxy between all of the Matter JS events and then re-emits them\r\n     * via this class.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#setEventsProxy\r\n     * @since 3.0.0\r\n     */\r\n    setEventsProxy: function ()\r\n    {\r\n        var _this = this;\r\n        var engine = this.engine;\r\n        var world = this.localWorld;\r\n\r\n        //  Inject debug styles\r\n\r\n        if (this.drawDebug)\r\n        {\r\n            MatterEvents.on(world, 'compositeModified', function (composite)\r\n            {\r\n                _this.setCompositeRenderStyle(composite);\r\n            });\r\n\r\n            MatterEvents.on(world, 'beforeAdd', function (event)\r\n            {\r\n                var objects = [].concat(event.object);\r\n    \r\n                for (var i = 0; i < objects.length; i++)\r\n                {\r\n                    var obj = objects[i];\r\n                    var render = obj.render;\r\n    \r\n                    if (obj.type === 'body')\r\n                    {\r\n                        _this.setBodyRenderStyle(obj, render.lineColor, render.lineOpacity, render.lineThickness, render.fillColor, render.fillOpacity);\r\n                    }\r\n                    else if (obj.type === 'composite')\r\n                    {\r\n                        _this.setCompositeRenderStyle(obj);\r\n                    }\r\n                    else if (obj.type === 'constraint')\r\n                    {\r\n                        _this.setConstraintRenderStyle(obj, render.lineColor, render.lineOpacity, render.lineThickness, render.pinSize, render.anchorColor, render.anchorSize);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        MatterEvents.on(world, 'beforeAdd', function (event)\r\n        {\r\n            _this.emit(Events.BEFORE_ADD, event);\r\n        });\r\n\r\n        MatterEvents.on(world, 'afterAdd', function (event)\r\n        {\r\n            _this.emit(Events.AFTER_ADD, event);\r\n        });\r\n\r\n        MatterEvents.on(world, 'beforeRemove', function (event)\r\n        {\r\n            _this.emit(Events.BEFORE_REMOVE, event);\r\n        });\r\n\r\n        MatterEvents.on(world, 'afterRemove', function (event)\r\n        {\r\n            _this.emit(Events.AFTER_REMOVE, event);\r\n        });\r\n\r\n        MatterEvents.on(engine, 'beforeUpdate', function (event)\r\n        {\r\n            _this.emit(Events.BEFORE_UPDATE, event);\r\n        });\r\n\r\n        MatterEvents.on(engine, 'afterUpdate', function (event)\r\n        {\r\n            _this.emit(Events.AFTER_UPDATE, event);\r\n        });\r\n\r\n        MatterEvents.on(engine, 'collisionStart', function (event)\r\n        {\r\n            var pairs = event.pairs;\r\n            var bodyA;\r\n            var bodyB;\r\n\r\n            if (pairs.length > 0)\r\n            {\r\n                bodyA = pairs[0].bodyA;\r\n                bodyB = pairs[0].bodyB;\r\n            }\r\n\r\n            _this.emit(Events.COLLISION_START, event, bodyA, bodyB);\r\n        });\r\n\r\n        MatterEvents.on(engine, 'collisionActive', function (event)\r\n        {\r\n            var pairs = event.pairs;\r\n            var bodyA;\r\n            var bodyB;\r\n\r\n            if (pairs.length > 0)\r\n            {\r\n                bodyA = pairs[0].bodyA;\r\n                bodyB = pairs[0].bodyB;\r\n            }\r\n\r\n            _this.emit(Events.COLLISION_ACTIVE, event, bodyA, bodyB);\r\n        });\r\n\r\n        MatterEvents.on(engine, 'collisionEnd', function (event)\r\n        {\r\n            var pairs = event.pairs;\r\n            var bodyA;\r\n            var bodyB;\r\n\r\n            if (pairs.length > 0)\r\n            {\r\n                bodyA = pairs[0].bodyA;\r\n                bodyB = pairs[0].bodyB;\r\n            }\r\n\r\n            _this.emit(Events.COLLISION_END, event, bodyA, bodyB);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Sets the bounds of the Physics world to match the given world pixel dimensions.\r\n     * You can optionally set which 'walls' to create: left, right, top or bottom.\r\n     * If none of the walls are given it will default to use the walls settings it had previously.\r\n     * I.e. if you previously told it to not have the left or right walls, and you then adjust the world size\r\n     * the newly created bounds will also not have the left and right walls.\r\n     * Explicitly state them in the parameters to override this.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#setBounds\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} [x=0] - The x coordinate of the top-left corner of the bounds.\r\n     * @param {number} [y=0] - The y coordinate of the top-left corner of the bounds.\r\n     * @param {number} [width] - The width of the bounds.\r\n     * @param {number} [height] - The height of the bounds.\r\n     * @param {number} [thickness=64] - The thickness of each wall, in pixels.\r\n     * @param {boolean} [left=true] - If true will create the left bounds wall.\r\n     * @param {boolean} [right=true] - If true will create the right bounds wall.\r\n     * @param {boolean} [top=true] - If true will create the top bounds wall.\r\n     * @param {boolean} [bottom=true] - If true will create the bottom bounds wall.\r\n     *\r\n     * @return {Phaser.Physics.Matter.World} This Matter World object.\r\n     */\r\n    setBounds: function (x, y, width, height, thickness, left, right, top, bottom)\r\n    {\r\n        if (x === undefined) { x = 0; }\r\n        if (y === undefined) { y = 0; }\r\n        if (width === undefined) { width = this.scene.sys.scale.width; }\r\n        if (height === undefined) { height = this.scene.sys.scale.height; }\r\n        if (thickness === undefined) { thickness = 64; }\r\n        if (left === undefined) { left = true; }\r\n        if (right === undefined) { right = true; }\r\n        if (top === undefined) { top = true; }\r\n        if (bottom === undefined) { bottom = true; }\r\n\r\n        this.updateWall(left, 'left', x - thickness, y - thickness, thickness, height + (thickness * 2));\r\n        this.updateWall(right, 'right', x + width, y - thickness, thickness, height + (thickness * 2));\r\n        this.updateWall(top, 'top', x, y - thickness, width, thickness);\r\n        this.updateWall(bottom, 'bottom', x, y + height, width, thickness);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Updates the 4 rectangle bodies that were created, if `setBounds` was set in the Matter config, to use\r\n     * the new positions and sizes. This method is usually only called internally via the `setBounds` method.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#updateWall\r\n     * @since 3.0.0\r\n     *\r\n     * @param {boolean} add - `true` if the walls are being added or updated, `false` to remove them from the world.\r\n     * @param {string} [position] - Either `left`, `right`, `top` or `bottom`. Only optional if `add` is `false`.\r\n     * @param {number} [x] - The horizontal position to place the walls at. Only optional if `add` is `false`.\r\n     * @param {number} [y] - The vertical position to place the walls at. Only optional if `add` is `false`.\r\n     * @param {number} [width] - The width of the walls, in pixels. Only optional if `add` is `false`.\r\n     * @param {number} [height] - The height of the walls, in pixels. Only optional if `add` is `false`.\r\n     */\r\n    updateWall: function (add, position, x, y, width, height)\r\n    {\r\n        var wall = this.walls[position];\r\n\r\n        if (add)\r\n        {\r\n            if (wall)\r\n            {\r\n                MatterWorld.remove(this.localWorld, wall);\r\n            }\r\n\r\n            //  adjust center\r\n            x += (width / 2);\r\n            y += (height / 2);\r\n\r\n            this.walls[position] = this.create(x, y, width, height, { isStatic: true, friction: 0, frictionStatic: 0 });\r\n        }\r\n        else\r\n        {\r\n            if (wall)\r\n            {\r\n                MatterWorld.remove(this.localWorld, wall);\r\n            }\r\n\r\n            this.walls[position] = null;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Creates a Phaser.GameObjects.Graphics object that is used to render all of the debug bodies and joints to.\r\n     * \r\n     * This method is called automatically by the constructor, if debugging has been enabled.\r\n     * \r\n     * The created Graphics object is automatically added to the Scene at 0x0 and given a depth of `Number.MAX_VALUE`,\r\n     * so it renders above all else in the Scene.\r\n     * \r\n     * The Graphics object is assigned to the `debugGraphic` property of this class and `drawDebug` is enabled.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#createDebugGraphic\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.GameObjects.Graphics} The newly created Graphics object.\r\n     */\r\n    createDebugGraphic: function ()\r\n    {\r\n        var graphic = this.scene.sys.add.graphics({ x: 0, y: 0 });\r\n\r\n        graphic.setDepth(Number.MAX_VALUE);\r\n\r\n        this.debugGraphic = graphic;\r\n\r\n        this.drawDebug = true;\r\n\r\n        return graphic;\r\n    },\r\n\r\n    /**\r\n     * Sets the world gravity and gravity scale to 0.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#disableGravity\r\n     * @since 3.0.0\r\n     *\r\n     * @return {this} This Matter World object.\r\n     */\r\n    disableGravity: function ()\r\n    {\r\n        this.localWorld.gravity.x = 0;\r\n        this.localWorld.gravity.y = 0;\r\n        this.localWorld.gravity.scale = 0;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the worlds gravity to the values given.\r\n     * \r\n     * Gravity effects all bodies in the world, unless they have the `ignoreGravity` flag set.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#setGravity\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} [x=0] - The world gravity x component.\r\n     * @param {number} [y=1] - The world gravity y component.\r\n     * @param {number} [scale=0.001] - The gravity scale factor.\r\n     *\r\n     * @return {this} This Matter World object.\r\n     */\r\n    setGravity: function (x, y, scale)\r\n    {\r\n        if (x === undefined) { x = 0; }\r\n        if (y === undefined) { y = 1; }\r\n\r\n        this.localWorld.gravity.x = x;\r\n        this.localWorld.gravity.y = y;\r\n\r\n        if (scale !== undefined)\r\n        {\r\n            this.localWorld.gravity.scale = scale;\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Creates a rectangle Matter body and adds it to the world.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#create\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The horizontal position of the body in the world.\r\n     * @param {number} y - The vertical position of the body in the world.\r\n     * @param {number} width - The width of the body.\r\n     * @param {number} height - The height of the body.\r\n     * @param {object} options - Optional Matter configuration object.\r\n     *\r\n     * @return {MatterJS.BodyType} The Matter.js body that was created.\r\n     */\r\n    create: function (x, y, width, height, options)\r\n    {\r\n        var body = Bodies.rectangle(x, y, width, height, options);\r\n\r\n        MatterWorld.add(this.localWorld, body);\r\n\r\n        return body;\r\n    },\r\n\r\n    /**\r\n     * Adds a Matter JS object, or array of objects, to the world.\r\n     * \r\n     * The objects should be valid Matter JS entities, such as a Body, Composite or Constraint.\r\n     * \r\n     * Triggers `beforeAdd` and `afterAdd` events.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#add\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(object|object[])} object - Can be single object, or an array, and can be a body, composite or constraint.\r\n     *\r\n     * @return {this} This Matter World object.\r\n     */\r\n    add: function (object)\r\n    {\r\n        MatterWorld.add(this.localWorld, object);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Removes a Matter JS object, or array of objects, from the world.\r\n     * \r\n     * The objects should be valid Matter JS entities, such as a Body, Composite or Constraint.\r\n     * \r\n     * Triggers `beforeRemove` and `afterRemove` events.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#remove\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(object|object[])} object - Can be single object, or an array, and can be a body, composite or constraint.\r\n     * @param {boolean} [deep=false] - Optionally search the objects children and recursively remove those as well.\r\n     *\r\n     * @return {this} This Matter World object.\r\n     */\r\n    remove: function (object, deep)\r\n    {\r\n        if (!Array.isArray(object))\r\n        {\r\n            object = [ object ];\r\n        }\r\n\r\n        for (var i = 0; i < object.length; i++)\r\n        {\r\n            var entity = object[i];\r\n\r\n            var body = (entity.body) ? entity.body : entity;\r\n\r\n            Composite.remove(this.localWorld, body, deep);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Removes a Matter JS constraint, or array of constraints, from the world.\r\n     * \r\n     * Triggers `beforeRemove` and `afterRemove` events.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#removeConstraint\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(MatterJS.ConstraintType|MatterJS.ConstraintType[])} constraint - A Matter JS Constraint, or an array of constraints, to be removed.\r\n     * @param {boolean} [deep=false] - Optionally search the objects children and recursively remove those as well.\r\n     *\r\n     * @return {this} This Matter World object.\r\n     */\r\n    removeConstraint: function (constraint, deep)\r\n    {\r\n        Composite.remove(this.localWorld, constraint, deep);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Adds `MatterTileBody` instances for all the colliding tiles within the given tilemap layer.\r\n     * \r\n     * Set the appropriate tiles in your layer to collide before calling this method!\r\n     *\r\n     * @method Phaser.Physics.Matter.World#convertTilemapLayer\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(Phaser.Tilemaps.DynamicTilemapLayer|Phaser.Tilemaps.StaticTilemapLayer)} tilemapLayer -\r\n     * An array of tiles.\r\n     * @param {object} [options] - Options to be passed to the MatterTileBody constructor. {@see Phaser.Physics.Matter.TileBody}\r\n     *\r\n     * @return {this} This Matter World object.\r\n     */\r\n    convertTilemapLayer: function (tilemapLayer, options)\r\n    {\r\n        var layerData = tilemapLayer.layer;\r\n        var tiles = tilemapLayer.getTilesWithin(0, 0, layerData.width, layerData.height, { isColliding: true });\r\n\r\n        this.convertTiles(tiles, options);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Adds `MatterTileBody` instances for the given tiles. This adds bodies regardless of whether the\r\n     * tiles are set to collide or not.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#convertTiles\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Tilemaps.Tile[]} tiles - An array of tiles.\r\n     * @param {object} [options] - Options to be passed to the MatterTileBody constructor. {@see Phaser.Physics.Matter.TileBody}\r\n     *\r\n     * @return {this} This Matter World object.\r\n     */\r\n    convertTiles: function (tiles, options)\r\n    {\r\n        if (tiles.length === 0)\r\n        {\r\n            return this;\r\n        }\r\n\r\n        for (var i = 0; i < tiles.length; i++)\r\n        {\r\n            new MatterTileBody(this, tiles[i], options);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Returns the next unique group index for which bodies will collide.\r\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will not collide.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#nextGroup\r\n     * @since 3.0.0\r\n     *\r\n     * @param {boolean} [isNonColliding=false] - If `true`, returns the next unique group index for which bodies will _not_ collide.\r\n     *\r\n     * @return {number} Unique category bitfield\r\n     */\r\n    nextGroup: function (isNonColliding)\r\n    {\r\n        return MatterBody.nextGroup(isNonColliding);\r\n    },\r\n\r\n    /**\r\n     * Returns the next unique category bitfield (starting after the initial default category 0x0001).\r\n     * There are 32 available.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#nextCategory\r\n     * @since 3.0.0\r\n     *\r\n     * @return {number} Unique category bitfield\r\n     */\r\n    nextCategory: function ()\r\n    {\r\n        return MatterBody.nextCategory();\r\n    },\r\n\r\n    /**\r\n     * Pauses this Matter World instance and sets `enabled` to `false`.\r\n     * \r\n     * A paused world will not run any simulations for the duration it is paused.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#pause\r\n     * @fires Phaser.Physics.Matter.Events#PAUSE\r\n     * @since 3.0.0\r\n     *\r\n     * @return {this} This Matter World object.\r\n     */\r\n    pause: function ()\r\n    {\r\n        this.enabled = false;\r\n\r\n        this.emit(Events.PAUSE);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Resumes this Matter World instance from a paused state and sets `enabled` to `true`.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#resume\r\n     * @fires Phaser.Physics.Matter.Events#RESUME\r\n     * @since 3.0.0\r\n     *\r\n     * @return {this} This Matter World object.\r\n     */\r\n    resume: function ()\r\n    {\r\n        this.enabled = true;\r\n\r\n        this.emit(Events.RESUME);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * The internal update method. This is called automatically by the parent Scene.\r\n     * \r\n     * Moves the simulation forward in time by delta ms. Uses `World.correction` value as an optional number that\r\n     * specifies the time correction factor to apply to the update. This can help improve the accuracy of the\r\n     * simulation in cases where delta is changing between updates. The value of correction is defined as `delta / lastDelta`,\r\n     * i.e. the percentage change of delta over the last step. Therefore the value is always 1 (no correction) when\r\n     * delta is constant (or when no correction is desired, which is the default).\r\n     * See the paper on Time Corrected Verlet for more information.\r\n     * \r\n     * Triggers `beforeUpdate` and `afterUpdate` events. Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\r\n     * \r\n     * If the World is paused, `update` is still run, but exits early and does not update the Matter Engine.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#update\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} time - The current time. Either a High Resolution Timer value if it comes from Request Animation Frame, or Date.now if using SetTimeout.\r\n     * @param {number} delta - The delta time in ms since the last frame. This is a smoothed and capped value based on the FPS rate.\r\n     */\r\n    update: function (time, delta)\r\n    {\r\n        if (!this.enabled || !this.autoUpdate)\r\n        {\r\n            return;\r\n        }\r\n\r\n        var engine = this.engine;\r\n        var runner = this.runner;\r\n\r\n        var timing = engine.timing;\r\n        var correction = this.correction;\r\n\r\n        if (runner.isFixed)\r\n        {\r\n            //  fixed timestep\r\n            delta = this.getDelta(time, delta);\r\n        }\r\n        else\r\n        {\r\n            //  dynamic timestep based on wall clock between calls\r\n            delta = (time - runner.timePrev) || runner.delta;\r\n            runner.timePrev = time;\r\n\r\n            // optimistically filter delta over a few frames, to improve stability\r\n            runner.deltaHistory.push(delta);\r\n            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\r\n            delta = Math.min.apply(null, runner.deltaHistory);\r\n            \r\n            // limit delta\r\n            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\r\n            delta = delta > runner.deltaMax ? runner.deltaMax : delta;\r\n\r\n            // correction for delta\r\n            correction = delta / runner.delta;\r\n\r\n            // update engine timing object\r\n            runner.delta = delta;\r\n        }\r\n\r\n        // time correction for time scaling\r\n        if (runner.timeScalePrev !== 0)\r\n        {\r\n            correction *= timing.timeScale / runner.timeScalePrev;\r\n        }\r\n\r\n        if (timing.timeScale === 0)\r\n        {\r\n            correction = 0;\r\n        }\r\n\r\n        runner.timeScalePrev = timing.timeScale;\r\n        runner.correction = correction;\r\n\r\n        // fps counter\r\n        runner.frameCounter += 1;\r\n\r\n        if (time - runner.counterTimestamp >= 1000)\r\n        {\r\n            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\r\n            runner.counterTimestamp = time;\r\n            runner.frameCounter = 0;\r\n        }\r\n\r\n        Engine.update(engine, delta, correction);\r\n    },\r\n\r\n    /**\r\n     * Manually advances the physics simulation by one iteration.\r\n     * \r\n     * You can optionally pass in the `delta` and `correction` values to be used by Engine.update.\r\n     * If undefined they use the Matter defaults of 60Hz and no correction.\r\n     * \r\n     * Calling `step` directly bypasses any checks of `enabled` or `autoUpdate`.\r\n     * \r\n     * It also ignores any custom `getDelta` functions, as you should be passing the delta\r\n     * value in to this call.\r\n     *\r\n     * You can adjust the number of iterations that Engine.update performs internally.\r\n     * Use the Scene Matter Physics config object to set the following properties:\r\n     *\r\n     * positionIterations (defaults to 6)\r\n     * velocityIterations (defaults to 4)\r\n     * constraintIterations (defaults to 2)\r\n     *\r\n     * Adjusting these values can help performance in certain situations, depending on the physics requirements\r\n     * of your game.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#step\r\n     * @since 3.4.0\r\n     *\r\n     * @param {number} [delta=16.666] - The delta value.\r\n     * @param {number} [correction=1] - Optional delta correction value.\r\n     */\r\n    step: function (delta, correction)\r\n    {\r\n        Engine.update(this.engine, delta, correction);\r\n    },\r\n\r\n    /**\r\n     * Runs the Matter Engine.update at a fixed timestep of 60Hz.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#update60Hz\r\n     * @since 3.4.0\r\n     *\r\n     * @return {number} The delta value to be passed to Engine.update.\r\n     */\r\n    update60Hz: function ()\r\n    {\r\n        return 1000 / 60;\r\n    },\r\n\r\n    /**\r\n     * Runs the Matter Engine.update at a fixed timestep of 30Hz.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#update30Hz\r\n     * @since 3.4.0\r\n     *\r\n     * @return {number} The delta value to be passed to Engine.update.\r\n     */\r\n    update30Hz: function ()\r\n    {\r\n        return 1000 / 30;\r\n    },\r\n\r\n    /**\r\n     * Returns `true` if the given body can be found within the World.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#has\r\n     * @since 3.22.0\r\n     * \r\n     * @param {(MatterJS.Body|Phaser.GameObjects.GameObject)} body - The Matter Body, or Game Object, to search for within the world.\r\n     * \r\n     * @return {MatterJS.BodyType[]} An array of all the Matter JS Bodies in this World.\r\n     */\r\n    has: function (body)\r\n    {\r\n        var src = (body.hasOwnProperty('body')) ? body.body : body;\r\n\r\n        return (Composite.get(this.localWorld, src.id, src.type) !== null);\r\n    },\r\n\r\n    /**\r\n     * Returns all the bodies in the Matter World, including all bodies in children, recursively.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#getAllBodies\r\n     * @since 3.22.0\r\n     * \r\n     * @return {MatterJS.BodyType[]} An array of all the Matter JS Bodies in this World.\r\n     */\r\n    getAllBodies: function ()\r\n    {\r\n        return Composite.allBodies(this.localWorld);\r\n    },\r\n\r\n    /**\r\n     * Returns all the constraints in the Matter World, including all constraints in children, recursively.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#getAllConstraints\r\n     * @since 3.22.0\r\n     * \r\n     * @return {MatterJS.ConstraintType[]} An array of all the Matter JS Constraints in this World.\r\n     */\r\n    getAllConstraints: function ()\r\n    {\r\n        return Composite.allConstraints(this.localWorld);\r\n    },\r\n\r\n    /**\r\n     * Returns all the composites in the Matter World, including all composites in children, recursively.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#getAllComposites\r\n     * @since 3.22.0\r\n     * \r\n     * @return {MatterJS.CompositeType[]} An array of all the Matter JS Composites in this World.\r\n     */\r\n    getAllComposites: function ()\r\n    {\r\n        return Composite.allComposites(this.localWorld);\r\n    },\r\n\r\n    /**\r\n     * Handles the rendering of bodies and debug information to the debug Graphics object, if enabled.\r\n     * \r\n     * This method is called automatically by the Scene after all processing has taken place.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#postUpdate\r\n     * @private\r\n     * @since 3.0.0\r\n     */\r\n    postUpdate: function ()\r\n    {\r\n        if (!this.drawDebug)\r\n        {\r\n            return;\r\n        }\r\n\r\n        var config = this.debugConfig;\r\n        var engine = this.engine;\r\n        var graphics = this.debugGraphic;\r\n\r\n        var bodies = Composite.allBodies(this.localWorld);\r\n\r\n        this.debugGraphic.clear();\r\n\r\n        if (config.showBroadphase && engine.broadphase.controller)\r\n        {\r\n            this.renderGrid(engine.broadphase, graphics, config.broadphaseColor, 0.5);\r\n        }\r\n\r\n        if (config.showBounds)\r\n        {\r\n            this.renderBodyBounds(bodies, graphics, config.boundsColor, 0.5);\r\n        }\r\n\r\n        if (config.showBody || config.showStaticBody)\r\n        {\r\n            this.renderBodies(bodies);\r\n        }\r\n\r\n        if (config.showJoint)\r\n        {\r\n            this.renderJoints();\r\n        }\r\n\r\n        if (config.showAxes || config.showAngleIndicator)\r\n        {\r\n            this.renderBodyAxes(bodies, graphics, config.showAxes, config.angleColor, 0.5);\r\n        }\r\n\r\n        if (config.showVelocity)\r\n        {\r\n            this.renderBodyVelocity(bodies, graphics, config.velocityColor, 1, 2);\r\n        }\r\n\r\n        if (config.showSeparations)\r\n        {\r\n            this.renderSeparations(engine.pairs.list, graphics, config.separationColor);\r\n        }\r\n\r\n        if (config.showCollisions)\r\n        {\r\n            this.renderCollisions(engine.pairs.list, graphics, config.collisionColor);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Renders the Engine Broadphase Controller Grid to the given Graphics instance.\r\n     * \r\n     * The debug renderer calls this method if the `showBroadphase` config value is set.\r\n     * \r\n     * This method is used internally by the Matter Debug Renderer, but is also exposed publically should\r\n     * you wish to render the Grid to your own Graphics instance.\r\n     * \r\n     * @method Phaser.Physics.Matter.World#renderGrid\r\n     * @since 3.22.0\r\n     * \r\n     * @param {MatterJS.Grid} grid - The Matter Grid to be rendered.\r\n     * @param {Phaser.GameObjects.Graphics} graphics - The Graphics object to render to.\r\n     * @param {number} lineColor - The line color.\r\n     * @param {number} lineOpacity - The line opacity, between 0 and 1.\r\n     * \r\n     * @return {this} This Matter World instance for method chaining.\r\n     */\r\n    renderGrid: function (grid, graphics, lineColor, lineOpacity)\r\n    {\r\n        graphics.lineStyle(1, lineColor, lineOpacity);\r\n\r\n        var bucketKeys = Common.keys(grid.buckets);\r\n\r\n        for (var i = 0; i < bucketKeys.length; i++)\r\n        {\r\n            var bucketId = bucketKeys[i];\r\n\r\n            if (grid.buckets[bucketId].length < 2)\r\n            {\r\n                continue;\r\n            }\r\n\r\n            var region = bucketId.split(/C|R/);\r\n\r\n            graphics.strokeRect(\r\n                parseInt(region[1], 10) * grid.bucketWidth,\r\n                parseInt(region[2], 10) * grid.bucketHeight,\r\n                grid.bucketWidth,\r\n                grid.bucketHeight\r\n            );\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Renders the list of Pair separations to the given Graphics instance.\r\n     * \r\n     * The debug renderer calls this method if the `showSeparations` config value is set.\r\n     * \r\n     * This method is used internally by the Matter Debug Renderer, but is also exposed publically should\r\n     * you wish to render the Grid to your own Graphics instance.\r\n     * \r\n     * @method Phaser.Physics.Matter.World#renderSeparations\r\n     * @since 3.22.0\r\n     * \r\n     * @param {MatterJS.Pair[]} pairs - An array of Matter Pairs to be rendered.\r\n     * @param {Phaser.GameObjects.Graphics} graphics - The Graphics object to render to.\r\n     * @param {number} lineColor - The line color.\r\n     * \r\n     * @return {this} This Matter World instance for method chaining.\r\n     */\r\n    renderSeparations: function (pairs, graphics, lineColor)\r\n    {\r\n        graphics.lineStyle(1, lineColor, 1);\r\n\r\n        for (var i = 0; i < pairs.length; i++)\r\n        {\r\n            var pair = pairs[i];\r\n\r\n            if (!pair.isActive)\r\n            {\r\n                continue;\r\n            }\r\n\r\n            var collision = pair.collision;\r\n            var bodyA = collision.bodyA;\r\n            var bodyB = collision.bodyB;\r\n            var posA = bodyA.position;\r\n            var posB = bodyB.position;\r\n            var penetration = collision.penetration;\r\n\r\n            var k = (!bodyA.isStatic && !bodyB.isStatic) ? 4 : 1;\r\n            \r\n            if (bodyB.isStatic)\r\n            {\r\n                k = 0;\r\n            }\r\n\r\n            graphics.lineBetween(\r\n                posB.x,\r\n                posB.y,\r\n                posB.x - (penetration.x * k),\r\n                posB.y - (penetration.y * k)\r\n            );\r\n\r\n            k = (!bodyA.isStatic && !bodyB.isStatic) ? 4 : 1;\r\n\r\n            if (bodyA.isStatic)\r\n            {\r\n                k = 0;\r\n            }\r\n\r\n            graphics.lineBetween(\r\n                posA.x,\r\n                posA.y,\r\n                posA.x - (penetration.x * k),\r\n                posA.y - (penetration.y * k)\r\n            );\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Renders the list of collision points and normals to the given Graphics instance.\r\n     * \r\n     * The debug renderer calls this method if the `showCollisions` config value is set.\r\n     * \r\n     * This method is used internally by the Matter Debug Renderer, but is also exposed publically should\r\n     * you wish to render the Grid to your own Graphics instance.\r\n     * \r\n     * @method Phaser.Physics.Matter.World#renderCollisions\r\n     * @since 3.22.0\r\n     * \r\n     * @param {MatterJS.Pair[]} pairs - An array of Matter Pairs to be rendered.\r\n     * @param {Phaser.GameObjects.Graphics} graphics - The Graphics object to render to.\r\n     * @param {number} lineColor - The line color.\r\n     * \r\n     * @return {this} This Matter World instance for method chaining.\r\n     */\r\n    renderCollisions: function (pairs, graphics, lineColor)\r\n    {\r\n        graphics.lineStyle(1, lineColor, 0.5);\r\n        graphics.fillStyle(lineColor, 1);\r\n\r\n        var i;\r\n        var pair;\r\n\r\n        //  Collision Positions\r\n\r\n        for (i = 0; i < pairs.length; i++)\r\n        {\r\n            pair = pairs[i];\r\n\r\n            if (!pair.isActive)\r\n            {\r\n                continue;\r\n            }\r\n\r\n            for (var j = 0; j < pair.activeContacts.length; j++)\r\n            {\r\n                var contact = pair.activeContacts[j];\r\n                var vertex = contact.vertex;\r\n\r\n                graphics.fillRect(vertex.x - 2, vertex.y - 2, 5, 5);\r\n            }\r\n        }\r\n\r\n        //  Collision Normals\r\n\r\n        for (i = 0; i < pairs.length; i++)\r\n        {\r\n            pair = pairs[i];\r\n\r\n            if (!pair.isActive)\r\n            {\r\n                continue;\r\n            }\r\n\r\n            var collision = pair.collision;\r\n            var contacts = pair.activeContacts;\r\n\r\n            if (contacts.length > 0)\r\n            {\r\n                var normalPosX = contacts[0].vertex.x;\r\n                var normalPosY = contacts[0].vertex.y;\r\n\r\n                if (contacts.length === 2)\r\n                {\r\n                    normalPosX = (contacts[0].vertex.x + contacts[1].vertex.x) / 2;\r\n                    normalPosY = (contacts[0].vertex.y + contacts[1].vertex.y) / 2;\r\n                }\r\n\r\n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic)\r\n                {\r\n                    graphics.lineBetween(\r\n                        normalPosX - collision.normal.x * 8,\r\n                        normalPosY - collision.normal.y * 8,\r\n                        normalPosX,\r\n                        normalPosY\r\n                    );\r\n                }\r\n                else\r\n                {\r\n                    graphics.lineBetween(\r\n                        normalPosX + collision.normal.x * 8,\r\n                        normalPosY + collision.normal.y * 8,\r\n                        normalPosX,\r\n                        normalPosY\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Renders the bounds of an array of Bodies to the given Graphics instance.\r\n     * \r\n     * If the body is a compound body, it will render the bounds for the parent compound.\r\n     * \r\n     * The debug renderer calls this method if the `showBounds` config value is set.\r\n     * \r\n     * This method is used internally by the Matter Debug Renderer, but is also exposed publically should\r\n     * you wish to render bounds to your own Graphics instance.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#renderBodyBounds\r\n     * @since 3.22.0\r\n     * \r\n     * @param {array} bodies - An array of bodies from the localWorld.\r\n     * @param {Phaser.GameObjects.Graphics} graphics - The Graphics object to render to.\r\n     * @param {number} lineColor - The line color.\r\n     * @param {number} lineOpacity - The line opacity, between 0 and 1.\r\n     */\r\n    renderBodyBounds: function (bodies, graphics, lineColor, lineOpacity)\r\n    {\r\n        graphics.lineStyle(1, lineColor, lineOpacity);\r\n\r\n        for (var i = 0; i < bodies.length; i++)\r\n        {\r\n            var body = bodies[i];\r\n\r\n            //  1) Don't show invisible bodies\r\n            if (!body.render.visible)\r\n            {\r\n                continue;\r\n            }\r\n\r\n            var bounds = body.bounds;\r\n\r\n            if (bounds)\r\n            {\r\n                graphics.strokeRect(\r\n                    bounds.min.x,\r\n                    bounds.min.y,\r\n                    bounds.max.x - bounds.min.x,\r\n                    bounds.max.y - bounds.min.y\r\n                );\r\n            }\r\n            else\r\n            {\r\n                var parts = body.parts;\r\n\r\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++)\r\n                {\r\n                    var part = parts[j];\r\n    \r\n                    graphics.strokeRect(\r\n                        part.bounds.min.x,\r\n                        part.bounds.min.y,\r\n                        part.bounds.max.x - part.bounds.min.x,\r\n                        part.bounds.max.y - part.bounds.min.y\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Renders either all axes, or a single axis indicator, for an array of Bodies, to the given Graphics instance.\r\n     * \r\n     * The debug renderer calls this method if the `showAxes` or `showAngleIndicator` config values are set.\r\n     * \r\n     * This method is used internally by the Matter Debug Renderer, but is also exposed publically should\r\n     * you wish to render bounds to your own Graphics instance.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#renderBodyAxes\r\n     * @since 3.22.0\r\n     * \r\n     * @param {array} bodies - An array of bodies from the localWorld.\r\n     * @param {Phaser.GameObjects.Graphics} graphics - The Graphics object to render to.\r\n     * @param {boolean} showAxes - If `true` it will render all body axes. If `false` it will render a single axis indicator.\r\n     * @param {number} lineColor - The line color.\r\n     * @param {number} lineOpacity - The line opacity, between 0 and 1.\r\n     */\r\n    renderBodyAxes: function (bodies, graphics, showAxes, lineColor, lineOpacity)\r\n    {\r\n        graphics.lineStyle(1, lineColor, lineOpacity);\r\n\r\n        for (var i = 0; i < bodies.length; i++)\r\n        {\r\n            var body = bodies[i];\r\n            var parts = body.parts;\r\n\r\n            //  1) Don't show invisible bodies\r\n            if (!body.render.visible)\r\n            {\r\n                continue;\r\n            }\r\n\r\n            var part;\r\n            var j;\r\n            var k;\r\n\r\n            if (showAxes)\r\n            {\r\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++)\r\n                {\r\n                    part = parts[j];\r\n    \r\n                    for (k = 0; k < part.axes.length; k++)\r\n                    {\r\n                        var axis = part.axes[k];\r\n\r\n                        graphics.lineBetween(\r\n                            part.position.x,\r\n                            part.position.y,\r\n                            part.position.x + axis.x * 20,\r\n                            part.position.y + axis.y * 20\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n            else\r\n            {\r\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++)\r\n                {\r\n                    part = parts[j];\r\n    \r\n                    for (k = 0; k < part.axes.length; k++)\r\n                    {\r\n                        graphics.lineBetween(\r\n                            part.position.x,\r\n                            part.position.y,\r\n                            (part.vertices[0].x + part.vertices[part.vertices.length - 1].x) / 2,\r\n                            (part.vertices[0].y + part.vertices[part.vertices.length - 1].y) / 2\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Renders a velocity indicator for an array of Bodies, to the given Graphics instance.\r\n     * \r\n     * The debug renderer calls this method if the `showVelocity` config value is set.\r\n     * \r\n     * This method is used internally by the Matter Debug Renderer, but is also exposed publically should\r\n     * you wish to render bounds to your own Graphics instance.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#renderBodyVelocity\r\n     * @since 3.22.0\r\n     * \r\n     * @param {array} bodies - An array of bodies from the localWorld.\r\n     * @param {Phaser.GameObjects.Graphics} graphics - The Graphics object to render to.\r\n     * @param {number} lineColor - The line color.\r\n     * @param {number} lineOpacity - The line opacity, between 0 and 1.\r\n     * @param {number} lineThickness - The line thickness.\r\n     */\r\n    renderBodyVelocity: function (bodies, graphics, lineColor, lineOpacity, lineThickness)\r\n    {\r\n        graphics.lineStyle(lineThickness, lineColor, lineOpacity);\r\n\r\n        for (var i = 0; i < bodies.length; i++)\r\n        {\r\n            var body = bodies[i];\r\n\r\n            //  1) Don't show invisible bodies\r\n            if (!body.render.visible)\r\n            {\r\n                continue;\r\n            }\r\n\r\n            graphics.lineBetween(\r\n                body.position.x,\r\n                body.position.y,\r\n                body.position.x + (body.position.x - body.positionPrev.x) * 2,\r\n                body.position.y + (body.position.y - body.positionPrev.y) * 2\r\n            );\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Renders the given array of Bodies to the debug graphics instance.\r\n     * \r\n     * Called automatically by the `postUpdate` method.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#renderBodies\r\n     * @private\r\n     * @since 3.14.0\r\n     * \r\n     * @param {array} bodies - An array of bodies from the localWorld.\r\n     */\r\n    renderBodies: function (bodies)\r\n    {\r\n        var graphics = this.debugGraphic;\r\n\r\n        var config = this.debugConfig;\r\n\r\n        var showBody = config.showBody;\r\n        var showStaticBody = config.showStaticBody;\r\n        var showSleeping = config.showSleeping;\r\n        var showInternalEdges = config.showInternalEdges;\r\n        var showConvexHulls = config.showConvexHulls;\r\n\r\n        var renderFill = config.renderFill;\r\n        var renderLine = config.renderLine;\r\n\r\n        var staticBodySleepOpacity = config.staticBodySleepOpacity;\r\n        var sleepFillColor = config.sleepFillColor;\r\n        var sleepLineColor = config.sleepLineColor;\r\n\r\n        var hullColor = config.hullColor;\r\n\r\n        for (var i = 0; i < bodies.length; i++)\r\n        {\r\n            var body = bodies[i];\r\n\r\n            //  1) Don't show invisible bodies\r\n            if (!body.render.visible)\r\n            {\r\n                continue;\r\n            }\r\n\r\n            //  2) Don't show static bodies, OR\r\n            //  3) Don't show dynamic bodies\r\n            if ((!showStaticBody && body.isStatic) || (!showBody && !body.isStatic))\r\n            {\r\n                continue;\r\n            }\r\n\r\n            var lineColor = body.render.lineColor;\r\n            var lineOpacity = body.render.lineOpacity;\r\n            var lineThickness = body.render.lineThickness;\r\n            var fillColor = body.render.fillColor;\r\n            var fillOpacity = body.render.fillOpacity;\r\n\r\n            if (showSleeping && body.isSleeping)\r\n            {\r\n                if (body.isStatic)\r\n                {\r\n                    lineOpacity *= staticBodySleepOpacity;\r\n                    fillOpacity *= staticBodySleepOpacity;\r\n                }\r\n                else\r\n                {\r\n                    lineColor = sleepLineColor;\r\n                    fillColor = sleepFillColor;\r\n                }\r\n            }\r\n\r\n            if (!renderFill)\r\n            {\r\n                fillColor = null;\r\n            }\r\n\r\n            if (!renderLine)\r\n            {\r\n                lineColor = null;\r\n            }\r\n\r\n            this.renderBody(body, graphics, showInternalEdges, lineColor, lineOpacity, lineThickness, fillColor, fillOpacity);\r\n\r\n            var partsLength = body.parts.length;\r\n\r\n            if (showConvexHulls && partsLength > 1)\r\n            {\r\n                this.renderConvexHull(body, graphics, hullColor, lineThickness);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Renders a single Matter Body to the given Phaser Graphics Game Object.\r\n     * \r\n     * This method is used internally by the Matter Debug Renderer, but is also exposed publically should\r\n     * you wish to render a Body to your own Graphics instance.\r\n     * \r\n     * If you don't wish to render a line around the body, set the `lineColor` parameter to `null`.\r\n     * Equally, if you don't wish to render a fill, set the `fillColor` parameter to `null`.\r\n     * \r\n     * @method Phaser.Physics.Matter.World#renderBody\r\n     * @since 3.22.0\r\n     * \r\n     * @param {MatterJS.BodyType} body - The Matter Body to be rendered.\r\n     * @param {Phaser.GameObjects.Graphics} graphics - The Graphics object to render to.\r\n     * @param {boolean} showInternalEdges - Render internal edges of the polygon?\r\n     * @param {number} [lineColor] - The line color.\r\n     * @param {number} [lineOpacity] - The line opacity, between 0 and 1.\r\n     * @param {number} [lineThickness=1] - The line thickness.\r\n     * @param {number} [fillColor] - The fill color.\r\n     * @param {number} [fillOpacity] - The fill opacity, between 0 and 1.\r\n     * \r\n     * @return {this} This Matter World instance for method chaining.\r\n     */\r\n    renderBody: function (body, graphics, showInternalEdges, lineColor, lineOpacity, lineThickness, fillColor, fillOpacity)\r\n    {\r\n        if (lineColor === undefined) { lineColor = null; }\r\n        if (lineOpacity === undefined) { lineOpacity = null; }\r\n        if (lineThickness === undefined) { lineThickness = 1; }\r\n        if (fillColor === undefined) { fillColor = null; }\r\n        if (fillOpacity === undefined) { fillOpacity = null; }\r\n\r\n        var config = this.debugConfig;\r\n\r\n        var sensorFillColor = config.sensorFillColor;\r\n        var sensorLineColor = config.sensorLineColor;\r\n\r\n        //  Handle compound parts\r\n        var parts = body.parts;\r\n        var partsLength = parts.length;\r\n\r\n        for (var k = (partsLength > 1) ? 1 : 0; k < partsLength; k++)\r\n        {\r\n            var part = parts[k];\r\n            var render = part.render;\r\n            var opacity = render.opacity;\r\n\r\n            if (!render.visible || opacity === 0 || (part.isSensor && !config.showSensors))\r\n            {\r\n                continue;\r\n            }\r\n\r\n            //  Part polygon\r\n            var circleRadius = part.circleRadius;\r\n\r\n            graphics.beginPath();\r\n\r\n            if (part.isSensor)\r\n            {\r\n                if (fillColor !== null)\r\n                {\r\n                    graphics.fillStyle(sensorFillColor, fillOpacity * opacity);\r\n                }\r\n    \r\n                if (lineColor !== null)\r\n                {\r\n                    graphics.lineStyle(lineThickness, sensorLineColor, lineOpacity * opacity);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if (fillColor !== null)\r\n                {\r\n                    graphics.fillStyle(fillColor, fillOpacity * opacity);\r\n                }\r\n    \r\n                if (lineColor !== null)\r\n                {\r\n                    graphics.lineStyle(lineThickness, lineColor, lineOpacity * opacity);\r\n                }\r\n            }\r\n\r\n            if (circleRadius)\r\n            {\r\n                graphics.arc(part.position.x, part.position.y, circleRadius, 0, 2 * Math.PI);\r\n            }\r\n            else\r\n            {\r\n                var vertices = part.vertices;\r\n                var vertLength = vertices.length;\r\n\r\n                graphics.moveTo(vertices[0].x, vertices[0].y);\r\n\r\n                for (var j = 1; j < vertLength; j++)\r\n                {\r\n                    var vert = vertices[j];\r\n\r\n                    if (!vertices[j - 1].isInternal || showInternalEdges)\r\n                    {\r\n                        graphics.lineTo(vert.x, vert.y);\r\n                    }\r\n                    else\r\n                    {\r\n                        graphics.moveTo(vert.x, vert.y);\r\n                    }\r\n\r\n                    if (j < vertLength && vert.isInternal && !showInternalEdges)\r\n                    {\r\n                        var nextIndex = (j + 1) % vertLength;\r\n\r\n                        graphics.moveTo(vertices[nextIndex].x, vertices[nextIndex].y);\r\n                    }\r\n                }\r\n                \r\n                graphics.closePath();\r\n            }\r\n\r\n            if (fillColor !== null)\r\n            {\r\n                graphics.fillPath();\r\n            }\r\n\r\n            if (lineColor !== null)\r\n            {\r\n                graphics.strokePath();\r\n            }\r\n        }\r\n\r\n        if (config.showPositions && !body.isStatic)\r\n        {\r\n            var px = body.position.x;\r\n            var py = body.position.y;\r\n            var hs = Math.ceil(config.positionSize / 2);\r\n\r\n            graphics.fillStyle(config.positionColor, 1);\r\n            graphics.fillRect(px - hs, py - hs, config.positionSize, config.positionSize);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Renders the Convex Hull for a single Matter Body to the given Phaser Graphics Game Object.\r\n     * \r\n     * This method is used internally by the Matter Debug Renderer, but is also exposed publically should\r\n     * you wish to render a Body hull to your own Graphics instance.\r\n     * \r\n     * @method Phaser.Physics.Matter.World#renderConvexHull\r\n     * @since 3.22.0\r\n     * \r\n     * @param {MatterJS.BodyType} body - The Matter Body to be rendered.\r\n     * @param {Phaser.GameObjects.Graphics} graphics - The Graphics object to render to.\r\n     * @param {number} hullColor - The color used to render the hull.\r\n     * @param {number} [lineThickness=1] - The hull line thickness.\r\n     * \r\n     * @return {this} This Matter World instance for method chaining.\r\n     */\r\n    renderConvexHull: function (body, graphics, hullColor, lineThickness)\r\n    {\r\n        if (lineThickness === undefined) { lineThickness = 1; }\r\n\r\n        var parts = body.parts;\r\n        var partsLength = parts.length;\r\n\r\n        //  Render Convex Hulls\r\n        if (partsLength > 1)\r\n        {\r\n            var verts = body.vertices;\r\n\r\n            graphics.lineStyle(lineThickness, hullColor);\r\n\r\n            graphics.beginPath();\r\n\r\n            graphics.moveTo(verts[0].x, verts[0].y);\r\n\r\n            for (var v = 1; v < verts.length; v++)\r\n            {\r\n                graphics.lineTo(verts[v].x, verts[v].y);\r\n            }\r\n            \r\n            graphics.lineTo(verts[0].x, verts[0].y);\r\n\r\n            graphics.strokePath();\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Renders all of the constraints in the world (unless they are specifically set to invisible).\r\n     * \r\n     * Called automatically by the `postUpdate` method.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#renderJoints\r\n     * @private\r\n     * @since 3.14.0\r\n     */\r\n    renderJoints: function ()\r\n    {\r\n        var graphics = this.debugGraphic;\r\n\r\n        // Render constraints \r\n        var constraints = Composite.allConstraints(this.localWorld);\r\n\r\n        for (var i = 0; i < constraints.length; i++)\r\n        {\r\n            var config = constraints[i].render;\r\n\r\n            var lineColor = config.lineColor;\r\n            var lineOpacity = config.lineOpacity;\r\n            var lineThickness = config.lineThickness;\r\n            var pinSize = config.pinSize;\r\n            var anchorColor = config.anchorColor;\r\n            var anchorSize = config.anchorSize;\r\n\r\n            this.renderConstraint(constraints[i], graphics, lineColor, lineOpacity, lineThickness, pinSize, anchorColor, anchorSize);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Renders a single Matter Constraint, such as a Pin or a Spring, to the given Phaser Graphics Game Object.\r\n     * \r\n     * This method is used internally by the Matter Debug Renderer, but is also exposed publically should\r\n     * you wish to render a Constraint to your own Graphics instance.\r\n     * \r\n     * @method Phaser.Physics.Matter.World#renderConstraint\r\n     * @since 3.22.0\r\n     * \r\n     * @param {MatterJS.ConstraintType} constraint - The Matter Constraint to render.\r\n     * @param {Phaser.GameObjects.Graphics} graphics - The Graphics object to render to.\r\n     * @param {number} lineColor - The line color.\r\n     * @param {number} lineOpacity - The line opacity, between 0 and 1.\r\n     * @param {number} lineThickness - The line thickness.\r\n     * @param {number} pinSize - If this constraint is a pin, this sets the size of the pin circle.\r\n     * @param {number} anchorColor - The color used when rendering this constraints anchors. Set to `null` to not render anchors.\r\n     * @param {number} anchorSize - The size of the anchor circle, if this constraint has anchors and is rendering them.\r\n     * \r\n     * @return {this} This Matter World instance for method chaining.\r\n     */\r\n    renderConstraint: function (constraint, graphics, lineColor, lineOpacity, lineThickness, pinSize, anchorColor, anchorSize)\r\n    {\r\n        var render = constraint.render;\r\n\r\n        if (!render.visible || !constraint.pointA || !constraint.pointB)\r\n        {\r\n            return this;\r\n        }\r\n\r\n        graphics.lineStyle(lineThickness, lineColor, lineOpacity);\r\n\r\n        var bodyA = constraint.bodyA;\r\n        var bodyB = constraint.bodyB;\r\n        var start;\r\n        var end;\r\n\r\n        if (bodyA)\r\n        {\r\n            start = Vector.add(bodyA.position, constraint.pointA);\r\n        }\r\n        else\r\n        {\r\n            start = constraint.pointA;\r\n        }\r\n\r\n        if (render.type === 'pin')\r\n        {\r\n            graphics.strokeCircle(start.x, start.y, pinSize);\r\n        }\r\n        else\r\n        {\r\n            if (bodyB)\r\n            {\r\n                end = Vector.add(bodyB.position, constraint.pointB);\r\n            }\r\n            else\r\n            {\r\n                end = constraint.pointB;\r\n            }\r\n\r\n            graphics.beginPath();\r\n            graphics.moveTo(start.x, start.y);\r\n\r\n            if (render.type === 'spring')\r\n            {\r\n                var delta = Vector.sub(end, start);\r\n                var normal = Vector.perp(Vector.normalise(delta));\r\n                var coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20));\r\n                var offset;\r\n\r\n                for (var j = 1; j < coils; j += 1)\r\n                {\r\n                    offset = (j % 2 === 0) ? 1 : -1;\r\n\r\n                    graphics.lineTo(\r\n                        start.x + delta.x * (j / coils) + normal.x * offset * 4,\r\n                        start.y + delta.y * (j / coils) + normal.y * offset * 4\r\n                    );\r\n                }\r\n            }\r\n\r\n            graphics.lineTo(end.x, end.y);\r\n        }\r\n\r\n        graphics.strokePath();\r\n\r\n        if (render.anchors && anchorSize > 0)\r\n        {\r\n            graphics.fillStyle(anchorColor);\r\n            graphics.fillCircle(start.x, start.y, anchorSize);\r\n            graphics.fillCircle(end.x, end.y, anchorSize);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Resets the internal collision IDs that Matter.JS uses for Body collision groups.\r\n     * \r\n     * You should call this before destroying your game if you need to restart the game\r\n     * again on the same page, without first reloading the page. Or, if you wish to\r\n     * consistently destroy a Scene that contains Matter.js and then run it again\r\n     * later in the same game.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#resetCollisionIDs\r\n     * @since 3.17.0\r\n     */\r\n    resetCollisionIDs: function ()\r\n    {\r\n        Body._nextCollidingGroupId = 1;\r\n        Body._nextNonCollidingGroupId = -1;\r\n        Body._nextCategory = 0x0001;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Will remove all Matter physics event listeners and clear the matter physics world,\r\n     * engine and any debug graphics, if any.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#shutdown\r\n     * @since 3.0.0\r\n     */\r\n    shutdown: function ()\r\n    {\r\n        MatterEvents.off(this.engine);\r\n\r\n        this.removeAllListeners();\r\n\r\n        MatterWorld.clear(this.localWorld, false);\r\n\r\n        Engine.clear(this.engine);\r\n\r\n        if (this.drawDebug)\r\n        {\r\n            this.debugGraphic.destroy();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Will remove all Matter physics event listeners and clear the matter physics world,\r\n     * engine and any debug graphics, if any.\r\n     *\r\n     * After destroying the world it cannot be re-used again.\r\n     *\r\n     * @method Phaser.Physics.Matter.World#destroy\r\n     * @since 3.0.0\r\n     */\r\n    destroy: function ()\r\n    {\r\n        this.shutdown();\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = World;\r\n"},"lineCount":2216}},"error":null,"hash":"92d43d38cf9f0c388144782676b67057","cacheData":{"env":{}}}