{"id":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591206076000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000},{"name":"../../utils/Class","loc":{"line":7,"column":20},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/loader/filetypes/GLSLFile.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/utils/Class.js"},{"name":"../const","loc":{"line":8,"column":20},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/loader/filetypes/GLSLFile.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/loader/const.js"},{"name":"../File","loc":{"line":9,"column":19},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/loader/filetypes/GLSLFile.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/loader/File.js"},{"name":"../FileTypesManager","loc":{"line":10,"column":31},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/loader/filetypes/GLSLFile.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/loader/FileTypesManager.js"},{"name":"../../utils/object/GetFastValue","loc":{"line":11,"column":27},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/loader/filetypes/GLSLFile.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/utils/object/GetFastValue.js"},{"name":"../../utils/object/IsPlainObject","loc":{"line":12,"column":28},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/loader/filetypes/GLSLFile.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/utils/object/IsPlainObject.js"},{"name":"../../display/shader/BaseShader","loc":{"line":13,"column":21},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/loader/filetypes/GLSLFile.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/display/shader/BaseShader.js"}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar CONST = require('../const');\r\nvar File = require('../File');\r\nvar FileTypesManager = require('../FileTypesManager');\r\nvar GetFastValue = require('../../utils/object/GetFastValue');\r\nvar IsPlainObject = require('../../utils/object/IsPlainObject');\r\nvar Shader = require('../../display/shader/BaseShader');\r\n\r\n/**\r\n * @classdesc\r\n * A single GLSL File suitable for loading by the Loader.\r\n *\r\n * These are created when you use the Phaser.Loader.LoaderPlugin#glsl method and are not typically created directly.\r\n *\r\n * For documentation about what all the arguments and configuration options mean please see Phaser.Loader.LoaderPlugin#glsl.\r\n *\r\n * @class GLSLFile\r\n * @extends Phaser.Loader.File\r\n * @memberof Phaser.Loader.FileTypes\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Loader.LoaderPlugin} loader - A reference to the Loader that is responsible for this file.\r\n * @param {(string|Phaser.Types.Loader.FileTypes.GLSLFileConfig)} key - The key to use for this file, or a file configuration object.\r\n * @param {string} [url] - The absolute or relative URL to load this file from. If undefined or `null` it will be set to `<key>.txt`, i.e. if `key` was \"alien\" then the URL will be \"alien.txt\".\r\n * @param {string} [shaderType='fragment'] - The type of shader. Either `fragment` for a fragment shader, or `vertex` for a vertex shader. This is ignored if you load a shader bundle.\r\n * @param {Phaser.Types.Loader.XHRSettingsObject} [xhrSettings] - Extra XHR Settings specifically for this file.\r\n */\r\nvar GLSLFile = new Class({\r\n\r\n    Extends: File,\r\n\r\n    initialize:\r\n\r\n    function GLSLFile (loader, key, url, shaderType, xhrSettings)\r\n    {\r\n        var extension = 'glsl';\r\n\r\n        if (IsPlainObject(key))\r\n        {\r\n            var config = key;\r\n\r\n            key = GetFastValue(config, 'key');\r\n            url = GetFastValue(config, 'url');\r\n            shaderType = GetFastValue(config, 'shaderType', 'fragment');\r\n            xhrSettings = GetFastValue(config, 'xhrSettings');\r\n            extension = GetFastValue(config, 'extension', extension);\r\n        }\r\n        else if (shaderType === undefined)\r\n        {\r\n            shaderType = 'fragment';\r\n        }\r\n\r\n        var fileConfig = {\r\n            type: 'glsl',\r\n            cache: loader.cacheManager.shader,\r\n            extension: extension,\r\n            responseType: 'text',\r\n            key: key,\r\n            url: url,\r\n            config: {\r\n                shaderType: shaderType\r\n            },\r\n            xhrSettings: xhrSettings\r\n        };\r\n\r\n        File.call(this, loader, fileConfig);\r\n    },\r\n\r\n    /**\r\n     * Called automatically by Loader.nextFile.\r\n     * This method controls what extra work this File does with its loaded data.\r\n     *\r\n     * @method Phaser.Loader.FileTypes.GLSLFile#onProcess\r\n     * @since 3.7.0\r\n     */\r\n    onProcess: function ()\r\n    {\r\n        this.state = CONST.FILE_PROCESSING;\r\n\r\n        this.data = this.xhrLoader.responseText;\r\n\r\n        this.onProcessComplete();\r\n    },\r\n\r\n    /**\r\n     * Adds this file to its target cache upon successful loading and processing.\r\n     *\r\n     * @method Phaser.Loader.FileTypes.GLSLFile#addToCache\r\n     * @since 3.17.0\r\n     */\r\n    addToCache: function ()\r\n    {\r\n        var data = this.data.split('\\n');\r\n\r\n        //  Check to see if this is a shader bundle, or raw glsl file.\r\n        var block = this.extractBlock(data, 0);\r\n\r\n        if (block)\r\n        {\r\n            while (block)\r\n            {\r\n                var key = this.getShaderName(block.header);\r\n                var shaderType = this.getShaderType(block.header);\r\n                var uniforms = this.getShaderUniforms(block.header);\r\n                var shaderSrc = block.shader;\r\n\r\n                if (this.cache.has(key))\r\n                {\r\n                    var shader = this.cache.get(key);\r\n\r\n                    if (shaderType === 'fragment')\r\n                    {\r\n                        shader.fragmentSrc = shaderSrc;\r\n                    }\r\n                    else\r\n                    {\r\n                        shader.vertexSrc = shaderSrc;\r\n                    }\r\n\r\n                    if (!shader.uniforms)\r\n                    {\r\n                        shader.uniforms = uniforms;\r\n                    }\r\n                }\r\n                else if (shaderType === 'fragment')\r\n                {\r\n                    this.cache.add(key, new Shader(key, shaderSrc, '', uniforms));\r\n                }\r\n                else\r\n                {\r\n                    this.cache.add(key, new Shader(key, '', shaderSrc, uniforms));\r\n                }\r\n\r\n                block = this.extractBlock(data, block.offset);\r\n            }\r\n        }\r\n        else if (this.config.shaderType === 'fragment')\r\n        {\r\n            //  Single shader\r\n            this.cache.add(this.key, new Shader(this.key, this.data));\r\n        }\r\n        else\r\n        {\r\n            this.cache.add(this.key, new Shader(this.key, '', this.data));\r\n        }\r\n\r\n        this.pendingDestroy();\r\n    },\r\n\r\n    /**\r\n     * Returns the name of the shader from the header block.\r\n     *\r\n     * @method Phaser.Loader.FileTypes.GLSLFile#getShaderName\r\n     * @since 3.17.0\r\n     *\r\n     * @param {string[]} headerSource - The header data.\r\n     *\r\n     * @return {string} The shader name.\r\n     */\r\n    getShaderName: function (headerSource)\r\n    {\r\n        for (var i = 0; i < headerSource.length; i++)\r\n        {\r\n            var line = headerSource[i].trim();\r\n\r\n            if (line.substring(0, 5) === 'name:')\r\n            {\r\n                return line.substring(5).trim();\r\n            }\r\n        }\r\n\r\n        return this.key;\r\n    },\r\n\r\n    /**\r\n     * Returns the type of the shader from the header block.\r\n     *\r\n     * @method Phaser.Loader.FileTypes.GLSLFile#getShaderType\r\n     * @since 3.17.0\r\n     *\r\n     * @param {string[]} headerSource - The header data.\r\n     *\r\n     * @return {string} The shader type. Either 'fragment' or 'vertex'.\r\n     */\r\n    getShaderType: function (headerSource)\r\n    {\r\n        for (var i = 0; i < headerSource.length; i++)\r\n        {\r\n            var line = headerSource[i].trim();\r\n\r\n            if (line.substring(0, 5) === 'type:')\r\n            {\r\n                return line.substring(5).trim();\r\n            }\r\n        }\r\n\r\n        return this.config.shaderType;\r\n    },\r\n\r\n    /**\r\n     * Returns the shader uniforms from the header block.\r\n     *\r\n     * @method Phaser.Loader.FileTypes.GLSLFile#getShaderUniforms\r\n     * @since 3.17.0\r\n     *\r\n     * @param {string[]} headerSource - The header data.\r\n     *\r\n     * @return {any} The shader uniforms object.\r\n     */\r\n    getShaderUniforms: function (headerSource)\r\n    {\r\n        var uniforms = {};\r\n\r\n        for (var i = 0; i < headerSource.length; i++)\r\n        {\r\n            var line = headerSource[i].trim();\r\n\r\n            if (line.substring(0, 8) === 'uniform.')\r\n            {\r\n                var pos = line.indexOf(':');\r\n\r\n                if (pos)\r\n                {\r\n                    var key = line.substring(8, pos);\r\n\r\n                    try\r\n                    {\r\n                        uniforms[key] = JSON.parse(line.substring(pos + 1));\r\n                    }\r\n                    catch (e)\r\n                    {\r\n                        console.warn('Invalid uniform JSON: ' + key);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return uniforms;\r\n    },\r\n\r\n    /**\r\n     * Processes the shader file and extracts the relevant data.\r\n     *\r\n     * @method Phaser.Loader.FileTypes.GLSLFile#extractBlock\r\n     * @private\r\n     * @since 3.17.0\r\n     *\r\n     * @param {string[]} data - The array of shader data to process.\r\n     * @param {integer} offset - The offset to start processing from.\r\n     *\r\n     * @return {any} The processed shader block, or null.\r\n     */\r\n    extractBlock: function (data, offset)\r\n    {\r\n        var headerStart = -1;\r\n        var headerEnd = -1;\r\n        var blockEnd = -1;\r\n        var headerOpen = false;\r\n        var captureSource = false;\r\n        var headerSource = [];\r\n        var shaderSource = [];\r\n\r\n        for (var i = offset; i < data.length; i++)\r\n        {\r\n            var line = data[i].trim();\r\n\r\n            if (line === '---')\r\n            {\r\n                if (headerStart === -1)\r\n                {\r\n                    headerStart = i;\r\n                    headerOpen = true;\r\n                }\r\n                else if (headerOpen)\r\n                {\r\n                    headerEnd = i;\r\n                    headerOpen = false;\r\n                    captureSource = true;\r\n                }\r\n                else\r\n                {\r\n                    //  We've hit another --- delimiter, break out\r\n                    captureSource = false;\r\n                    break;\r\n                }\r\n            }\r\n            else if (headerOpen)\r\n            {\r\n                headerSource.push(line);\r\n            }\r\n            else if (captureSource)\r\n            {\r\n                shaderSource.push(line);\r\n                blockEnd = i;\r\n            }\r\n        }\r\n\r\n        if (!headerOpen && headerEnd !== -1)\r\n        {\r\n            return { header: headerSource, shader: shaderSource.join('\\n'), offset: blockEnd };\r\n        }\r\n        else\r\n        {\r\n            return null;\r\n        }\r\n    }\r\n\r\n});\r\n\r\n/**\r\n * Adds a GLSL file, or array of GLSL files, to the current load queue.\r\n * In Phaser 3 GLSL files are just plain Text files at the current moment in time.\r\n *\r\n * You can call this method from within your Scene's `preload`, along with any other files you wish to load:\r\n *\r\n * ```javascript\r\n * function preload ()\r\n * {\r\n *     this.load.glsl('plasma', 'shaders/Plasma.glsl');\r\n * }\r\n * ```\r\n *\r\n * The file is **not** loaded right away. It is added to a queue ready to be loaded either when the loader starts,\r\n * or if it's already running, when the next free load slot becomes available. This happens automatically if you\r\n * are calling this from within the Scene's `preload` method, or a related callback. Because the file is queued\r\n * it means you cannot use the file immediately after calling this method, but must wait for the file to complete.\r\n * The typical flow for a Phaser Scene is that you load assets in the Scene's `preload` method and then when the\r\n * Scene's `create` method is called you are guaranteed that all of those assets are ready for use and have been\r\n * loaded.\r\n *\r\n * The key must be a unique String. It is used to add the file to the global Shader Cache upon a successful load.\r\n * The key should be unique both in terms of files being loaded and files already present in the Shader Cache.\r\n * Loading a file using a key that is already taken will result in a warning. If you wish to replace an existing file\r\n * then remove it from the Shader Cache first, before loading a new one.\r\n *\r\n * Instead of passing arguments you can pass a configuration object, such as:\r\n *\r\n * ```javascript\r\n * this.load.glsl({\r\n *     key: 'plasma',\r\n *     shaderType: 'fragment',\r\n *     url: 'shaders/Plasma.glsl'\r\n * });\r\n * ```\r\n *\r\n * See the documentation for `Phaser.Types.Loader.FileTypes.GLSLFileConfig` for more details.\r\n *\r\n * Once the file has finished loading you can access it from its Cache using its key:\r\n *\r\n * ```javascript\r\n * this.load.glsl('plasma', 'shaders/Plasma.glsl');\r\n * // and later in your game ...\r\n * var data = this.cache.shader.get('plasma');\r\n * ```\r\n *\r\n * If you have specified a prefix in the loader, via `Loader.setPrefix` then this value will be prepended to this files\r\n * key. For example, if the prefix was `FX.` and the key was `Plasma` the final key will be `FX.Plasma` and\r\n * this is what you would use to retrieve the text from the Shader Cache.\r\n *\r\n * The URL can be relative or absolute. If the URL is relative the `Loader.baseURL` and `Loader.path` values will be prepended to it.\r\n *\r\n * If the URL isn't specified the Loader will take the key and create a filename from that. For example if the key is \"plasma\"\r\n * and no URL is given then the Loader will set the URL to be \"plasma.glsl\". It will always add `.glsl` as the extension, although\r\n * this can be overridden if using an object instead of method arguments. If you do not desire this action then provide a URL.\r\n *\r\n * Note: The ability to load this type of file will only be available if the GLSL File type has been built into Phaser.\r\n * It is available in the default build but can be excluded from custom builds.\r\n *\r\n * @method Phaser.Loader.LoaderPlugin#glsl\r\n * @fires Phaser.Loader.LoaderPlugin#ADD\r\n * @since 3.0.0\r\n *\r\n * @param {(string|Phaser.Types.Loader.FileTypes.GLSLFileConfig|Phaser.Types.Loader.FileTypes.GLSLFileConfig[])} key - The key to use for this file, or a file configuration object, or array of them.\r\n * @param {string} [url] - The absolute or relative URL to load this file from. If undefined or `null` it will be set to `<key>.glsl`, i.e. if `key` was \"alien\" then the URL will be \"alien.glsl\".\r\n * @param {string} [shaderType='fragment'] - The type of shader. Either `fragment` for a fragment shader, or `vertex` for a vertex shader. This is ignored if you load a shader bundle.\r\n * @param {Phaser.Types.Loader.XHRSettingsObject} [xhrSettings] - An XHR Settings configuration object. Used in replacement of the Loaders default XHR Settings.\r\n *\r\n * @return {this} The Loader instance.\r\n */\r\nFileTypesManager.register('glsl', function (key, url, shaderType, xhrSettings)\r\n{\r\n    if (Array.isArray(key))\r\n    {\r\n        for (var i = 0; i < key.length; i++)\r\n        {\r\n            //  If it's an array it has to be an array of Objects, so we get everything out of the 'key' object\r\n            this.addFile(new GLSLFile(this, key[i]));\r\n        }\r\n    }\r\n    else\r\n    {\r\n        this.addFile(new GLSLFile(this, key, url, shaderType, xhrSettings));\r\n    }\r\n\r\n    return this;\r\n});\r\n\r\nmodule.exports = GLSLFile;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/GLSLFile.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}}],"sources":{"../node_modules/phaser/src/loader/filetypes/GLSLFile.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar CONST = require('../const');\r\nvar File = require('../File');\r\nvar FileTypesManager = require('../FileTypesManager');\r\nvar GetFastValue = require('../../utils/object/GetFastValue');\r\nvar IsPlainObject = require('../../utils/object/IsPlainObject');\r\nvar Shader = require('../../display/shader/BaseShader');\r\n\r\n/**\r\n * @classdesc\r\n * A single GLSL File suitable for loading by the Loader.\r\n *\r\n * These are created when you use the Phaser.Loader.LoaderPlugin#glsl method and are not typically created directly.\r\n *\r\n * For documentation about what all the arguments and configuration options mean please see Phaser.Loader.LoaderPlugin#glsl.\r\n *\r\n * @class GLSLFile\r\n * @extends Phaser.Loader.File\r\n * @memberof Phaser.Loader.FileTypes\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Loader.LoaderPlugin} loader - A reference to the Loader that is responsible for this file.\r\n * @param {(string|Phaser.Types.Loader.FileTypes.GLSLFileConfig)} key - The key to use for this file, or a file configuration object.\r\n * @param {string} [url] - The absolute or relative URL to load this file from. If undefined or `null` it will be set to `<key>.txt`, i.e. if `key` was \"alien\" then the URL will be \"alien.txt\".\r\n * @param {string} [shaderType='fragment'] - The type of shader. Either `fragment` for a fragment shader, or `vertex` for a vertex shader. This is ignored if you load a shader bundle.\r\n * @param {Phaser.Types.Loader.XHRSettingsObject} [xhrSettings] - Extra XHR Settings specifically for this file.\r\n */\r\nvar GLSLFile = new Class({\r\n\r\n    Extends: File,\r\n\r\n    initialize:\r\n\r\n    function GLSLFile (loader, key, url, shaderType, xhrSettings)\r\n    {\r\n        var extension = 'glsl';\r\n\r\n        if (IsPlainObject(key))\r\n        {\r\n            var config = key;\r\n\r\n            key = GetFastValue(config, 'key');\r\n            url = GetFastValue(config, 'url');\r\n            shaderType = GetFastValue(config, 'shaderType', 'fragment');\r\n            xhrSettings = GetFastValue(config, 'xhrSettings');\r\n            extension = GetFastValue(config, 'extension', extension);\r\n        }\r\n        else if (shaderType === undefined)\r\n        {\r\n            shaderType = 'fragment';\r\n        }\r\n\r\n        var fileConfig = {\r\n            type: 'glsl',\r\n            cache: loader.cacheManager.shader,\r\n            extension: extension,\r\n            responseType: 'text',\r\n            key: key,\r\n            url: url,\r\n            config: {\r\n                shaderType: shaderType\r\n            },\r\n            xhrSettings: xhrSettings\r\n        };\r\n\r\n        File.call(this, loader, fileConfig);\r\n    },\r\n\r\n    /**\r\n     * Called automatically by Loader.nextFile.\r\n     * This method controls what extra work this File does with its loaded data.\r\n     *\r\n     * @method Phaser.Loader.FileTypes.GLSLFile#onProcess\r\n     * @since 3.7.0\r\n     */\r\n    onProcess: function ()\r\n    {\r\n        this.state = CONST.FILE_PROCESSING;\r\n\r\n        this.data = this.xhrLoader.responseText;\r\n\r\n        this.onProcessComplete();\r\n    },\r\n\r\n    /**\r\n     * Adds this file to its target cache upon successful loading and processing.\r\n     *\r\n     * @method Phaser.Loader.FileTypes.GLSLFile#addToCache\r\n     * @since 3.17.0\r\n     */\r\n    addToCache: function ()\r\n    {\r\n        var data = this.data.split('\\n');\r\n\r\n        //  Check to see if this is a shader bundle, or raw glsl file.\r\n        var block = this.extractBlock(data, 0);\r\n\r\n        if (block)\r\n        {\r\n            while (block)\r\n            {\r\n                var key = this.getShaderName(block.header);\r\n                var shaderType = this.getShaderType(block.header);\r\n                var uniforms = this.getShaderUniforms(block.header);\r\n                var shaderSrc = block.shader;\r\n\r\n                if (this.cache.has(key))\r\n                {\r\n                    var shader = this.cache.get(key);\r\n\r\n                    if (shaderType === 'fragment')\r\n                    {\r\n                        shader.fragmentSrc = shaderSrc;\r\n                    }\r\n                    else\r\n                    {\r\n                        shader.vertexSrc = shaderSrc;\r\n                    }\r\n\r\n                    if (!shader.uniforms)\r\n                    {\r\n                        shader.uniforms = uniforms;\r\n                    }\r\n                }\r\n                else if (shaderType === 'fragment')\r\n                {\r\n                    this.cache.add(key, new Shader(key, shaderSrc, '', uniforms));\r\n                }\r\n                else\r\n                {\r\n                    this.cache.add(key, new Shader(key, '', shaderSrc, uniforms));\r\n                }\r\n\r\n                block = this.extractBlock(data, block.offset);\r\n            }\r\n        }\r\n        else if (this.config.shaderType === 'fragment')\r\n        {\r\n            //  Single shader\r\n            this.cache.add(this.key, new Shader(this.key, this.data));\r\n        }\r\n        else\r\n        {\r\n            this.cache.add(this.key, new Shader(this.key, '', this.data));\r\n        }\r\n\r\n        this.pendingDestroy();\r\n    },\r\n\r\n    /**\r\n     * Returns the name of the shader from the header block.\r\n     *\r\n     * @method Phaser.Loader.FileTypes.GLSLFile#getShaderName\r\n     * @since 3.17.0\r\n     *\r\n     * @param {string[]} headerSource - The header data.\r\n     *\r\n     * @return {string} The shader name.\r\n     */\r\n    getShaderName: function (headerSource)\r\n    {\r\n        for (var i = 0; i < headerSource.length; i++)\r\n        {\r\n            var line = headerSource[i].trim();\r\n\r\n            if (line.substring(0, 5) === 'name:')\r\n            {\r\n                return line.substring(5).trim();\r\n            }\r\n        }\r\n\r\n        return this.key;\r\n    },\r\n\r\n    /**\r\n     * Returns the type of the shader from the header block.\r\n     *\r\n     * @method Phaser.Loader.FileTypes.GLSLFile#getShaderType\r\n     * @since 3.17.0\r\n     *\r\n     * @param {string[]} headerSource - The header data.\r\n     *\r\n     * @return {string} The shader type. Either 'fragment' or 'vertex'.\r\n     */\r\n    getShaderType: function (headerSource)\r\n    {\r\n        for (var i = 0; i < headerSource.length; i++)\r\n        {\r\n            var line = headerSource[i].trim();\r\n\r\n            if (line.substring(0, 5) === 'type:')\r\n            {\r\n                return line.substring(5).trim();\r\n            }\r\n        }\r\n\r\n        return this.config.shaderType;\r\n    },\r\n\r\n    /**\r\n     * Returns the shader uniforms from the header block.\r\n     *\r\n     * @method Phaser.Loader.FileTypes.GLSLFile#getShaderUniforms\r\n     * @since 3.17.0\r\n     *\r\n     * @param {string[]} headerSource - The header data.\r\n     *\r\n     * @return {any} The shader uniforms object.\r\n     */\r\n    getShaderUniforms: function (headerSource)\r\n    {\r\n        var uniforms = {};\r\n\r\n        for (var i = 0; i < headerSource.length; i++)\r\n        {\r\n            var line = headerSource[i].trim();\r\n\r\n            if (line.substring(0, 8) === 'uniform.')\r\n            {\r\n                var pos = line.indexOf(':');\r\n\r\n                if (pos)\r\n                {\r\n                    var key = line.substring(8, pos);\r\n\r\n                    try\r\n                    {\r\n                        uniforms[key] = JSON.parse(line.substring(pos + 1));\r\n                    }\r\n                    catch (e)\r\n                    {\r\n                        console.warn('Invalid uniform JSON: ' + key);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return uniforms;\r\n    },\r\n\r\n    /**\r\n     * Processes the shader file and extracts the relevant data.\r\n     *\r\n     * @method Phaser.Loader.FileTypes.GLSLFile#extractBlock\r\n     * @private\r\n     * @since 3.17.0\r\n     *\r\n     * @param {string[]} data - The array of shader data to process.\r\n     * @param {integer} offset - The offset to start processing from.\r\n     *\r\n     * @return {any} The processed shader block, or null.\r\n     */\r\n    extractBlock: function (data, offset)\r\n    {\r\n        var headerStart = -1;\r\n        var headerEnd = -1;\r\n        var blockEnd = -1;\r\n        var headerOpen = false;\r\n        var captureSource = false;\r\n        var headerSource = [];\r\n        var shaderSource = [];\r\n\r\n        for (var i = offset; i < data.length; i++)\r\n        {\r\n            var line = data[i].trim();\r\n\r\n            if (line === '---')\r\n            {\r\n                if (headerStart === -1)\r\n                {\r\n                    headerStart = i;\r\n                    headerOpen = true;\r\n                }\r\n                else if (headerOpen)\r\n                {\r\n                    headerEnd = i;\r\n                    headerOpen = false;\r\n                    captureSource = true;\r\n                }\r\n                else\r\n                {\r\n                    //  We've hit another --- delimiter, break out\r\n                    captureSource = false;\r\n                    break;\r\n                }\r\n            }\r\n            else if (headerOpen)\r\n            {\r\n                headerSource.push(line);\r\n            }\r\n            else if (captureSource)\r\n            {\r\n                shaderSource.push(line);\r\n                blockEnd = i;\r\n            }\r\n        }\r\n\r\n        if (!headerOpen && headerEnd !== -1)\r\n        {\r\n            return { header: headerSource, shader: shaderSource.join('\\n'), offset: blockEnd };\r\n        }\r\n        else\r\n        {\r\n            return null;\r\n        }\r\n    }\r\n\r\n});\r\n\r\n/**\r\n * Adds a GLSL file, or array of GLSL files, to the current load queue.\r\n * In Phaser 3 GLSL files are just plain Text files at the current moment in time.\r\n *\r\n * You can call this method from within your Scene's `preload`, along with any other files you wish to load:\r\n *\r\n * ```javascript\r\n * function preload ()\r\n * {\r\n *     this.load.glsl('plasma', 'shaders/Plasma.glsl');\r\n * }\r\n * ```\r\n *\r\n * The file is **not** loaded right away. It is added to a queue ready to be loaded either when the loader starts,\r\n * or if it's already running, when the next free load slot becomes available. This happens automatically if you\r\n * are calling this from within the Scene's `preload` method, or a related callback. Because the file is queued\r\n * it means you cannot use the file immediately after calling this method, but must wait for the file to complete.\r\n * The typical flow for a Phaser Scene is that you load assets in the Scene's `preload` method and then when the\r\n * Scene's `create` method is called you are guaranteed that all of those assets are ready for use and have been\r\n * loaded.\r\n *\r\n * The key must be a unique String. It is used to add the file to the global Shader Cache upon a successful load.\r\n * The key should be unique both in terms of files being loaded and files already present in the Shader Cache.\r\n * Loading a file using a key that is already taken will result in a warning. If you wish to replace an existing file\r\n * then remove it from the Shader Cache first, before loading a new one.\r\n *\r\n * Instead of passing arguments you can pass a configuration object, such as:\r\n *\r\n * ```javascript\r\n * this.load.glsl({\r\n *     key: 'plasma',\r\n *     shaderType: 'fragment',\r\n *     url: 'shaders/Plasma.glsl'\r\n * });\r\n * ```\r\n *\r\n * See the documentation for `Phaser.Types.Loader.FileTypes.GLSLFileConfig` for more details.\r\n *\r\n * Once the file has finished loading you can access it from its Cache using its key:\r\n *\r\n * ```javascript\r\n * this.load.glsl('plasma', 'shaders/Plasma.glsl');\r\n * // and later in your game ...\r\n * var data = this.cache.shader.get('plasma');\r\n * ```\r\n *\r\n * If you have specified a prefix in the loader, via `Loader.setPrefix` then this value will be prepended to this files\r\n * key. For example, if the prefix was `FX.` and the key was `Plasma` the final key will be `FX.Plasma` and\r\n * this is what you would use to retrieve the text from the Shader Cache.\r\n *\r\n * The URL can be relative or absolute. If the URL is relative the `Loader.baseURL` and `Loader.path` values will be prepended to it.\r\n *\r\n * If the URL isn't specified the Loader will take the key and create a filename from that. For example if the key is \"plasma\"\r\n * and no URL is given then the Loader will set the URL to be \"plasma.glsl\". It will always add `.glsl` as the extension, although\r\n * this can be overridden if using an object instead of method arguments. If you do not desire this action then provide a URL.\r\n *\r\n * Note: The ability to load this type of file will only be available if the GLSL File type has been built into Phaser.\r\n * It is available in the default build but can be excluded from custom builds.\r\n *\r\n * @method Phaser.Loader.LoaderPlugin#glsl\r\n * @fires Phaser.Loader.LoaderPlugin#ADD\r\n * @since 3.0.0\r\n *\r\n * @param {(string|Phaser.Types.Loader.FileTypes.GLSLFileConfig|Phaser.Types.Loader.FileTypes.GLSLFileConfig[])} key - The key to use for this file, or a file configuration object, or array of them.\r\n * @param {string} [url] - The absolute or relative URL to load this file from. If undefined or `null` it will be set to `<key>.glsl`, i.e. if `key` was \"alien\" then the URL will be \"alien.glsl\".\r\n * @param {string} [shaderType='fragment'] - The type of shader. Either `fragment` for a fragment shader, or `vertex` for a vertex shader. This is ignored if you load a shader bundle.\r\n * @param {Phaser.Types.Loader.XHRSettingsObject} [xhrSettings] - An XHR Settings configuration object. Used in replacement of the Loaders default XHR Settings.\r\n *\r\n * @return {this} The Loader instance.\r\n */\r\nFileTypesManager.register('glsl', function (key, url, shaderType, xhrSettings)\r\n{\r\n    if (Array.isArray(key))\r\n    {\r\n        for (var i = 0; i < key.length; i++)\r\n        {\r\n            //  If it's an array it has to be an array of Objects, so we get everything out of the 'key' object\r\n            this.addFile(new GLSLFile(this, key[i]));\r\n        }\r\n    }\r\n    else\r\n    {\r\n        this.addFile(new GLSLFile(this, key, url, shaderType, xhrSettings));\r\n    }\r\n\r\n    return this;\r\n});\r\n\r\nmodule.exports = GLSLFile;\r\n"},"lineCount":406}},"error":null,"hash":"3faf60aa05b933bd8236380d2d9a4546","cacheData":{"env":{}}}