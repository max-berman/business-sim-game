{"id":"lxrW","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000},{"name":"../../GameObjectFactory","loc":{"line":7,"column":32},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/gameobjects/shape/curve/CurveFactory.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/gameobjects/GameObjectFactory.js"},{"name":"./Curve","loc":{"line":8,"column":20},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/gameobjects/shape/curve/CurveFactory.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/gameobjects/shape/curve/Curve.js"}],"generated":{"js":"var e=require(\"../../GameObjectFactory\"),r=require(\"./Curve\");e.register(\"curve\",function(e,i,t,s,u){return this.displayList.add(new r(this.scene,e,i,t,s,u))});"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/gameobjects/shape/curve/CurveFactory.js","original":{"line":7,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/shape/curve/CurveFactory.js","original":{"line":7,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/gameobjects/shape/curve/CurveFactory.js","original":{"line":7,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/gameobjects/shape/curve/CurveFactory.js","original":{"line":7,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/phaser/src/gameobjects/shape/curve/CurveFactory.js","original":{"line":8,"column":0},"generated":{"line":1,"column":41}},{"source":"../node_modules/phaser/src/gameobjects/shape/curve/CurveFactory.js","original":{"line":8,"column":0},"generated":{"line":1,"column":43}},{"source":"../node_modules/phaser/src/gameobjects/shape/curve/CurveFactory.js","original":{"line":8,"column":0},"generated":{"line":1,"column":51}},{"source":"../node_modules/phaser/src/gameobjects/shape/curve/CurveFactory.js","original":{"line":41,"column":0},"generated":{"line":1,"column":62}},{"source":"../node_modules/phaser/src/gameobjects/shape/curve/CurveFactory.js","original":{"line":41,"column":0},"generated":{"line":1,"column":64}},{"source":"../node_modules/phaser/src/gameobjects/shape/curve/CurveFactory.js","original":{"line":41,"column":0},"generated":{"line":1,"column":73}},{"source":"../node_modules/phaser/src/gameobjects/shape/curve/CurveFactory.js","original":{"line":41,"column":0},"generated":{"line":1,"column":81}},{"source":"../node_modules/phaser/src/gameobjects/shape/curve/CurveFactory.js","original":{"line":41,"column":0},"generated":{"line":1,"column":90}},{"source":"../node_modules/phaser/src/gameobjects/shape/curve/CurveFactory.js","original":{"line":41,"column":0},"generated":{"line":1,"column":92}},{"source":"../node_modules/phaser/src/gameobjects/shape/curve/CurveFactory.js","original":{"line":41,"column":0},"generated":{"line":1,"column":94}},{"source":"../node_modules/phaser/src/gameobjects/shape/curve/CurveFactory.js","original":{"line":41,"column":0},"generated":{"line":1,"column":96}},{"source":"../node_modules/phaser/src/gameobjects/shape/curve/CurveFactory.js","original":{"line":41,"column":0},"generated":{"line":1,"column":98}},{"source":"../node_modules/phaser/src/gameobjects/shape/curve/CurveFactory.js","original":{"line":43,"column":0},"generated":{"line":1,"column":101}},{"source":"../node_modules/phaser/src/gameobjects/shape/curve/CurveFactory.js","original":{"line":43,"column":0},"generated":{"line":1,"column":108}},{"source":"../node_modules/phaser/src/gameobjects/shape/curve/CurveFactory.js","original":{"line":43,"column":0},"generated":{"line":1,"column":113}},{"source":"../node_modules/phaser/src/gameobjects/shape/curve/CurveFactory.js","original":{"line":43,"column":0},"generated":{"line":1,"column":125}},{"source":"../node_modules/phaser/src/gameobjects/shape/curve/CurveFactory.js","original":{"line":43,"column":0},"generated":{"line":1,"column":129}},{"source":"../node_modules/phaser/src/gameobjects/shape/curve/CurveFactory.js","original":{"line":43,"column":0},"generated":{"line":1,"column":133}},{"source":"../node_modules/phaser/src/gameobjects/shape/curve/CurveFactory.js","original":{"line":43,"column":0},"generated":{"line":1,"column":135}},{"source":"../node_modules/phaser/src/gameobjects/shape/curve/CurveFactory.js","original":{"line":43,"column":0},"generated":{"line":1,"column":140}},{"source":"../node_modules/phaser/src/gameobjects/shape/curve/CurveFactory.js","original":{"line":43,"column":0},"generated":{"line":1,"column":146}},{"source":"../node_modules/phaser/src/gameobjects/shape/curve/CurveFactory.js","original":{"line":43,"column":0},"generated":{"line":1,"column":148}},{"source":"../node_modules/phaser/src/gameobjects/shape/curve/CurveFactory.js","original":{"line":43,"column":0},"generated":{"line":1,"column":150}},{"source":"../node_modules/phaser/src/gameobjects/shape/curve/CurveFactory.js","original":{"line":43,"column":0},"generated":{"line":1,"column":152}},{"source":"../node_modules/phaser/src/gameobjects/shape/curve/CurveFactory.js","original":{"line":43,"column":0},"generated":{"line":1,"column":154}}],"sources":{"../node_modules/phaser/src/gameobjects/shape/curve/CurveFactory.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar GameObjectFactory = require('../../GameObjectFactory');\r\nvar Curve = require('./Curve');\r\n\r\n/**\r\n * Creates a new Curve Shape Game Object and adds it to the Scene.\r\n *\r\n * Note: This method will only be available if the Curve Game Object has been built into Phaser.\r\n * \r\n * The Curve Shape is a Game Object that can be added to a Scene, Group or Container. You can\r\n * treat it like any other Game Object in your game, such as tweening it, scaling it, or enabling\r\n * it for input or physics. It provides a quick and easy way for you to render this shape in your\r\n * game without using a texture, while still taking advantage of being fully batched in WebGL.\r\n * \r\n * This shape supports both fill and stroke colors.\r\n * \r\n * To render a Curve Shape you must first create a `Phaser.Curves.Curve` object, then pass it to\r\n * the Curve Shape in the constructor.\r\n * \r\n * The Curve shape also has a `smoothness` property and corresponding `setSmoothness` method.\r\n * This allows you to control how smooth the shape renders in WebGL, by controlling the number of iterations\r\n * that take place during construction. Increase and decrease the default value for smoother, or more\r\n * jagged, shapes.\r\n *\r\n * @method Phaser.GameObjects.GameObjectFactory#curve\r\n * @since 3.13.0\r\n *\r\n * @param {number} [x=0] - The horizontal position of this Game Object in the world.\r\n * @param {number} [y=0] - The vertical position of this Game Object in the world.\r\n * @param {Phaser.Curves.Curve} [curve] - The Curve object to use to create the Shape.\r\n * @param {number} [fillColor] - The color the curve will be filled with, i.e. 0xff0000 for red.\r\n * @param {number} [fillAlpha] - The alpha the curve will be filled with. You can also set the alpha of the overall Shape using its `alpha` property.\r\n *\r\n * @return {Phaser.GameObjects.Curve} The Game Object that was created.\r\n */\r\nGameObjectFactory.register('curve', function (x, y, curve, fillColor, fillAlpha)\r\n{\r\n    return this.displayList.add(new Curve(this.scene, x, y, curve, fillColor, fillAlpha));\r\n});\r\n"},"lineCount":null}},"error":null,"hash":"61e5f801018146e6f7cbd87933da87c6","cacheData":{"env":{}}}