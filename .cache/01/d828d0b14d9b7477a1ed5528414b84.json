{"id":"../node_modules/phaser/src/display/shader/BaseShader.js","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591206076000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000},{"name":"../../utils/Class","loc":{"line":7,"column":20},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/display/shader/BaseShader.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/utils/Class.js"}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\n\r\n/**\r\n * @classdesc\r\n * A BaseShader is a small resource class that contains the data required for a WebGL Shader to be created.\r\n * \r\n * It contains the raw source code to the fragment and vertex shader, as well as an object that defines\r\n * the uniforms the shader requires, if any.\r\n * \r\n * BaseShaders are stored in the Shader Cache, available in a Scene via `this.cache.shaders` and are referenced\r\n * by a unique key-based string. Retrieve them via `this.cache.shaders.get(key)`.\r\n * \r\n * BaseShaders are created automatically by the GLSL File Loader when loading an external shader resource.\r\n * They can also be created at runtime, allowing you to use dynamically generated shader source code.\r\n * \r\n * Default fragment and vertex source is used if not provided in the constructor, setting-up a basic shader,\r\n * suitable for debug rendering.\r\n *\r\n * @class BaseShader\r\n * @memberof Phaser.Display\r\n * @constructor\r\n * @since 3.17.0\r\n *\r\n * @param {string} key - The key of this shader. Must be unique within the shader cache.\r\n * @param {string} [fragmentSrc] - The fragment source for the shader.\r\n * @param {string} [vertexSrc] - The vertex source for the shader.\r\n * @param {any} [uniforms] - Optional object defining the uniforms the shader uses.\r\n */\r\nvar BaseShader = new Class({\r\n\r\n    initialize:\r\n\r\n    function BaseShader (key, fragmentSrc, vertexSrc, uniforms)\r\n    {\r\n        if (!fragmentSrc || fragmentSrc === '')\r\n        {\r\n            fragmentSrc = [\r\n                'precision mediump float;',\r\n\r\n                'uniform vec2 resolution;',\r\n\r\n                'varying vec2 fragCoord;',\r\n\r\n                'void main () {',\r\n                '    vec2 uv = fragCoord / resolution.xy;',\r\n                '    gl_FragColor = vec4(uv.xyx, 1.0);',\r\n                '}'\r\n            ].join('\\n');\r\n        }\r\n\r\n        if (!vertexSrc || vertexSrc === '')\r\n        {\r\n            vertexSrc = [\r\n                'precision mediump float;',\r\n\r\n                'uniform mat4 uProjectionMatrix;',\r\n                'uniform mat4 uViewMatrix;',\r\n                'uniform vec2 uResolution;',\r\n\r\n                'attribute vec2 inPosition;',\r\n\r\n                'varying vec2 fragCoord;',\r\n\r\n                'void main () {',\r\n                'gl_Position = uProjectionMatrix * uViewMatrix * vec4(inPosition, 1.0, 1.0);',\r\n                'fragCoord = vec2(inPosition.x, uResolution.y - inPosition.y);',\r\n                '}'\r\n            ].join('\\n');\r\n        }\r\n\r\n        if (uniforms === undefined) { uniforms = null; }\r\n\r\n        /**\r\n         * The key of this shader, unique within the shader cache of this Phaser game instance.\r\n         *\r\n         * @name Phaser.Display.BaseShader#key\r\n         * @type {string}\r\n         * @since 3.17.0\r\n         */\r\n        this.key = key;\r\n\r\n        /**\r\n         * The source code, as a string, of the fragment shader being used.\r\n         *\r\n         * @name Phaser.Display.BaseShader#fragmentSrc\r\n         * @type {string}\r\n         * @since 3.17.0\r\n         */\r\n        this.fragmentSrc = fragmentSrc;\r\n\r\n        /**\r\n         * The source code, as a string, of the vertex shader being used.\r\n         *\r\n         * @name Phaser.Display.BaseShader#vertexSrc\r\n         * @type {string}\r\n         * @since 3.17.0\r\n         */\r\n        this.vertexSrc = vertexSrc;\r\n\r\n        /**\r\n         * The default uniforms for this shader.\r\n         *\r\n         * @name Phaser.Display.BaseShader#uniforms\r\n         * @type {?any}\r\n         * @since 3.17.0\r\n         */\r\n        this.uniforms = uniforms;\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = BaseShader;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/phaser/src/display/shader/BaseShader.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}}],"sources":{"../node_modules/phaser/src/display/shader/BaseShader.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\n\r\n/**\r\n * @classdesc\r\n * A BaseShader is a small resource class that contains the data required for a WebGL Shader to be created.\r\n * \r\n * It contains the raw source code to the fragment and vertex shader, as well as an object that defines\r\n * the uniforms the shader requires, if any.\r\n * \r\n * BaseShaders are stored in the Shader Cache, available in a Scene via `this.cache.shaders` and are referenced\r\n * by a unique key-based string. Retrieve them via `this.cache.shaders.get(key)`.\r\n * \r\n * BaseShaders are created automatically by the GLSL File Loader when loading an external shader resource.\r\n * They can also be created at runtime, allowing you to use dynamically generated shader source code.\r\n * \r\n * Default fragment and vertex source is used if not provided in the constructor, setting-up a basic shader,\r\n * suitable for debug rendering.\r\n *\r\n * @class BaseShader\r\n * @memberof Phaser.Display\r\n * @constructor\r\n * @since 3.17.0\r\n *\r\n * @param {string} key - The key of this shader. Must be unique within the shader cache.\r\n * @param {string} [fragmentSrc] - The fragment source for the shader.\r\n * @param {string} [vertexSrc] - The vertex source for the shader.\r\n * @param {any} [uniforms] - Optional object defining the uniforms the shader uses.\r\n */\r\nvar BaseShader = new Class({\r\n\r\n    initialize:\r\n\r\n    function BaseShader (key, fragmentSrc, vertexSrc, uniforms)\r\n    {\r\n        if (!fragmentSrc || fragmentSrc === '')\r\n        {\r\n            fragmentSrc = [\r\n                'precision mediump float;',\r\n\r\n                'uniform vec2 resolution;',\r\n\r\n                'varying vec2 fragCoord;',\r\n\r\n                'void main () {',\r\n                '    vec2 uv = fragCoord / resolution.xy;',\r\n                '    gl_FragColor = vec4(uv.xyx, 1.0);',\r\n                '}'\r\n            ].join('\\n');\r\n        }\r\n\r\n        if (!vertexSrc || vertexSrc === '')\r\n        {\r\n            vertexSrc = [\r\n                'precision mediump float;',\r\n\r\n                'uniform mat4 uProjectionMatrix;',\r\n                'uniform mat4 uViewMatrix;',\r\n                'uniform vec2 uResolution;',\r\n\r\n                'attribute vec2 inPosition;',\r\n\r\n                'varying vec2 fragCoord;',\r\n\r\n                'void main () {',\r\n                'gl_Position = uProjectionMatrix * uViewMatrix * vec4(inPosition, 1.0, 1.0);',\r\n                'fragCoord = vec2(inPosition.x, uResolution.y - inPosition.y);',\r\n                '}'\r\n            ].join('\\n');\r\n        }\r\n\r\n        if (uniforms === undefined) { uniforms = null; }\r\n\r\n        /**\r\n         * The key of this shader, unique within the shader cache of this Phaser game instance.\r\n         *\r\n         * @name Phaser.Display.BaseShader#key\r\n         * @type {string}\r\n         * @since 3.17.0\r\n         */\r\n        this.key = key;\r\n\r\n        /**\r\n         * The source code, as a string, of the fragment shader being used.\r\n         *\r\n         * @name Phaser.Display.BaseShader#fragmentSrc\r\n         * @type {string}\r\n         * @since 3.17.0\r\n         */\r\n        this.fragmentSrc = fragmentSrc;\r\n\r\n        /**\r\n         * The source code, as a string, of the vertex shader being used.\r\n         *\r\n         * @name Phaser.Display.BaseShader#vertexSrc\r\n         * @type {string}\r\n         * @since 3.17.0\r\n         */\r\n        this.vertexSrc = vertexSrc;\r\n\r\n        /**\r\n         * The default uniforms for this shader.\r\n         *\r\n         * @name Phaser.Display.BaseShader#uniforms\r\n         * @type {?any}\r\n         * @since 3.17.0\r\n         */\r\n        this.uniforms = uniforms;\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = BaseShader;\r\n"},"lineCount":119}},"error":null,"hash":"92d14105ed1234ce2c0ec00d5f7f8928","cacheData":{"env":{}}}