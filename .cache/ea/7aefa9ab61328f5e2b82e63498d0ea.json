{"id":"../node_modules/phaser/src/sound/events/GLOBAL_MUTE_EVENT.js","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591206076000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Sound Manager Global Mute Event.\r\n * \r\n * This event is dispatched by the Sound Manager when its `mute` property is changed, either directly\r\n * or via the `setMute` method. This changes the mute state of all active sounds.\r\n * \r\n * Listen to it from a Scene using: `this.sound.on('mute', listener)`.\r\n *\r\n * @event Phaser.Sound.Events#GLOBAL_MUTE\r\n * @since 3.0.0\r\n * \r\n * @param {(Phaser.Sound.WebAudioSoundManager|Phaser.Sound.HTML5AudioSoundManager)} soundManager - A reference to the Sound Manager that emitted the event.\r\n * @param {boolean} mute - The mute value. `true` if the Sound Manager is now muted, otherwise `false`.\r\n */\r\nmodule.exports = 'mute';\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/sound/events/GLOBAL_MUTE_EVENT.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/sound/events/GLOBAL_MUTE_EVENT.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/phaser/src/sound/events/GLOBAL_MUTE_EVENT.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/phaser/src/sound/events/GLOBAL_MUTE_EVENT.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/phaser/src/sound/events/GLOBAL_MUTE_EVENT.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/phaser/src/sound/events/GLOBAL_MUTE_EVENT.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/phaser/src/sound/events/GLOBAL_MUTE_EVENT.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/phaser/src/sound/events/GLOBAL_MUTE_EVENT.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/phaser/src/sound/events/GLOBAL_MUTE_EVENT.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/phaser/src/sound/events/GLOBAL_MUTE_EVENT.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/phaser/src/sound/events/GLOBAL_MUTE_EVENT.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/phaser/src/sound/events/GLOBAL_MUTE_EVENT.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/phaser/src/sound/events/GLOBAL_MUTE_EVENT.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/phaser/src/sound/events/GLOBAL_MUTE_EVENT.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/phaser/src/sound/events/GLOBAL_MUTE_EVENT.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/phaser/src/sound/events/GLOBAL_MUTE_EVENT.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/phaser/src/sound/events/GLOBAL_MUTE_EVENT.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/phaser/src/sound/events/GLOBAL_MUTE_EVENT.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/phaser/src/sound/events/GLOBAL_MUTE_EVENT.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/phaser/src/sound/events/GLOBAL_MUTE_EVENT.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/phaser/src/sound/events/GLOBAL_MUTE_EVENT.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/phaser/src/sound/events/GLOBAL_MUTE_EVENT.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}}],"sources":{"../node_modules/phaser/src/sound/events/GLOBAL_MUTE_EVENT.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Sound Manager Global Mute Event.\r\n * \r\n * This event is dispatched by the Sound Manager when its `mute` property is changed, either directly\r\n * or via the `setMute` method. This changes the mute state of all active sounds.\r\n * \r\n * Listen to it from a Scene using: `this.sound.on('mute', listener)`.\r\n *\r\n * @event Phaser.Sound.Events#GLOBAL_MUTE\r\n * @since 3.0.0\r\n * \r\n * @param {(Phaser.Sound.WebAudioSoundManager|Phaser.Sound.HTML5AudioSoundManager)} soundManager - A reference to the Sound Manager that emitted the event.\r\n * @param {boolean} mute - The mute value. `true` if the Sound Manager is now muted, otherwise `false`.\r\n */\r\nmodule.exports = 'mute';\r\n"},"lineCount":22}},"error":null,"hash":"eb88bb37411990a1cbed839394e2c983","cacheData":{"env":{}}}