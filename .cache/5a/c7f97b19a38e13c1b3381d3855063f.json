{"id":"../node_modules/phaser/src/display/color/HSVColorWheel.js","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591206076000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000},{"name":"./HSVToRGB","loc":{"line":7,"column":23},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/display/color/HSVColorWheel.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/display/color/HSVToRGB.js"}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar HSVToRGB = require('./HSVToRGB');\r\n\r\n/**\r\n * Get HSV color wheel values in an array which will be 360 elements in size.\r\n *\r\n * @function Phaser.Display.Color.HSVColorWheel\r\n * @since 3.0.0\r\n *\r\n * @param {number} [s=1] - The saturation, in the range 0 - 1.\r\n * @param {number} [v=1] - The value, in the range 0 - 1.\r\n *\r\n * @return {Phaser.Types.Display.ColorObject[]} An array containing 360 elements, where each contains a single numeric value corresponding to the color at that point in the HSV color wheel.\r\n */\r\nvar HSVColorWheel = function (s, v)\r\n{\r\n    if (s === undefined) { s = 1; }\r\n    if (v === undefined) { v = 1; }\r\n\r\n    var colors = [];\r\n\r\n    for (var c = 0; c <= 359; c++)\r\n    {\r\n        colors.push(HSVToRGB(c / 359, s, v));\r\n    }\r\n\r\n    return colors;\r\n};\r\n\r\nmodule.exports = HSVColorWheel;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/phaser/src/display/color/HSVColorWheel.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}}],"sources":{"../node_modules/phaser/src/display/color/HSVColorWheel.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar HSVToRGB = require('./HSVToRGB');\r\n\r\n/**\r\n * Get HSV color wheel values in an array which will be 360 elements in size.\r\n *\r\n * @function Phaser.Display.Color.HSVColorWheel\r\n * @since 3.0.0\r\n *\r\n * @param {number} [s=1] - The saturation, in the range 0 - 1.\r\n * @param {number} [v=1] - The value, in the range 0 - 1.\r\n *\r\n * @return {Phaser.Types.Display.ColorObject[]} An array containing 360 elements, where each contains a single numeric value corresponding to the color at that point in the HSV color wheel.\r\n */\r\nvar HSVColorWheel = function (s, v)\r\n{\r\n    if (s === undefined) { s = 1; }\r\n    if (v === undefined) { v = 1; }\r\n\r\n    var colors = [];\r\n\r\n    for (var c = 0; c <= 359; c++)\r\n    {\r\n        colors.push(HSVToRGB(c / 359, s, v));\r\n    }\r\n\r\n    return colors;\r\n};\r\n\r\nmodule.exports = HSVColorWheel;\r\n"},"lineCount":36}},"error":null,"hash":"82db8b13833d99b832ab74154927fed0","cacheData":{"env":{}}}