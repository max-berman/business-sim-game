{"id":"sUth","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000},{"name":"../../utils/Class","loc":{"line":7,"column":20},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/utils/Class.js"},{"name":"../FileTypesManager","loc":{"line":8,"column":31},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/loader/FileTypesManager.js"},{"name":"./JSONFile.js","loc":{"line":9,"column":23},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/loader/filetypes/JSONFile.js"},{"name":"../events","loc":{"line":10,"column":27},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/loader/events/index.js"}],"generated":{"js":"var e=require(\"../../utils/Class\"),i=require(\"../FileTypesManager\"),t=require(\"./JSONFile.js\"),s=require(\"../events\"),n=new e({Extends:t,initialize:function(e,i,s,n,r){t.call(this,e,i,s,n,r),this.type=\"animationJSON\"},onProcess:function(){this.loader.once(s.POST_PROCESS,this.onLoadComplete,this),t.prototype.onProcess.call(this)},onLoadComplete:function(){this.loader.systems.anims.fromJSON(this.data)}});i.register(\"animation\",function(e,i,t,s){if(Array.isArray(e))for(var r=0;r<e.length;r++)this.addFile(new n(this,e[r]));else this.addFile(new n(this,e,i,s,t));return this}),module.exports=n;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":7,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":7,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":7,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":7,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":8,"column":0},"generated":{"line":1,"column":35}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":8,"column":0},"generated":{"line":1,"column":37}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":8,"column":0},"generated":{"line":1,"column":45}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":9,"column":0},"generated":{"line":1,"column":68}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":9,"column":0},"generated":{"line":1,"column":70}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":9,"column":0},"generated":{"line":1,"column":78}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":10,"column":0},"generated":{"line":1,"column":95}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":10,"column":0},"generated":{"line":1,"column":97}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":10,"column":0},"generated":{"line":1,"column":105}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":32,"column":0},"generated":{"line":1,"column":118}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":32,"column":0},"generated":{"line":1,"column":120}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":32,"column":0},"generated":{"line":1,"column":124}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":32,"column":0},"generated":{"line":1,"column":126}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":34,"column":0},"generated":{"line":1,"column":127}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":34,"column":0},"generated":{"line":1,"column":135}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":36,"column":0},"generated":{"line":1,"column":137}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":41,"column":0},"generated":{"line":1,"column":148}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":41,"column":0},"generated":{"line":1,"column":157}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":41,"column":0},"generated":{"line":1,"column":159}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":41,"column":0},"generated":{"line":1,"column":161}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":41,"column":0},"generated":{"line":1,"column":163}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":41,"column":0},"generated":{"line":1,"column":165}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":43,"column":0},"generated":{"line":1,"column":168}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":43,"column":0},"generated":{"line":1,"column":170}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":43,"column":0},"generated":{"line":1,"column":175}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":43,"column":0},"generated":{"line":1,"column":180}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":43,"column":0},"generated":{"line":1,"column":182}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":43,"column":0},"generated":{"line":1,"column":184}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":43,"column":0},"generated":{"line":1,"column":186}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":43,"column":0},"generated":{"line":1,"column":188}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":45,"column":0},"generated":{"line":1,"column":191}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":45,"column":0},"generated":{"line":1,"column":196}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":45,"column":0},"generated":{"line":1,"column":201}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":55,"column":0},"generated":{"line":1,"column":218}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":55,"column":0},"generated":{"line":1,"column":228}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":58,"column":0},"generated":{"line":1,"column":239}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":58,"column":0},"generated":{"line":1,"column":244}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":58,"column":0},"generated":{"line":1,"column":251}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":58,"column":0},"generated":{"line":1,"column":256}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":58,"column":0},"generated":{"line":1,"column":258}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":58,"column":0},"generated":{"line":1,"column":271}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":58,"column":0},"generated":{"line":1,"column":276}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":58,"column":0},"generated":{"line":1,"column":291}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":61,"column":0},"generated":{"line":1,"column":297}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":61,"column":0},"generated":{"line":1,"column":299}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":61,"column":0},"generated":{"line":1,"column":309}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":61,"column":0},"generated":{"line":1,"column":319}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":61,"column":0},"generated":{"line":1,"column":324}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":70,"column":0},"generated":{"line":1,"column":331}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":70,"column":0},"generated":{"line":1,"column":346}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":72,"column":0},"generated":{"line":1,"column":357}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":72,"column":0},"generated":{"line":1,"column":362}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":72,"column":0},"generated":{"line":1,"column":369}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":72,"column":0},"generated":{"line":1,"column":377}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":72,"column":0},"generated":{"line":1,"column":383}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":72,"column":0},"generated":{"line":1,"column":392}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":72,"column":0},"generated":{"line":1,"column":397}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":174,"column":0},"generated":{"line":1,"column":406}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":174,"column":0},"generated":{"line":1,"column":408}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":174,"column":0},"generated":{"line":1,"column":417}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":174,"column":0},"generated":{"line":1,"column":429}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":174,"column":0},"generated":{"line":1,"column":438}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":174,"column":0},"generated":{"line":1,"column":440}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":174,"column":0},"generated":{"line":1,"column":442}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":174,"column":0},"generated":{"line":1,"column":444}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":180,"column":0},"generated":{"line":1,"column":447}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":180,"column":0},"generated":{"line":1,"column":450}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":180,"column":0},"generated":{"line":1,"column":456}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":180,"column":0},"generated":{"line":1,"column":464}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":182,"column":0},"generated":{"line":1,"column":467}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":182,"column":0},"generated":{"line":1,"column":471}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":182,"column":0},"generated":{"line":1,"column":475}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":182,"column":0},"generated":{"line":1,"column":477}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":182,"column":0},"generated":{"line":1,"column":479}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":182,"column":0},"generated":{"line":1,"column":481}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":182,"column":0},"generated":{"line":1,"column":483}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":182,"column":0},"generated":{"line":1,"column":490}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":184,"column":0},"generated":{"line":1,"column":494}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":184,"column":0},"generated":{"line":1,"column":499}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":184,"column":0},"generated":{"line":1,"column":507}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":184,"column":0},"generated":{"line":1,"column":511}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":184,"column":0},"generated":{"line":1,"column":513}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":184,"column":0},"generated":{"line":1,"column":518}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":184,"column":0},"generated":{"line":1,"column":520}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":189,"column":0},"generated":{"line":1,"column":530}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":189,"column":0},"generated":{"line":1,"column":535}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":189,"column":0},"generated":{"line":1,"column":543}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":189,"column":0},"generated":{"line":1,"column":547}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":189,"column":0},"generated":{"line":1,"column":549}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":189,"column":0},"generated":{"line":1,"column":554}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":189,"column":0},"generated":{"line":1,"column":556}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":189,"column":0},"generated":{"line":1,"column":558}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":189,"column":0},"generated":{"line":1,"column":560}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":192,"column":0},"generated":{"line":1,"column":564}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":192,"column":0},"generated":{"line":1,"column":571}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":195,"column":0},"generated":{"line":1,"column":578}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":195,"column":0},"generated":{"line":1,"column":585}},{"source":"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js","original":{"line":195,"column":0},"generated":{"line":1,"column":593}}],"sources":{"../node_modules/phaser/src/loader/filetypes/AnimationJSONFile.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar FileTypesManager = require('../FileTypesManager');\r\nvar JSONFile = require('./JSONFile.js');\r\nvar LoaderEvents = require('../events');\r\n\r\n/**\r\n * @classdesc\r\n * A single Animation JSON File suitable for loading by the Loader.\r\n *\r\n * These are created when you use the Phaser.Loader.LoaderPlugin#animation method and are not typically created directly.\r\n *\r\n * For documentation about what all the arguments and configuration options mean please see Phaser.Loader.LoaderPlugin#animation.\r\n *\r\n * @class AnimationJSONFile\r\n * @extends Phaser.Loader.File\r\n * @memberof Phaser.Loader.FileTypes\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Loader.LoaderPlugin} loader - A reference to the Loader that is responsible for this file.\r\n * @param {(string|Phaser.Types.Loader.FileTypes.JSONFileConfig)} key - The key to use for this file, or a file configuration object.\r\n * @param {string} [url] - The absolute or relative URL to load this file from. If undefined or `null` it will be set to `<key>.json`, i.e. if `key` was \"alien\" then the URL will be \"alien.json\".\r\n * @param {Phaser.Types.Loader.XHRSettingsObject} [xhrSettings] - Extra XHR Settings specifically for this file.\r\n * @param {string} [dataKey] - When the JSON file loads only this property will be stored in the Cache.\r\n */\r\nvar AnimationJSONFile = new Class({\r\n\r\n    Extends: JSONFile,\r\n\r\n    initialize:\r\n\r\n    //  url can either be a string, in which case it is treated like a proper url, or an object, in which case it is treated as a ready-made JS Object\r\n    //  dataKey allows you to pluck a specific object out of the JSON and put just that into the cache, rather than the whole thing\r\n\r\n    function AnimationJSONFile (loader, key, url, xhrSettings, dataKey)\r\n    {\r\n        JSONFile.call(this, loader, key, url, xhrSettings, dataKey);\r\n\r\n        this.type = 'animationJSON';\r\n    },\r\n\r\n    /**\r\n     * Called automatically by Loader.nextFile.\r\n     * This method controls what extra work this File does with its loaded data.\r\n     *\r\n     * @method Phaser.Loader.FileTypes.AnimationJSONFile#onProcess\r\n     * @since 3.7.0\r\n     */\r\n    onProcess: function ()\r\n    {\r\n        //  We need to hook into this event:\r\n        this.loader.once(LoaderEvents.POST_PROCESS, this.onLoadComplete, this);\r\n\r\n        //  But the rest is the same as a normal JSON file\r\n        JSONFile.prototype.onProcess.call(this);\r\n    },\r\n\r\n    /**\r\n     * Called at the end of the load process, after the Loader has finished all files in its queue.\r\n     *\r\n     * @method Phaser.Loader.FileTypes.AnimationJSONFile#onLoadComplete\r\n     * @since 3.7.0\r\n     */\r\n    onLoadComplete: function ()\r\n    {\r\n        this.loader.systems.anims.fromJSON(this.data);\r\n    }\r\n\r\n});\r\n\r\n/**\r\n * Adds an Animation JSON Data file, or array of Animation JSON files, to the current load queue.\r\n *\r\n * You can call this method from within your Scene's `preload`, along with any other files you wish to load:\r\n *\r\n * ```javascript\r\n * function preload ()\r\n * {\r\n *     this.load.animation('baddieAnims', 'files/BaddieAnims.json');\r\n * }\r\n * ```\r\n *\r\n * The file is **not** loaded right away. It is added to a queue ready to be loaded either when the loader starts,\r\n * or if it's already running, when the next free load slot becomes available. This happens automatically if you\r\n * are calling this from within the Scene's `preload` method, or a related callback. Because the file is queued\r\n * it means you cannot use the file immediately after calling this method, but must wait for the file to complete.\r\n * The typical flow for a Phaser Scene is that you load assets in the Scene's `preload` method and then when the\r\n * Scene's `create` method is called you are guaranteed that all of those assets are ready for use and have been\r\n * loaded.\r\n *\r\n * If you call this from outside of `preload` then you are responsible for starting the Loader afterwards and monitoring\r\n * its events to know when it's safe to use the asset. Please see the Phaser.Loader.LoaderPlugin class for more details.\r\n *\r\n * The key must be a unique String. It is used to add the file to the global JSON Cache upon a successful load.\r\n * The key should be unique both in terms of files being loaded and files already present in the JSON Cache.\r\n * Loading a file using a key that is already taken will result in a warning. If you wish to replace an existing file\r\n * then remove it from the JSON Cache first, before loading a new one.\r\n *\r\n * Instead of passing arguments you can pass a configuration object, such as:\r\n *\r\n * ```javascript\r\n * this.load.animation({\r\n *     key: 'baddieAnims',\r\n *     url: 'files/BaddieAnims.json'\r\n * });\r\n * ```\r\n *\r\n * See the documentation for `Phaser.Types.Loader.FileTypes.JSONFileConfig` for more details.\r\n *\r\n * Once the file has finished loading it will automatically be passed to the global Animation Managers `fromJSON` method.\r\n * This will parse all of the JSON data and create animation data from it. This process happens at the very end\r\n * of the Loader, once every other file in the load queue has finished. The reason for this is to allow you to load\r\n * both animation data and the images it relies upon in the same load call.\r\n *\r\n * Once the animation data has been parsed you will be able to play animations using that data.\r\n * Please see the Animation Manager `fromJSON` method for more details about the format and playback.\r\n *\r\n * You can also access the raw animation data from its Cache using its key:\r\n *\r\n * ```javascript\r\n * this.load.animation('baddieAnims', 'files/BaddieAnims.json');\r\n * // and later in your game ...\r\n * var data = this.cache.json.get('baddieAnims');\r\n * ```\r\n *\r\n * If you have specified a prefix in the loader, via `Loader.setPrefix` then this value will be prepended to this files\r\n * key. For example, if the prefix was `LEVEL1.` and the key was `Waves` the final key will be `LEVEL1.Waves` and\r\n * this is what you would use to retrieve the text from the JSON Cache.\r\n *\r\n * The URL can be relative or absolute. If the URL is relative the `Loader.baseURL` and `Loader.path` values will be prepended to it.\r\n *\r\n * If the URL isn't specified the Loader will take the key and create a filename from that. For example if the key is \"data\"\r\n * and no URL is given then the Loader will set the URL to be \"data.json\". It will always add `.json` as the extension, although\r\n * this can be overridden if using an object instead of method arguments. If you do not desire this action then provide a URL.\r\n *\r\n * You can also optionally provide a `dataKey` to use. This allows you to extract only a part of the JSON and store it in the Cache,\r\n * rather than the whole file. For example, if your JSON data had a structure like this:\r\n *\r\n * ```json\r\n * {\r\n *     \"level1\": {\r\n *         \"baddies\": {\r\n *             \"aliens\": {},\r\n *             \"boss\": {}\r\n *         }\r\n *     },\r\n *     \"level2\": {},\r\n *     \"level3\": {}\r\n * }\r\n * ```\r\n *\r\n * And if you only wanted to create animations from the `boss` data, then you could pass `level1.baddies.boss`as the `dataKey`.\r\n *\r\n * Note: The ability to load this type of file will only be available if the JSON File type has been built into Phaser.\r\n * It is available in the default build but can be excluded from custom builds.\r\n *\r\n * @method Phaser.Loader.LoaderPlugin#animation\r\n * @fires Phaser.Loader.LoaderPlugin#ADD\r\n * @since 3.0.0\r\n *\r\n * @param {(string|Phaser.Types.Loader.FileTypes.JSONFileConfig|Phaser.Types.Loader.FileTypes.JSONFileConfig[])} key - The key to use for this file, or a file configuration object, or array of them.\r\n * @param {string} [url] - The absolute or relative URL to load this file from. If undefined or `null` it will be set to `<key>.json`, i.e. if `key` was \"alien\" then the URL will be \"alien.json\".\r\n * @param {string} [dataKey] - When the Animation JSON file loads only this property will be stored in the Cache and used to create animation data.\r\n * @param {Phaser.Types.Loader.XHRSettingsObject} [xhrSettings] - An XHR Settings configuration object. Used in replacement of the Loaders default XHR Settings.\r\n *\r\n * @return {this} The Loader instance.\r\n */\r\nFileTypesManager.register('animation', function (key, url, dataKey, xhrSettings)\r\n{\r\n    //  Supports an Object file definition in the key argument\r\n    //  Or an array of objects in the key argument\r\n    //  Or a single entry where all arguments have been defined\r\n\r\n    if (Array.isArray(key))\r\n    {\r\n        for (var i = 0; i < key.length; i++)\r\n        {\r\n            this.addFile(new AnimationJSONFile(this, key[i]));\r\n        }\r\n    }\r\n    else\r\n    {\r\n        this.addFile(new AnimationJSONFile(this, key, url, xhrSettings, dataKey));\r\n    }\r\n\r\n    return this;\r\n});\r\n\r\nmodule.exports = AnimationJSONFile;\r\n"},"lineCount":null}},"error":null,"hash":"067a5c80800533a91fc6ccdbf2fca32b","cacheData":{"env":{}}}