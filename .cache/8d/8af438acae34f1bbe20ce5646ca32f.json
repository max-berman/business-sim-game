{"id":"NXQe","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000}],"generated":{"js":"var t={setBounce:function(t,o){return this.body.bounce.set(t,o),this},setBounceX:function(t){return this.body.bounce.x=t,this},setBounceY:function(t){return this.body.bounce.y=t,this},setCollideWorldBounds:function(t,o,e){return this.body.setCollideWorldBounds(t,o,e),this}};module.exports=t;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":13,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":13,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":13,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":29,"column":0},"generated":{"line":1,"column":7}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":29,"column":0},"generated":{"line":1,"column":17}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":29,"column":0},"generated":{"line":1,"column":26}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":29,"column":0},"generated":{"line":1,"column":28}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":33,"column":0},"generated":{"line":1,"column":31}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":31,"column":0},"generated":{"line":1,"column":38}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":31,"column":0},"generated":{"line":1,"column":43}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":31,"column":0},"generated":{"line":1,"column":48}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":31,"column":0},"generated":{"line":1,"column":55}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":31,"column":0},"generated":{"line":1,"column":59}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":31,"column":0},"generated":{"line":1,"column":61}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":33,"column":0},"generated":{"line":1,"column":64}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":46,"column":0},"generated":{"line":1,"column":70}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":46,"column":0},"generated":{"line":1,"column":81}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":46,"column":0},"generated":{"line":1,"column":90}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":50,"column":0},"generated":{"line":1,"column":93}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":48,"column":0},"generated":{"line":1,"column":100}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":48,"column":0},"generated":{"line":1,"column":105}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":48,"column":0},"generated":{"line":1,"column":110}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":48,"column":0},"generated":{"line":1,"column":117}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":48,"column":0},"generated":{"line":1,"column":119}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":50,"column":0},"generated":{"line":1,"column":121}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":63,"column":0},"generated":{"line":1,"column":127}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":63,"column":0},"generated":{"line":1,"column":138}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":63,"column":0},"generated":{"line":1,"column":147}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":67,"column":0},"generated":{"line":1,"column":150}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":65,"column":0},"generated":{"line":1,"column":157}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":65,"column":0},"generated":{"line":1,"column":162}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":65,"column":0},"generated":{"line":1,"column":167}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":65,"column":0},"generated":{"line":1,"column":174}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":65,"column":0},"generated":{"line":1,"column":176}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":67,"column":0},"generated":{"line":1,"column":178}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":84,"column":0},"generated":{"line":1,"column":184}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":84,"column":0},"generated":{"line":1,"column":206}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":84,"column":0},"generated":{"line":1,"column":215}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":84,"column":0},"generated":{"line":1,"column":217}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":84,"column":0},"generated":{"line":1,"column":219}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":88,"column":0},"generated":{"line":1,"column":222}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":86,"column":0},"generated":{"line":1,"column":229}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":86,"column":0},"generated":{"line":1,"column":234}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":86,"column":0},"generated":{"line":1,"column":239}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":86,"column":0},"generated":{"line":1,"column":261}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":86,"column":0},"generated":{"line":1,"column":263}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":86,"column":0},"generated":{"line":1,"column":265}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":88,"column":0},"generated":{"line":1,"column":268}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":93,"column":0},"generated":{"line":1,"column":275}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":93,"column":0},"generated":{"line":1,"column":282}},{"source":"../node_modules/phaser/src/physics/arcade/components/Bounce.js","original":{"line":93,"column":0},"generated":{"line":1,"column":290}}],"sources":{"../node_modules/phaser/src/physics/arcade/components/Bounce.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Provides methods used for setting the bounce properties of an Arcade Physics Body.\r\n *\r\n * @namespace Phaser.Physics.Arcade.Components.Bounce\r\n * @since 3.0.0\r\n */\r\nvar Bounce = {\r\n\r\n    /**\r\n     * Sets the bounce values of this body.\r\n     * \r\n     * Bounce is the amount of restitution, or elasticity, the body has when it collides with another object.\r\n     * A value of 1 means that it will retain its full velocity after the rebound. A value of 0 means it will not rebound at all.\r\n     *\r\n     * @method Phaser.Physics.Arcade.Components.Bounce#setBounce\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The amount of horizontal bounce to apply on collision. A float, typically between 0 and 1.\r\n     * @param {number} [y=x] - The amount of vertical bounce to apply on collision. A float, typically between 0 and 1.\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    setBounce: function (x, y)\r\n    {\r\n        this.body.bounce.set(x, y);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the horizontal bounce value for this body.\r\n     *\r\n     * @method Phaser.Physics.Arcade.Components.Bounce#setBounceX\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} value - The amount of horizontal bounce to apply on collision. A float, typically between 0 and 1.\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    setBounceX: function (value)\r\n    {\r\n        this.body.bounce.x = value;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the vertical bounce value for this body.\r\n     *\r\n     * @method Phaser.Physics.Arcade.Components.Bounce#setBounceY\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} value - The amount of vertical bounce to apply on collision. A float, typically between 0 and 1.\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    setBounceY: function (value)\r\n    {\r\n        this.body.bounce.y = value;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets whether this Body collides with the world boundary.\r\n     * \r\n     * Optionally also sets the World Bounce values. If the `Body.worldBounce` is null, it's set to a new Phaser.Math.Vector2 first.\r\n     *\r\n     * @method Phaser.Physics.Arcade.Components.Bounce#setCollideWorldBounds\r\n     * @since 3.0.0\r\n     *\r\n     * @param {boolean} [value=true] - `true` if this body should collide with the world bounds, otherwise `false`.\r\n     * @param {number} [bounceX] - If given this will be replace the `worldBounce.x` value.\r\n     * @param {number} [bounceY] - If given this will be replace the `worldBounce.y` value.\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    setCollideWorldBounds: function (value, bounceX, bounceY)\r\n    {\r\n        this.body.setCollideWorldBounds(value, bounceX, bounceY);\r\n\r\n        return this;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Bounce;\r\n"},"lineCount":null}},"error":null,"hash":"8443b5318075488ca4ed2e0f0ef2c627","cacheData":{"env":{}}}