{"id":"zWoH","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000},{"name":"../../GameObjectFactory","loc":{"line":7,"column":32},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/gameobjects/GameObjectFactory.js"},{"name":"./Line","loc":{"line":8,"column":19},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/gameobjects/shape/line/Line.js"}],"generated":{"js":"var e=require(\"../../GameObjectFactory\"),i=require(\"./Line\");e.register(\"line\",function(e,r,t,n,s,a,c,u){return this.displayList.add(new i(this.scene,e,r,t,n,s,a,c,u))});"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":7,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":7,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":7,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":7,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":8,"column":0},"generated":{"line":1,"column":41}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":8,"column":0},"generated":{"line":1,"column":43}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":8,"column":0},"generated":{"line":1,"column":51}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":42,"column":0},"generated":{"line":1,"column":61}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":42,"column":0},"generated":{"line":1,"column":63}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":42,"column":0},"generated":{"line":1,"column":72}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":42,"column":0},"generated":{"line":1,"column":79}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":42,"column":0},"generated":{"line":1,"column":88}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":42,"column":0},"generated":{"line":1,"column":90}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":42,"column":0},"generated":{"line":1,"column":92}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":42,"column":0},"generated":{"line":1,"column":94}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":42,"column":0},"generated":{"line":1,"column":96}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":42,"column":0},"generated":{"line":1,"column":98}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":42,"column":0},"generated":{"line":1,"column":100}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":42,"column":0},"generated":{"line":1,"column":102}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":44,"column":0},"generated":{"line":1,"column":105}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":44,"column":0},"generated":{"line":1,"column":112}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":44,"column":0},"generated":{"line":1,"column":117}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":44,"column":0},"generated":{"line":1,"column":129}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":44,"column":0},"generated":{"line":1,"column":133}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":44,"column":0},"generated":{"line":1,"column":137}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":44,"column":0},"generated":{"line":1,"column":139}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":44,"column":0},"generated":{"line":1,"column":144}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":44,"column":0},"generated":{"line":1,"column":150}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":44,"column":0},"generated":{"line":1,"column":152}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":44,"column":0},"generated":{"line":1,"column":154}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":44,"column":0},"generated":{"line":1,"column":156}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":44,"column":0},"generated":{"line":1,"column":158}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":44,"column":0},"generated":{"line":1,"column":160}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":44,"column":0},"generated":{"line":1,"column":162}},{"source":"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js","original":{"line":44,"column":0},"generated":{"line":1,"column":164}}],"sources":{"../node_modules/phaser/src/gameobjects/shape/line/LineFactory.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar GameObjectFactory = require('../../GameObjectFactory');\r\nvar Line = require('./Line');\r\n\r\n/**\r\n * Creates a new Line Shape Game Object and adds it to the Scene.\r\n *\r\n * Note: This method will only be available if the Line Game Object has been built into Phaser.\r\n * \r\n * The Line Shape is a Game Object that can be added to a Scene, Group or Container. You can\r\n * treat it like any other Game Object in your game, such as tweening it, scaling it, or enabling\r\n * it for input or physics. It provides a quick and easy way for you to render this shape in your\r\n * game without using a texture, while still taking advantage of being fully batched in WebGL.\r\n * \r\n * This shape supports only stroke colors and cannot be filled.\r\n * \r\n * A Line Shape allows you to draw a line between two points in your game. You can control the\r\n * stroke color and thickness of the line. In WebGL only you can also specify a different\r\n * thickness for the start and end of the line, allowing you to render lines that taper-off.\r\n * \r\n * If you need to draw multiple lines in a sequence you may wish to use the Polygon Shape instead.\r\n *\r\n * @method Phaser.GameObjects.GameObjectFactory#line\r\n * @since 3.13.0\r\n *\r\n * @param {number} [x=0] - The horizontal position of this Game Object in the world.\r\n * @param {number} [y=0] - The vertical position of this Game Object in the world.\r\n * @param {number} [x1=0] - The horizontal position of the start of the line.\r\n * @param {number} [y1=0] - The vertical position of the start of the line.\r\n * @param {number} [x2=128] - The horizontal position of the end of the line.\r\n * @param {number} [y2=0] - The vertical position of the end of the line.\r\n * @param {number} [strokeColor] - The color the line will be drawn in, i.e. 0xff0000 for red.\r\n * @param {number} [strokeAlpha] - The alpha the line will be drawn in. You can also set the alpha of the overall Shape using its `alpha` property.\r\n *\r\n * @return {Phaser.GameObjects.Line} The Game Object that was created.\r\n */\r\nGameObjectFactory.register('line', function (x, y, x1, y1, x2, y2, strokeColor, strokeAlpha)\r\n{\r\n    return this.displayList.add(new Line(this.scene, x, y, x1, y1, x2, y2, strokeColor, strokeAlpha));\r\n});\r\n"},"lineCount":null}},"error":null,"hash":"31dd0c3988b69e11c5c6a480b4405133","cacheData":{"env":{}}}