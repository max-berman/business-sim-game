{"id":"AH9b","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000},{"name":"../gameobjects/GameObjectFactory","loc":{"line":7,"column":32},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/tilemaps/TilemapFactory.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/gameobjects/GameObjectFactory.js"},{"name":"./ParseToTilemap","loc":{"line":8,"column":29},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/tilemaps/TilemapFactory.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/tilemaps/ParseToTilemap.js"}],"generated":{"js":"var e=require(\"../gameobjects/GameObjectFactory\"),i=require(\"./ParseToTilemap\");e.register(\"tilemap\",function(e,l,r,n,o,u,t){return null===e&&(e=void 0),null===l&&(l=void 0),null===r&&(r=void 0),null===n&&(n=void 0),null===o&&(o=void 0),i(this.scene,e,l,r,n,o,u,t)});"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":7,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":7,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":7,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":7,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":8,"column":0},"generated":{"line":1,"column":50}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":8,"column":0},"generated":{"line":1,"column":52}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":8,"column":0},"generated":{"line":1,"column":60}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":39,"column":0},"generated":{"line":1,"column":80}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":39,"column":0},"generated":{"line":1,"column":82}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":39,"column":0},"generated":{"line":1,"column":91}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":39,"column":0},"generated":{"line":1,"column":101}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":39,"column":0},"generated":{"line":1,"column":110}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":39,"column":0},"generated":{"line":1,"column":112}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":39,"column":0},"generated":{"line":1,"column":114}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":39,"column":0},"generated":{"line":1,"column":116}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":39,"column":0},"generated":{"line":1,"column":118}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":39,"column":0},"generated":{"line":1,"column":120}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":39,"column":0},"generated":{"line":1,"column":122}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":51,"column":0},"generated":{"line":1,"column":125}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":45,"column":0},"generated":{"line":1,"column":132}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":45,"column":0},"generated":{"line":1,"column":139}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":45,"column":0},"generated":{"line":1,"column":143}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":45,"column":0},"generated":{"line":1,"column":150}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":46,"column":0},"generated":{"line":1,"column":153}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":46,"column":0},"generated":{"line":1,"column":160}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":46,"column":0},"generated":{"line":1,"column":164}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":46,"column":0},"generated":{"line":1,"column":171}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":47,"column":0},"generated":{"line":1,"column":174}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":47,"column":0},"generated":{"line":1,"column":181}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":47,"column":0},"generated":{"line":1,"column":185}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":47,"column":0},"generated":{"line":1,"column":192}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":48,"column":0},"generated":{"line":1,"column":195}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":48,"column":0},"generated":{"line":1,"column":202}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":48,"column":0},"generated":{"line":1,"column":206}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":48,"column":0},"generated":{"line":1,"column":213}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":49,"column":0},"generated":{"line":1,"column":216}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":49,"column":0},"generated":{"line":1,"column":223}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":49,"column":0},"generated":{"line":1,"column":227}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":49,"column":0},"generated":{"line":1,"column":234}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":51,"column":0},"generated":{"line":1,"column":237}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":51,"column":0},"generated":{"line":1,"column":239}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":51,"column":0},"generated":{"line":1,"column":244}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":51,"column":0},"generated":{"line":1,"column":250}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":51,"column":0},"generated":{"line":1,"column":252}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":51,"column":0},"generated":{"line":1,"column":254}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":51,"column":0},"generated":{"line":1,"column":256}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":51,"column":0},"generated":{"line":1,"column":258}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":51,"column":0},"generated":{"line":1,"column":260}},{"source":"../node_modules/phaser/src/tilemaps/TilemapFactory.js","original":{"line":51,"column":0},"generated":{"line":1,"column":262}}],"sources":{"../node_modules/phaser/src/tilemaps/TilemapFactory.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar GameObjectFactory = require('../gameobjects/GameObjectFactory');\r\nvar ParseToTilemap = require('./ParseToTilemap');\r\n\r\n/**\r\n * Creates a Tilemap from the given key or data, or creates a blank Tilemap if no key/data provided.\r\n * When loading from CSV or a 2D array, you should specify the tileWidth & tileHeight. When parsing\r\n * from a map from Tiled, the tileWidth, tileHeight, width & height will be pulled from the map\r\n * data. For an empty map, you should specify tileWidth, tileHeight, width & height.\r\n *\r\n * @method Phaser.GameObjects.GameObjectFactory#tilemap\r\n * @since 3.0.0\r\n *\r\n * @param {string} [key] - The key in the Phaser cache that corresponds to the loaded tilemap data.\r\n * @param {integer} [tileWidth=32] - The width of a tile in pixels. Pass in `null` to leave as the\r\n * default.\r\n * @param {integer} [tileHeight=32] - The height of a tile in pixels. Pass in `null` to leave as the\r\n * default.\r\n * @param {integer} [width=10] - The width of the map in tiles. Pass in `null` to leave as the\r\n * default.\r\n * @param {integer} [height=10] - The height of the map in tiles. Pass in `null` to leave as the\r\n * default.\r\n * @param {integer[][]} [data] - Instead of loading from the cache, you can also load directly from\r\n * a 2D array of tile indexes. Pass in `null` for no data.\r\n * @param {boolean} [insertNull=false] - Controls how empty tiles, tiles with an index of -1, in the\r\n * map data are handled. If `true`, empty locations will get a value of `null`. If `false`, empty\r\n * location will get a Tile object with an index of -1. If you've a large sparsely populated map and\r\n * the tile data doesn't need to change then setting this value to `true` will help with memory\r\n * consumption. However if your map is small or you need to update the tiles dynamically, then leave\r\n * the default value set.\r\n * \r\n * @return {Phaser.Tilemaps.Tilemap}\r\n */\r\nGameObjectFactory.register('tilemap', function (key, tileWidth, tileHeight, width, height, data, insertNull)\r\n{\r\n    // Allow users to specify null to indicate that they want the default value, since null is\r\n    // shorter & more legible than undefined. Convert null to undefined to allow ParseToTilemap\r\n    // defaults to take effect.\r\n\r\n    if (key === null) { key = undefined; }\r\n    if (tileWidth === null) { tileWidth = undefined; }\r\n    if (tileHeight === null) { tileHeight = undefined; }\r\n    if (width === null) { width = undefined; }\r\n    if (height === null) { height = undefined; }\r\n\r\n    return ParseToTilemap(this.scene, key, tileWidth, tileHeight, width, height, data, insertNull);\r\n});\r\n\r\n//  When registering a factory function 'this' refers to the GameObjectFactory context.\r\n//\r\n//  There are several properties available to use:\r\n//\r\n//  this.scene - a reference to the Scene that owns the GameObjectFactory\r\n//  this.displayList - a reference to the Display List the Scene owns\r\n//  this.updateList - a reference to the Update List the Scene owns\r\n"},"lineCount":null}},"error":null,"hash":"ff1385f1cf59dc04660fc9a3423d47f4","cacheData":{"env":{}}}