{"id":"CDqT","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000}],"generated":{"js":"var t=function(t,o,r,a,e){return void 0===e&&(e=2),Math.sqrt(Math.pow(r-t,e)+Math.pow(a-o,e))};module.exports=t;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/math/distance/DistancePower.js","original":{"line":21,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/math/distance/DistancePower.js","original":{"line":21,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/math/distance/DistancePower.js","original":{"line":21,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/math/distance/DistancePower.js","original":{"line":21,"column":0},"generated":{"line":1,"column":15}},{"source":"../node_modules/phaser/src/math/distance/DistancePower.js","original":{"line":21,"column":0},"generated":{"line":1,"column":17}},{"source":"../node_modules/phaser/src/math/distance/DistancePower.js","original":{"line":21,"column":0},"generated":{"line":1,"column":19}},{"source":"../node_modules/phaser/src/math/distance/DistancePower.js","original":{"line":21,"column":0},"generated":{"line":1,"column":21}},{"source":"../node_modules/phaser/src/math/distance/DistancePower.js","original":{"line":21,"column":0},"generated":{"line":1,"column":23}},{"source":"../node_modules/phaser/src/math/distance/DistancePower.js","original":{"line":25,"column":0},"generated":{"line":1,"column":26}},{"source":"../node_modules/phaser/src/math/distance/DistancePower.js","original":{"line":23,"column":0},"generated":{"line":1,"column":38}},{"source":"../node_modules/phaser/src/math/distance/DistancePower.js","original":{"line":23,"column":0},"generated":{"line":1,"column":42}},{"source":"../node_modules/phaser/src/math/distance/DistancePower.js","original":{"line":23,"column":0},"generated":{"line":1,"column":46}},{"source":"../node_modules/phaser/src/math/distance/DistancePower.js","original":{"line":23,"column":0},"generated":{"line":1,"column":48}},{"source":"../node_modules/phaser/src/math/distance/DistancePower.js","original":{"line":25,"column":0},"generated":{"line":1,"column":51}},{"source":"../node_modules/phaser/src/math/distance/DistancePower.js","original":{"line":25,"column":0},"generated":{"line":1,"column":56}},{"source":"../node_modules/phaser/src/math/distance/DistancePower.js","original":{"line":25,"column":0},"generated":{"line":1,"column":61}},{"source":"../node_modules/phaser/src/math/distance/DistancePower.js","original":{"line":25,"column":0},"generated":{"line":1,"column":66}},{"source":"../node_modules/phaser/src/math/distance/DistancePower.js","original":{"line":25,"column":0},"generated":{"line":1,"column":70}},{"source":"../node_modules/phaser/src/math/distance/DistancePower.js","original":{"line":25,"column":0},"generated":{"line":1,"column":72}},{"source":"../node_modules/phaser/src/math/distance/DistancePower.js","original":{"line":25,"column":0},"generated":{"line":1,"column":74}},{"source":"../node_modules/phaser/src/math/distance/DistancePower.js","original":{"line":25,"column":0},"generated":{"line":1,"column":77}},{"source":"../node_modules/phaser/src/math/distance/DistancePower.js","original":{"line":25,"column":0},"generated":{"line":1,"column":82}},{"source":"../node_modules/phaser/src/math/distance/DistancePower.js","original":{"line":25,"column":0},"generated":{"line":1,"column":86}},{"source":"../node_modules/phaser/src/math/distance/DistancePower.js","original":{"line":25,"column":0},"generated":{"line":1,"column":88}},{"source":"../node_modules/phaser/src/math/distance/DistancePower.js","original":{"line":25,"column":0},"generated":{"line":1,"column":90}},{"source":"../node_modules/phaser/src/math/distance/DistancePower.js","original":{"line":28,"column":0},"generated":{"line":1,"column":95}},{"source":"../node_modules/phaser/src/math/distance/DistancePower.js","original":{"line":28,"column":0},"generated":{"line":1,"column":102}},{"source":"../node_modules/phaser/src/math/distance/DistancePower.js","original":{"line":28,"column":0},"generated":{"line":1,"column":110}}],"sources":{"../node_modules/phaser/src/math/distance/DistancePower.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Calculate the distance between two sets of coordinates (points) to the power of `pow`.\r\n *\r\n * @function Phaser.Math.Distance.Power\r\n * @since 3.0.0\r\n *\r\n * @param {number} x1 - The x coordinate of the first point.\r\n * @param {number} y1 - The y coordinate of the first point.\r\n * @param {number} x2 - The x coordinate of the second point.\r\n * @param {number} y2 - The y coordinate of the second point.\r\n * @param {number} pow - The exponent.\r\n *\r\n * @return {number} The distance between each point.\r\n */\r\nvar DistancePower = function (x1, y1, x2, y2, pow)\r\n{\r\n    if (pow === undefined) { pow = 2; }\r\n\r\n    return Math.sqrt(Math.pow(x2 - x1, pow) + Math.pow(y2 - y1, pow));\r\n};\r\n\r\nmodule.exports = DistancePower;\r\n"},"lineCount":null}},"error":null,"hash":"f13b6cae2a6aee61bee10776cf2e080c","cacheData":{"env":{}}}