{"id":"ZqSK","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000},{"name":"../../utils/Class","loc":{"line":7,"column":20},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/loader/filetypes/PackFile.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/utils/Class.js"},{"name":"../const","loc":{"line":8,"column":20},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/loader/filetypes/PackFile.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/loader/const.js"},{"name":"../FileTypesManager","loc":{"line":9,"column":31},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/loader/filetypes/PackFile.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/loader/FileTypesManager.js"},{"name":"./JSONFile.js","loc":{"line":10,"column":23},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/loader/filetypes/PackFile.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/loader/filetypes/JSONFile.js"}],"generated":{"js":"var e=require(\"../../utils/Class\"),i=require(\"../const\"),s=require(\"../FileTypesManager\"),t=require(\"./JSONFile.js\"),r=new e({Extends:t,initialize:function(e,i,s,r,a){t.call(this,e,i,s,r,a),this.type=\"packfile\"},onProcess:function(){this.state!==i.FILE_POPULATED&&(this.state=i.FILE_PROCESSING,this.data=JSON.parse(this.xhrLoader.responseText)),this.loader.addPack(this.data,this.config),this.onProcessComplete()}});s.register(\"pack\",function(e,i,s,t){if(Array.isArray(e))for(var a=0;a<e.length;a++)this.addFile(new r(this,e[a]));else this.addFile(new r(this,e,i,t,s));return this}),module.exports=r;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":7,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":7,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":7,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":7,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":8,"column":0},"generated":{"line":1,"column":35}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":8,"column":0},"generated":{"line":1,"column":37}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":8,"column":0},"generated":{"line":1,"column":45}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":9,"column":0},"generated":{"line":1,"column":57}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":9,"column":0},"generated":{"line":1,"column":59}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":9,"column":0},"generated":{"line":1,"column":67}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":10,"column":0},"generated":{"line":1,"column":90}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":10,"column":0},"generated":{"line":1,"column":92}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":10,"column":0},"generated":{"line":1,"column":100}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":32,"column":0},"generated":{"line":1,"column":117}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":32,"column":0},"generated":{"line":1,"column":119}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":32,"column":0},"generated":{"line":1,"column":123}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":32,"column":0},"generated":{"line":1,"column":125}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":34,"column":0},"generated":{"line":1,"column":126}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":34,"column":0},"generated":{"line":1,"column":134}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":36,"column":0},"generated":{"line":1,"column":136}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":41,"column":0},"generated":{"line":1,"column":147}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":41,"column":0},"generated":{"line":1,"column":156}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":41,"column":0},"generated":{"line":1,"column":158}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":41,"column":0},"generated":{"line":1,"column":160}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":41,"column":0},"generated":{"line":1,"column":162}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":41,"column":0},"generated":{"line":1,"column":164}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":43,"column":0},"generated":{"line":1,"column":167}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":43,"column":0},"generated":{"line":1,"column":169}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":43,"column":0},"generated":{"line":1,"column":174}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":43,"column":0},"generated":{"line":1,"column":179}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":43,"column":0},"generated":{"line":1,"column":181}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":43,"column":0},"generated":{"line":1,"column":183}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":43,"column":0},"generated":{"line":1,"column":185}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":43,"column":0},"generated":{"line":1,"column":187}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":45,"column":0},"generated":{"line":1,"column":190}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":45,"column":0},"generated":{"line":1,"column":195}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":45,"column":0},"generated":{"line":1,"column":200}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":55,"column":0},"generated":{"line":1,"column":212}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":55,"column":0},"generated":{"line":1,"column":222}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":57,"column":0},"generated":{"line":1,"column":233}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":57,"column":0},"generated":{"line":1,"column":238}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":57,"column":0},"generated":{"line":1,"column":246}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":57,"column":0},"generated":{"line":1,"column":248}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":59,"column":0},"generated":{"line":1,"column":265}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":59,"column":0},"generated":{"line":1,"column":270}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":59,"column":0},"generated":{"line":1,"column":276}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":59,"column":0},"generated":{"line":1,"column":278}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":61,"column":0},"generated":{"line":1,"column":294}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":61,"column":0},"generated":{"line":1,"column":299}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":61,"column":0},"generated":{"line":1,"column":304}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":61,"column":0},"generated":{"line":1,"column":309}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":61,"column":0},"generated":{"line":1,"column":315}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":61,"column":0},"generated":{"line":1,"column":320}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":61,"column":0},"generated":{"line":1,"column":330}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":65,"column":0},"generated":{"line":1,"column":345}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":65,"column":0},"generated":{"line":1,"column":350}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":65,"column":0},"generated":{"line":1,"column":357}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":65,"column":0},"generated":{"line":1,"column":365}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":65,"column":0},"generated":{"line":1,"column":370}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":65,"column":0},"generated":{"line":1,"column":375}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":65,"column":0},"generated":{"line":1,"column":380}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":67,"column":0},"generated":{"line":1,"column":388}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":67,"column":0},"generated":{"line":1,"column":393}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":191,"column":0},"generated":{"line":1,"column":416}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":191,"column":0},"generated":{"line":1,"column":418}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":191,"column":0},"generated":{"line":1,"column":427}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":191,"column":0},"generated":{"line":1,"column":434}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":191,"column":0},"generated":{"line":1,"column":443}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":191,"column":0},"generated":{"line":1,"column":445}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":191,"column":0},"generated":{"line":1,"column":447}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":191,"column":0},"generated":{"line":1,"column":449}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":197,"column":0},"generated":{"line":1,"column":452}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":197,"column":0},"generated":{"line":1,"column":455}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":197,"column":0},"generated":{"line":1,"column":461}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":197,"column":0},"generated":{"line":1,"column":469}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":199,"column":0},"generated":{"line":1,"column":472}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":199,"column":0},"generated":{"line":1,"column":476}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":199,"column":0},"generated":{"line":1,"column":480}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":199,"column":0},"generated":{"line":1,"column":482}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":199,"column":0},"generated":{"line":1,"column":484}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":199,"column":0},"generated":{"line":1,"column":486}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":199,"column":0},"generated":{"line":1,"column":488}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":199,"column":0},"generated":{"line":1,"column":495}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":201,"column":0},"generated":{"line":1,"column":499}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":201,"column":0},"generated":{"line":1,"column":504}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":201,"column":0},"generated":{"line":1,"column":512}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":201,"column":0},"generated":{"line":1,"column":516}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":201,"column":0},"generated":{"line":1,"column":518}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":201,"column":0},"generated":{"line":1,"column":523}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":201,"column":0},"generated":{"line":1,"column":525}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":206,"column":0},"generated":{"line":1,"column":535}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":206,"column":0},"generated":{"line":1,"column":540}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":206,"column":0},"generated":{"line":1,"column":548}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":206,"column":0},"generated":{"line":1,"column":552}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":206,"column":0},"generated":{"line":1,"column":554}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":206,"column":0},"generated":{"line":1,"column":559}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":206,"column":0},"generated":{"line":1,"column":561}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":206,"column":0},"generated":{"line":1,"column":563}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":206,"column":0},"generated":{"line":1,"column":565}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":209,"column":0},"generated":{"line":1,"column":569}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":209,"column":0},"generated":{"line":1,"column":576}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":212,"column":0},"generated":{"line":1,"column":583}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":212,"column":0},"generated":{"line":1,"column":590}},{"source":"../node_modules/phaser/src/loader/filetypes/PackFile.js","original":{"line":212,"column":0},"generated":{"line":1,"column":598}}],"sources":{"../node_modules/phaser/src/loader/filetypes/PackFile.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar CONST = require('../const');\r\nvar FileTypesManager = require('../FileTypesManager');\r\nvar JSONFile = require('./JSONFile.js');\r\n\r\n/**\r\n * @classdesc\r\n * A single JSON Pack File suitable for loading by the Loader.\r\n *\r\n * These are created when you use the Phaser.Loader.LoaderPlugin#pack method and are not typically created directly.\r\n *\r\n * For documentation about what all the arguments and configuration options mean please see Phaser.Loader.LoaderPlugin#pack.\r\n *\r\n * @class PackFile\r\n * @extends Phaser.Loader.File\r\n * @memberof Phaser.Loader.FileTypes\r\n * @constructor\r\n * @since 3.7.0\r\n *\r\n * @param {Phaser.Loader.LoaderPlugin} loader - A reference to the Loader that is responsible for this file.\r\n * @param {(string|Phaser.Types.Loader.FileTypes.PackFileConfig)} key - The key to use for this file, or a file configuration object.\r\n * @param {string} [url] - The absolute or relative URL to load this file from. If undefined or `null` it will be set to `<key>.json`, i.e. if `key` was \"alien\" then the URL will be \"alien.json\".\r\n * @param {Phaser.Types.Loader.XHRSettingsObject} [xhrSettings] - Extra XHR Settings specifically for this file.\r\n * @param {string} [dataKey] - When the JSON file loads only this property will be stored in the Cache.\r\n */\r\nvar PackFile = new Class({\r\n\r\n    Extends: JSONFile,\r\n\r\n    initialize:\r\n\r\n    //  url can either be a string, in which case it is treated like a proper url, or an object, in which case it is treated as a ready-made JS Object\r\n    //  dataKey allows you to pluck a specific object out of the JSON and put just that into the cache, rather than the whole thing\r\n\r\n    function PackFile (loader, key, url, xhrSettings, dataKey)\r\n    {\r\n        JSONFile.call(this, loader, key, url, xhrSettings, dataKey);\r\n\r\n        this.type = 'packfile';\r\n    },\r\n\r\n    /**\r\n     * Called automatically by Loader.nextFile.\r\n     * This method controls what extra work this File does with its loaded data.\r\n     *\r\n     * @method Phaser.Loader.FileTypes.PackFile#onProcess\r\n     * @since 3.7.0\r\n     */\r\n    onProcess: function ()\r\n    {\r\n        if (this.state !== CONST.FILE_POPULATED)\r\n        {\r\n            this.state = CONST.FILE_PROCESSING;\r\n\r\n            this.data = JSON.parse(this.xhrLoader.responseText);\r\n        }\r\n\r\n        //  Let's pass the pack file data over to the Loader ...\r\n        this.loader.addPack(this.data, this.config);\r\n\r\n        this.onProcessComplete();\r\n    }\r\n\r\n});\r\n\r\n/**\r\n * Adds a JSON File Pack, or array of packs, to the current load queue.\r\n *\r\n * You can call this method from within your Scene's `preload`, along with any other files you wish to load:\r\n *\r\n * ```javascript\r\n * function preload ()\r\n * {\r\n *     this.load.pack('level1', 'data/Level1Files.json');\r\n * }\r\n * ```\r\n *\r\n * A File Pack is a JSON file (or object) that contains details about other files that should be added into the Loader.\r\n * Here is a small example:\r\n *\r\n * ```json\r\n * {\r\n *    \"test1\": {\r\n *        \"files\": [\r\n *            {\r\n *                \"type\": \"image\",\r\n *                \"key\": \"taikodrummaster\",\r\n *                \"url\": \"assets/pics/taikodrummaster.jpg\"\r\n *            },\r\n *            {\r\n *                \"type\": \"image\",\r\n *                \"key\": \"sukasuka-chtholly\",\r\n *                \"url\": \"assets/pics/sukasuka-chtholly.png\"\r\n *            }\r\n *        ]\r\n *    },\r\n *    \"meta\": {\r\n *        \"generated\": \"1401380327373\",\r\n *        \"app\": \"Phaser 3 Asset Packer\",\r\n *        \"url\": \"https://phaser.io\",\r\n *        \"version\": \"1.0\",\r\n *        \"copyright\": \"Photon Storm Ltd. 2018\"\r\n *    }\r\n * }\r\n * ```\r\n *\r\n * The pack can be split into sections. In the example above you'll see a section called `test1. You can tell\r\n * the `load.pack` method to parse only a particular section of a pack. The pack is stored in the JSON Cache,\r\n * so you can pass it to the Loader to process additional sections as needed in your game, or you can just load\r\n * them all at once without specifying anything.\r\n *\r\n * The pack file can contain an entry for any type of file that Phaser can load. The object structures exactly\r\n * match that of the file type configs, and all properties available within the file type configs can be used\r\n * in the pack file too.\r\n *\r\n * The file is **not** loaded right away. It is added to a queue ready to be loaded either when the loader starts,\r\n * or if it's already running, when the next free load slot becomes available. This happens automatically if you\r\n * are calling this from within the Scene's `preload` method, or a related callback. Because the file is queued\r\n * it means you cannot use the file immediately after calling this method, but must wait for the file to complete.\r\n * The typical flow for a Phaser Scene is that you load assets in the Scene's `preload` method and then when the\r\n * Scene's `create` method is called you are guaranteed that all of those assets are ready for use and have been\r\n * loaded.\r\n *\r\n * If you call this from outside of `preload` then you are responsible for starting the Loader afterwards and monitoring\r\n * its events to know when it's safe to use the asset. Please see the Phaser.Loader.LoaderPlugin class for more details.\r\n *\r\n * The key must be a unique String. It is used to add the file to the global JSON Cache upon a successful load.\r\n * The key should be unique both in terms of files being loaded and files already present in the JSON Cache.\r\n * Loading a file using a key that is already taken will result in a warning. If you wish to replace an existing file\r\n * then remove it from the JSON Cache first, before loading a new one.\r\n *\r\n * Instead of passing arguments you can pass a configuration object, such as:\r\n *\r\n * ```javascript\r\n * this.load.pack({\r\n *     key: 'level1',\r\n *     url: 'data/Level1Files.json'\r\n * });\r\n * ```\r\n *\r\n * See the documentation for `Phaser.Types.Loader.FileTypes.PackFileConfig` for more details.\r\n *\r\n * If you have specified a prefix in the loader, via `Loader.setPrefix` then this value will be prepended to this files\r\n * key. For example, if the prefix was `LEVEL1.` and the key was `Waves` the final key will be `LEVEL1.Waves` and\r\n * this is what you would use to retrieve the text from the JSON Cache.\r\n *\r\n * The URL can be relative or absolute. If the URL is relative the `Loader.baseURL` and `Loader.path` values will be prepended to it.\r\n *\r\n * If the URL isn't specified the Loader will take the key and create a filename from that. For example if the key is \"data\"\r\n * and no URL is given then the Loader will set the URL to be \"data.json\". It will always add `.json` as the extension, although\r\n * this can be overridden if using an object instead of method arguments. If you do not desire this action then provide a URL.\r\n *\r\n * You can also optionally provide a `dataKey` to use. This allows you to extract only a part of the JSON and store it in the Cache,\r\n * rather than the whole file. For example, if your JSON data had a structure like this:\r\n *\r\n * ```json\r\n * {\r\n *     \"level1\": {\r\n *         \"baddies\": {\r\n *             \"aliens\": {},\r\n *             \"boss\": {}\r\n *         }\r\n *     },\r\n *     \"level2\": {},\r\n *     \"level3\": {}\r\n * }\r\n * ```\r\n *\r\n * And you only wanted to store the `boss` data in the Cache, then you could pass `level1.baddies.boss`as the `dataKey`.\r\n *\r\n * Note: The ability to load this type of file will only be available if the Pack File type has been built into Phaser.\r\n * It is available in the default build but can be excluded from custom builds.\r\n *\r\n * @method Phaser.Loader.LoaderPlugin#pack\r\n * @fires Phaser.Loader.LoaderPlugin#ADD\r\n * @since 3.7.0\r\n *\r\n * @param {(string|Phaser.Types.Loader.FileTypes.PackFileConfig|Phaser.Types.Loader.FileTypes.PackFileConfig[])} key - The key to use for this file, or a file configuration object, or array of them.\r\n * @param {string} [url] - The absolute or relative URL to load this file from. If undefined or `null` it will be set to `<key>.json`, i.e. if `key` was \"alien\" then the URL will be \"alien.json\".\r\n * @param {string} [dataKey] - When the JSON file loads only this property will be stored in the Cache.\r\n * @param {Phaser.Types.Loader.XHRSettingsObject} [xhrSettings] - An XHR Settings configuration object. Used in replacement of the Loaders default XHR Settings.\r\n *\r\n * @return {this} The Loader instance.\r\n */\r\nFileTypesManager.register('pack', function (key, url, packKey, xhrSettings)\r\n{\r\n    //  Supports an Object file definition in the key argument\r\n    //  Or an array of objects in the key argument\r\n    //  Or a single entry where all arguments have been defined\r\n\r\n    if (Array.isArray(key))\r\n    {\r\n        for (var i = 0; i < key.length; i++)\r\n        {\r\n            this.addFile(new PackFile(this, key[i]));\r\n        }\r\n    }\r\n    else\r\n    {\r\n        this.addFile(new PackFile(this, key, url, xhrSettings, packKey));\r\n    }\r\n\r\n    return this;\r\n});\r\n\r\nmodule.exports = PackFile;\r\n"},"lineCount":null}},"error":null,"hash":"3f6792d8d4dfd384b5a0df9b73235d74","cacheData":{"env":{}}}