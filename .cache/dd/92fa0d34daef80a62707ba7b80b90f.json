{"id":"../node_modules/phaser/src/textures/CanvasTexture.js","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591206076000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000},{"name":"../utils/Class","loc":{"line":7,"column":20},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/textures/CanvasTexture.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/utils/Class.js"},{"name":"../math/Clamp","loc":{"line":8,"column":20},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/textures/CanvasTexture.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/math/Clamp.js"},{"name":"../display/color/Color","loc":{"line":9,"column":20},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/textures/CanvasTexture.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/display/color/Color.js"},{"name":"../const","loc":{"line":10,"column":20},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/textures/CanvasTexture.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/const.js"},{"name":"../math/pow2/IsSizePowerOfTwo","loc":{"line":11,"column":31},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/textures/CanvasTexture.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/math/pow2/IsSizePowerOfTwo.js"},{"name":"./Texture","loc":{"line":12,"column":22},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/textures/CanvasTexture.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/textures/Texture.js"}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Class = require('../utils/Class');\r\nvar Clamp = require('../math/Clamp');\r\nvar Color = require('../display/color/Color');\r\nvar CONST = require('../const');\r\nvar IsSizePowerOfTwo = require('../math/pow2/IsSizePowerOfTwo');\r\nvar Texture = require('./Texture');\r\n\r\n/**\r\n * @classdesc\r\n * A Canvas Texture is a special kind of Texture that is backed by an HTML Canvas Element as its source.\r\n *\r\n * You can use the properties of this texture to draw to the canvas element directly, using all of the standard\r\n * canvas operations available in the browser. Any Game Object can be given this texture and will render with it.\r\n *\r\n * Note: When running under WebGL the Canvas Texture needs to re-generate its base WebGLTexture and reupload it to\r\n * the GPU every time you modify it, otherwise the changes you make to this texture will not be visible. To do this\r\n * you should call `CanvasTexture.refresh()` once you are finished with your changes to the canvas. Try and keep\r\n * this to a minimum, especially on large canvas sizes, or you may inadvertently thrash the GPU by constantly uploading\r\n * texture data to it. This restriction does not apply if using the Canvas Renderer.\r\n * \r\n * It starts with only one frame that covers the whole of the canvas. You can add further frames, that specify\r\n * sections of the canvas using the `add` method.\r\n * \r\n * Should you need to resize the canvas use the `setSize` method so that it accurately updates all of the underlying\r\n * texture data as well. Forgetting to do this (i.e. by changing the canvas size directly from your code) could cause\r\n * graphical errors.\r\n *\r\n * @class CanvasTexture\r\n * @extends Phaser.Textures.Texture\r\n * @memberof Phaser.Textures\r\n * @constructor\r\n * @since 3.7.0\r\n *\r\n * @param {Phaser.Textures.TextureManager} manager - A reference to the Texture Manager this Texture belongs to.\r\n * @param {string} key - The unique string-based key of this Texture.\r\n * @param {HTMLCanvasElement} source - The canvas element that is used as the base of this texture.\r\n * @param {integer} width - The width of the canvas.\r\n * @param {integer} height - The height of the canvas.\r\n */\r\nvar CanvasTexture = new Class({\r\n\r\n    Extends: Texture,\r\n\r\n    initialize:\r\n\r\n    function CanvasTexture (manager, key, source, width, height)\r\n    {\r\n        Texture.call(this, manager, key, source, width, height);\r\n\r\n        this.add('__BASE', 0, 0, 0, width, height);\r\n\r\n        /**\r\n         * A reference to the Texture Source of this Canvas.\r\n         *\r\n         * @name Phaser.Textures.CanvasTexture#_source\r\n         * @type {Phaser.Textures.TextureSource}\r\n         * @private\r\n         * @since 3.7.0\r\n         */\r\n        this._source = this.frames['__BASE'].source;\r\n\r\n        /**\r\n         * The source Canvas Element.\r\n         *\r\n         * @name Phaser.Textures.CanvasTexture#canvas\r\n         * @readonly\r\n         * @type {HTMLCanvasElement}\r\n         * @since 3.7.0\r\n         */\r\n        this.canvas = this._source.image;\r\n\r\n        /**\r\n         * The 2D Canvas Rendering Context.\r\n         *\r\n         * @name Phaser.Textures.CanvasTexture#context\r\n         * @readonly\r\n         * @type {CanvasRenderingContext2D}\r\n         * @since 3.7.0\r\n         */\r\n        this.context = this.canvas.getContext('2d');\r\n\r\n        /**\r\n         * The width of the Canvas.\r\n         * This property is read-only, if you wish to change it use the `setSize` method.\r\n         *\r\n         * @name Phaser.Textures.CanvasTexture#width\r\n         * @readonly\r\n         * @type {integer}\r\n         * @since 3.7.0\r\n         */\r\n        this.width = width;\r\n\r\n        /**\r\n         * The height of the Canvas.\r\n         * This property is read-only, if you wish to change it use the `setSize` method.\r\n         *\r\n         * @name Phaser.Textures.CanvasTexture#height\r\n         * @readonly\r\n         * @type {integer}\r\n         * @since 3.7.0\r\n         */\r\n        this.height = height;\r\n\r\n        /**\r\n         * The context image data.\r\n         * Use the `update` method to populate this when the canvas changes.\r\n         *\r\n         * @name Phaser.Textures.CanvasTexture#imageData\r\n         * @type {ImageData}\r\n         * @since 3.13.0\r\n         */\r\n        this.imageData = this.context.getImageData(0, 0, width, height);\r\n\r\n        /**\r\n         * A Uint8ClampedArray view into the `buffer`.\r\n         * Use the `update` method to populate this when the canvas changes.\r\n         * Note that this is unavailable in some browsers, such as Epic Browser, due to their security restrictions.\r\n         *\r\n         * @name Phaser.Textures.CanvasTexture#data\r\n         * @type {Uint8ClampedArray}\r\n         * @since 3.13.0\r\n         */\r\n        this.data = null;\r\n\r\n        if (this.imageData)\r\n        {\r\n            this.data = this.imageData.data;\r\n        }\r\n\r\n        /**\r\n         * An Uint32Array view into the `buffer`.\r\n         *\r\n         * @name Phaser.Textures.CanvasTexture#pixels\r\n         * @type {Uint32Array}\r\n         * @since 3.13.0\r\n         */\r\n        this.pixels = null;\r\n\r\n        /**\r\n         * An ArrayBuffer the same size as the context ImageData.\r\n         *\r\n         * @name Phaser.Textures.CanvasTexture#buffer\r\n         * @type {ArrayBuffer}\r\n         * @since 3.13.0\r\n         */\r\n        this.buffer;\r\n\r\n        if (this.data)\r\n        {\r\n            if (this.imageData.data.buffer)\r\n            {\r\n                this.buffer = this.imageData.data.buffer;\r\n                this.pixels = new Uint32Array(this.buffer);\r\n            }\r\n            else if (window.ArrayBuffer)\r\n            {\r\n                this.buffer = new ArrayBuffer(this.imageData.data.length);\r\n                this.pixels = new Uint32Array(this.buffer);\r\n            }\r\n            else\r\n            {\r\n                this.pixels = this.imageData.data;\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * This re-creates the `imageData` from the current context.\r\n     * It then re-builds the ArrayBuffer, the `data` Uint8ClampedArray reference and the `pixels` Int32Array.\r\n     *\r\n     * Warning: This is a very expensive operation, so use it sparingly.\r\n     *\r\n     * @method Phaser.Textures.CanvasTexture#update\r\n     * @since 3.13.0\r\n     *\r\n     * @return {Phaser.Textures.CanvasTexture} This CanvasTexture.\r\n     */\r\n    update: function ()\r\n    {\r\n        this.imageData = this.context.getImageData(0, 0, this.width, this.height);\r\n\r\n        this.data = this.imageData.data;\r\n\r\n        if (this.imageData.data.buffer)\r\n        {\r\n            this.buffer = this.imageData.data.buffer;\r\n            this.pixels = new Uint32Array(this.buffer);\r\n        }\r\n        else if (window.ArrayBuffer)\r\n        {\r\n            this.buffer = new ArrayBuffer(this.imageData.data.length);\r\n            this.pixels = new Uint32Array(this.buffer);\r\n        }\r\n        else\r\n        {\r\n            this.pixels = this.imageData.data;\r\n        }\r\n\r\n        if (this.manager.game.config.renderType === CONST.WEBGL)\r\n        {\r\n            this.refresh();\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Draws the given Image or Canvas element to this CanvasTexture, then updates the internal\r\n     * ImageData buffer and arrays.\r\n     *\r\n     * @method Phaser.Textures.CanvasTexture#draw\r\n     * @since 3.13.0\r\n     * \r\n     * @param {integer} x - The x coordinate to draw the source at.\r\n     * @param {integer} y - The y coordinate to draw the source at.\r\n     * @param {(HTMLImageElement|HTMLCanvasElement)} source - The element to draw to this canvas.\r\n     * \r\n     * @return {Phaser.Textures.CanvasTexture} This CanvasTexture.\r\n     */\r\n    draw: function (x, y, source)\r\n    {\r\n        this.context.drawImage(source, x, y);\r\n\r\n        return this.update();\r\n    },\r\n\r\n    /**\r\n     * Draws the given texture frame to this CanvasTexture, then updates the internal\r\n     * ImageData buffer and arrays.\r\n     *\r\n     * @method Phaser.Textures.CanvasTexture#drawFrame\r\n     * @since 3.16.0\r\n     * \r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {(string|integer)} [frame] - The string-based name, or integer based index, of the Frame to get from the Texture.\r\n     * @param {integer} [x=0] - The x coordinate to draw the source at.\r\n     * @param {integer} [y=0] - The y coordinate to draw the source at.\r\n     * \r\n     * @return {Phaser.Textures.CanvasTexture} This CanvasTexture.\r\n     */\r\n    drawFrame: function (key, frame, x, y)\r\n    {\r\n        if (x === undefined) { x = 0; }\r\n        if (y === undefined) { y = 0; }\r\n\r\n        var textureFrame = this.manager.getFrame(key, frame);\r\n\r\n        if (textureFrame)\r\n        {\r\n            var cd = textureFrame.canvasData;\r\n\r\n            var width = textureFrame.cutWidth;\r\n            var height = textureFrame.cutHeight;\r\n            var res = textureFrame.source.resolution;\r\n\r\n            this.context.drawImage(\r\n                textureFrame.source.image,\r\n                cd.x, cd.y,\r\n                width,\r\n                height,\r\n                x, y,\r\n                width / res,\r\n                height / res\r\n            );\r\n\r\n            return this.update();\r\n        }\r\n        else\r\n        {\r\n            return this;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Sets a pixel in the CanvasTexture to the given color and alpha values.\r\n     *\r\n     * This is an expensive operation to run in large quantities, so use sparingly.\r\n     *\r\n     * @method Phaser.Textures.CanvasTexture#setPixel\r\n     * @since 3.16.0\r\n     * \r\n     * @param {integer} x - The x coordinate of the pixel to get. Must lay within the dimensions of this CanvasTexture and be an integer.\r\n     * @param {integer} y - The y coordinate of the pixel to get. Must lay within the dimensions of this CanvasTexture and be an integer.\r\n     * @param {integer} red - The red color value. A number between 0 and 255.\r\n     * @param {integer} green - The green color value. A number between 0 and 255.\r\n     * @param {integer} blue - The blue color value. A number between 0 and 255.\r\n     * @param {integer} [alpha=255] - The alpha value. A number between 0 and 255.\r\n     * \r\n     * @return {this} This CanvasTexture.\r\n     */\r\n    setPixel: function (x, y, red, green, blue, alpha)\r\n    {\r\n        if (alpha === undefined) { alpha = 255; }\r\n\r\n        x = Math.abs(Math.floor(x));\r\n        y = Math.abs(Math.floor(y));\r\n\r\n        var index = this.getIndex(x, y);\r\n\r\n        if (index > -1)\r\n        {\r\n            var imageData = this.context.getImageData(x, y, 1, 1);\r\n\r\n            imageData.data[0] = red;\r\n            imageData.data[1] = green;\r\n            imageData.data[2] = blue;\r\n            imageData.data[3] = alpha;\r\n\r\n            this.context.putImageData(imageData, x, y);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Puts the ImageData into the context of this CanvasTexture at the given coordinates.\r\n     *\r\n     * @method Phaser.Textures.CanvasTexture#putData\r\n     * @since 3.16.0\r\n     * \r\n     * @param {ImageData} imageData - The ImageData to put at the given location.\r\n     * @param {integer} x - The x coordinate to put the imageData. Must lay within the dimensions of this CanvasTexture and be an integer.\r\n     * @param {integer} y - The y coordinate to put the imageData. Must lay within the dimensions of this CanvasTexture and be an integer.\r\n     * @param {integer} [dirtyX=0] - Horizontal position (x coordinate) of the top-left corner from which the image data will be extracted.\r\n     * @param {integer} [dirtyY=0] - Vertical position (x coordinate) of the top-left corner from which the image data will be extracted.\r\n     * @param {integer} [dirtyWidth] - Width of the rectangle to be painted. Defaults to the width of the image data.\r\n     * @param {integer} [dirtyHeight] - Height of the rectangle to be painted. Defaults to the height of the image data.\r\n     * \r\n     * @return {this} This CanvasTexture.\r\n     */\r\n    putData: function (imageData, x, y, dirtyX, dirtyY, dirtyWidth, dirtyHeight)\r\n    {\r\n        if (dirtyX === undefined) { dirtyX = 0; }\r\n        if (dirtyY === undefined) { dirtyY = 0; }\r\n        if (dirtyWidth === undefined) { dirtyWidth = imageData.width; }\r\n        if (dirtyHeight === undefined) { dirtyHeight = imageData.height; }\r\n\r\n        this.context.putImageData(imageData, x, y, dirtyX, dirtyY, dirtyWidth, dirtyHeight);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Gets an ImageData region from this CanvasTexture from the position and size specified.\r\n     * You can write this back using `CanvasTexture.putData`, or manipulate it.\r\n     *\r\n     * @method Phaser.Textures.CanvasTexture#getData\r\n     * @since 3.16.0\r\n     * \r\n     * @param {integer} x - The x coordinate of the top-left of the area to get the ImageData from. Must lay within the dimensions of this CanvasTexture and be an integer.\r\n     * @param {integer} y - The y coordinate of the top-left of the area to get the ImageData from. Must lay within the dimensions of this CanvasTexture and be an integer.\r\n     * @param {integer} width - The width of the rectangle from which the ImageData will be extracted. Positive values are to the right, and negative to the left.\r\n     * @param {integer} height - The height of the rectangle from which the ImageData will be extracted. Positive values are down, and negative are up.\r\n     * \r\n     * @return {ImageData} The ImageData extracted from this CanvasTexture.\r\n     */\r\n    getData: function (x, y, width, height)\r\n    {\r\n        x = Clamp(Math.floor(x), 0, this.width - 1);\r\n        y = Clamp(Math.floor(y), 0, this.height - 1);\r\n        width = Clamp(width, 1, this.width - x);\r\n        height = Clamp(height, 1, this.height - y);\r\n\r\n        var imageData = this.context.getImageData(x, y, width, height);\r\n\r\n        return imageData;\r\n    },\r\n\r\n    /**\r\n     * Get the color of a specific pixel from this texture and store it in a Color object.\r\n     * \r\n     * If you have drawn anything to this CanvasTexture since it was created you must call `CanvasTexture.update` to refresh the array buffer,\r\n     * otherwise this may return out of date color values, or worse - throw a run-time error as it tries to access an array element that doesn't exist.\r\n     *\r\n     * @method Phaser.Textures.CanvasTexture#getPixel\r\n     * @since 3.13.0\r\n     * \r\n     * @param {integer} x - The x coordinate of the pixel to get. Must lay within the dimensions of this CanvasTexture and be an integer.\r\n     * @param {integer} y - The y coordinate of the pixel to get. Must lay within the dimensions of this CanvasTexture and be an integer.\r\n     * @param {Phaser.Display.Color} [out] - A Color object to store the pixel values in. If not provided a new Color object will be created.\r\n     * \r\n     * @return {Phaser.Display.Color} An object with the red, green, blue and alpha values set in the r, g, b and a properties.\r\n     */\r\n    getPixel: function (x, y, out)\r\n    {\r\n        if (!out)\r\n        {\r\n            out = new Color();\r\n        }\r\n\r\n        var index = this.getIndex(x, y);\r\n\r\n        if (index > -1)\r\n        {\r\n            var data = this.data;\r\n\r\n            var r = data[index + 0];\r\n            var g = data[index + 1];\r\n            var b = data[index + 2];\r\n            var a = data[index + 3];\r\n\r\n            out.setTo(r, g, b, a);\r\n        }\r\n\r\n        return out;\r\n    },\r\n\r\n    /**\r\n     * Returns an array containing all of the pixels in the given region.\r\n     *\r\n     * If the requested region extends outside the bounds of this CanvasTexture,\r\n     * the region is truncated to fit.\r\n     * \r\n     * If you have drawn anything to this CanvasTexture since it was created you must call `CanvasTexture.update` to refresh the array buffer,\r\n     * otherwise this may return out of date color values, or worse - throw a run-time error as it tries to access an array element that doesn't exist.\r\n     *\r\n     * @method Phaser.Textures.CanvasTexture#getPixels\r\n     * @since 3.16.0\r\n     * \r\n     * @param {integer} [x=0] - The x coordinate of the top-left of the region. Must lay within the dimensions of this CanvasTexture and be an integer.\r\n     * @param {integer} [y=0] - The y coordinate of the top-left of the region. Must lay within the dimensions of this CanvasTexture and be an integer.\r\n     * @param {integer} [width] - The width of the region to get. Must be an integer. Defaults to the canvas width if not given.\r\n     * @param {integer} [height] - The height of the region to get. Must be an integer. If not given will be set to the `width`.\r\n     * \r\n     * @return {Phaser.Types.Textures.PixelConfig[][]} A 2d array of Pixel objects.\r\n     */\r\n    getPixels: function (x, y, width, height)\r\n    {\r\n        if (x === undefined) { x = 0; }\r\n        if (y === undefined) { y = 0; }\r\n        if (width === undefined) { width = this.width; }\r\n        if (height === undefined) { height = width; }\r\n\r\n        x = Math.abs(Math.round(x));\r\n        y = Math.abs(Math.round(y));\r\n\r\n        var left = Clamp(x, 0, this.width);\r\n        var right = Clamp(x + width, 0, this.width);\r\n        var top = Clamp(y, 0, this.height);\r\n        var bottom = Clamp(y + height, 0, this.height);\r\n\r\n        var pixel = new Color();\r\n\r\n        var out = [];\r\n\r\n        for (var py = top; py < bottom; py++)\r\n        {\r\n            var row = [];\r\n\r\n            for (var px = left; px < right; px++)\r\n            {\r\n                pixel = this.getPixel(px, py, pixel);\r\n\r\n                row.push({ x: px, y: py, color: pixel.color, alpha: pixel.alphaGL });\r\n            }\r\n\r\n            out.push(row);\r\n        }\r\n\r\n        return out;\r\n    },\r\n\r\n    /**\r\n     * Returns the Image Data index for the given pixel in this CanvasTexture.\r\n     *\r\n     * The index can be used to read directly from the `this.data` array.\r\n     *\r\n     * The index points to the red value in the array. The subsequent 3 indexes\r\n     * point to green, blue and alpha respectively.\r\n     *\r\n     * @method Phaser.Textures.CanvasTexture#getIndex\r\n     * @since 3.16.0\r\n     * \r\n     * @param {integer} x - The x coordinate of the pixel to get. Must lay within the dimensions of this CanvasTexture and be an integer.\r\n     * @param {integer} y - The y coordinate of the pixel to get. Must lay within the dimensions of this CanvasTexture and be an integer.\r\n     * \r\n     * @return {integer} \r\n     */\r\n    getIndex: function (x, y)\r\n    {\r\n        x = Math.abs(Math.round(x));\r\n        y = Math.abs(Math.round(y));\r\n\r\n        if (x < this.width && y < this.height)\r\n        {\r\n            return (x + y * this.width) * 4;\r\n        }\r\n        else\r\n        {\r\n            return -1;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * This should be called manually if you are running under WebGL.\r\n     * It will refresh the WebGLTexture from the Canvas source. Only call this if you know that the\r\n     * canvas has changed, as there is a significant GPU texture allocation cost involved in doing so.\r\n     *\r\n     * @method Phaser.Textures.CanvasTexture#refresh\r\n     * @since 3.7.0\r\n     *\r\n     * @return {Phaser.Textures.CanvasTexture} This CanvasTexture.\r\n     */\r\n    refresh: function ()\r\n    {\r\n        this._source.update();\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Gets the Canvas Element.\r\n     *\r\n     * @method Phaser.Textures.CanvasTexture#getCanvas\r\n     * @since 3.7.0\r\n     *\r\n     * @return {HTMLCanvasElement} The Canvas DOM element this texture is using.\r\n     */\r\n    getCanvas: function ()\r\n    {\r\n        return this.canvas;\r\n    },\r\n\r\n    /**\r\n     * Gets the 2D Canvas Rendering Context.\r\n     *\r\n     * @method Phaser.Textures.CanvasTexture#getContext\r\n     * @since 3.7.0\r\n     *\r\n     * @return {CanvasRenderingContext2D} The Canvas Rendering Context this texture is using.\r\n     */\r\n    getContext: function ()\r\n    {\r\n        return this.context;\r\n    },\r\n\r\n    /**\r\n     * Clears the given region of this Canvas Texture, resetting it back to transparent.\r\n     * If no region is given, the whole Canvas Texture is cleared.\r\n     *\r\n     * @method Phaser.Textures.CanvasTexture#clear\r\n     * @since 3.7.0\r\n     * \r\n     * @param {integer} [x=0] - The x coordinate of the top-left of the region to clear.\r\n     * @param {integer} [y=0] - The y coordinate of the top-left of the region to clear.\r\n     * @param {integer} [width] - The width of the region.\r\n     * @param {integer} [height] - The height of the region.\r\n     *\r\n     * @return {Phaser.Textures.CanvasTexture} The Canvas Texture.\r\n     */\r\n    clear: function (x, y, width, height)\r\n    {\r\n        if (x === undefined) { x = 0; }\r\n        if (y === undefined) { y = 0; }\r\n        if (width === undefined) { width = this.width; }\r\n        if (height === undefined) { height = this.height; }\r\n\r\n        this.context.clearRect(x, y, width, height);\r\n\r\n        return this.update();\r\n    },\r\n\r\n    /**\r\n     * Changes the size of this Canvas Texture.\r\n     *\r\n     * @method Phaser.Textures.CanvasTexture#setSize\r\n     * @since 3.7.0\r\n     *\r\n     * @param {integer} width - The new width of the Canvas.\r\n     * @param {integer} [height] - The new height of the Canvas. If not given it will use the width as the height.\r\n     *\r\n     * @return {Phaser.Textures.CanvasTexture} The Canvas Texture.\r\n     */\r\n    setSize: function (width, height)\r\n    {\r\n        if (height === undefined) { height = width; }\r\n\r\n        if (width !== this.width || height !== this.height)\r\n        {\r\n            //  Update the Canvas\r\n            this.canvas.width = width;\r\n            this.canvas.height = height;\r\n\r\n            //  Update the Texture Source\r\n            this._source.width = width;\r\n            this._source.height = height;\r\n            this._source.isPowerOf2 = IsSizePowerOfTwo(width, height);\r\n\r\n            //  Update the Frame\r\n            this.frames['__BASE'].setSize(width, height, 0, 0);\r\n\r\n            //  Update this\r\n            this.width = width;\r\n            this.height = height;\r\n\r\n            this.refresh();\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Destroys this Texture and releases references to its sources and frames.\r\n     *\r\n     * @method Phaser.Textures.CanvasTexture#destroy\r\n     * @since 3.16.0\r\n     */\r\n    destroy: function ()\r\n    {\r\n        Texture.prototype.destroy.call(this);\r\n\r\n        this._source = null;\r\n        this.canvas = null;\r\n        this.context = null;\r\n        this.imageData = null;\r\n        this.data = null;\r\n        this.pixels = null;\r\n        this.buffer = null;\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = CanvasTexture;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"../node_modules/phaser/src/textures/CanvasTexture.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}}],"sources":{"../node_modules/phaser/src/textures/CanvasTexture.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Class = require('../utils/Class');\r\nvar Clamp = require('../math/Clamp');\r\nvar Color = require('../display/color/Color');\r\nvar CONST = require('../const');\r\nvar IsSizePowerOfTwo = require('../math/pow2/IsSizePowerOfTwo');\r\nvar Texture = require('./Texture');\r\n\r\n/**\r\n * @classdesc\r\n * A Canvas Texture is a special kind of Texture that is backed by an HTML Canvas Element as its source.\r\n *\r\n * You can use the properties of this texture to draw to the canvas element directly, using all of the standard\r\n * canvas operations available in the browser. Any Game Object can be given this texture and will render with it.\r\n *\r\n * Note: When running under WebGL the Canvas Texture needs to re-generate its base WebGLTexture and reupload it to\r\n * the GPU every time you modify it, otherwise the changes you make to this texture will not be visible. To do this\r\n * you should call `CanvasTexture.refresh()` once you are finished with your changes to the canvas. Try and keep\r\n * this to a minimum, especially on large canvas sizes, or you may inadvertently thrash the GPU by constantly uploading\r\n * texture data to it. This restriction does not apply if using the Canvas Renderer.\r\n * \r\n * It starts with only one frame that covers the whole of the canvas. You can add further frames, that specify\r\n * sections of the canvas using the `add` method.\r\n * \r\n * Should you need to resize the canvas use the `setSize` method so that it accurately updates all of the underlying\r\n * texture data as well. Forgetting to do this (i.e. by changing the canvas size directly from your code) could cause\r\n * graphical errors.\r\n *\r\n * @class CanvasTexture\r\n * @extends Phaser.Textures.Texture\r\n * @memberof Phaser.Textures\r\n * @constructor\r\n * @since 3.7.0\r\n *\r\n * @param {Phaser.Textures.TextureManager} manager - A reference to the Texture Manager this Texture belongs to.\r\n * @param {string} key - The unique string-based key of this Texture.\r\n * @param {HTMLCanvasElement} source - The canvas element that is used as the base of this texture.\r\n * @param {integer} width - The width of the canvas.\r\n * @param {integer} height - The height of the canvas.\r\n */\r\nvar CanvasTexture = new Class({\r\n\r\n    Extends: Texture,\r\n\r\n    initialize:\r\n\r\n    function CanvasTexture (manager, key, source, width, height)\r\n    {\r\n        Texture.call(this, manager, key, source, width, height);\r\n\r\n        this.add('__BASE', 0, 0, 0, width, height);\r\n\r\n        /**\r\n         * A reference to the Texture Source of this Canvas.\r\n         *\r\n         * @name Phaser.Textures.CanvasTexture#_source\r\n         * @type {Phaser.Textures.TextureSource}\r\n         * @private\r\n         * @since 3.7.0\r\n         */\r\n        this._source = this.frames['__BASE'].source;\r\n\r\n        /**\r\n         * The source Canvas Element.\r\n         *\r\n         * @name Phaser.Textures.CanvasTexture#canvas\r\n         * @readonly\r\n         * @type {HTMLCanvasElement}\r\n         * @since 3.7.0\r\n         */\r\n        this.canvas = this._source.image;\r\n\r\n        /**\r\n         * The 2D Canvas Rendering Context.\r\n         *\r\n         * @name Phaser.Textures.CanvasTexture#context\r\n         * @readonly\r\n         * @type {CanvasRenderingContext2D}\r\n         * @since 3.7.0\r\n         */\r\n        this.context = this.canvas.getContext('2d');\r\n\r\n        /**\r\n         * The width of the Canvas.\r\n         * This property is read-only, if you wish to change it use the `setSize` method.\r\n         *\r\n         * @name Phaser.Textures.CanvasTexture#width\r\n         * @readonly\r\n         * @type {integer}\r\n         * @since 3.7.0\r\n         */\r\n        this.width = width;\r\n\r\n        /**\r\n         * The height of the Canvas.\r\n         * This property is read-only, if you wish to change it use the `setSize` method.\r\n         *\r\n         * @name Phaser.Textures.CanvasTexture#height\r\n         * @readonly\r\n         * @type {integer}\r\n         * @since 3.7.0\r\n         */\r\n        this.height = height;\r\n\r\n        /**\r\n         * The context image data.\r\n         * Use the `update` method to populate this when the canvas changes.\r\n         *\r\n         * @name Phaser.Textures.CanvasTexture#imageData\r\n         * @type {ImageData}\r\n         * @since 3.13.0\r\n         */\r\n        this.imageData = this.context.getImageData(0, 0, width, height);\r\n\r\n        /**\r\n         * A Uint8ClampedArray view into the `buffer`.\r\n         * Use the `update` method to populate this when the canvas changes.\r\n         * Note that this is unavailable in some browsers, such as Epic Browser, due to their security restrictions.\r\n         *\r\n         * @name Phaser.Textures.CanvasTexture#data\r\n         * @type {Uint8ClampedArray}\r\n         * @since 3.13.0\r\n         */\r\n        this.data = null;\r\n\r\n        if (this.imageData)\r\n        {\r\n            this.data = this.imageData.data;\r\n        }\r\n\r\n        /**\r\n         * An Uint32Array view into the `buffer`.\r\n         *\r\n         * @name Phaser.Textures.CanvasTexture#pixels\r\n         * @type {Uint32Array}\r\n         * @since 3.13.0\r\n         */\r\n        this.pixels = null;\r\n\r\n        /**\r\n         * An ArrayBuffer the same size as the context ImageData.\r\n         *\r\n         * @name Phaser.Textures.CanvasTexture#buffer\r\n         * @type {ArrayBuffer}\r\n         * @since 3.13.0\r\n         */\r\n        this.buffer;\r\n\r\n        if (this.data)\r\n        {\r\n            if (this.imageData.data.buffer)\r\n            {\r\n                this.buffer = this.imageData.data.buffer;\r\n                this.pixels = new Uint32Array(this.buffer);\r\n            }\r\n            else if (window.ArrayBuffer)\r\n            {\r\n                this.buffer = new ArrayBuffer(this.imageData.data.length);\r\n                this.pixels = new Uint32Array(this.buffer);\r\n            }\r\n            else\r\n            {\r\n                this.pixels = this.imageData.data;\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * This re-creates the `imageData` from the current context.\r\n     * It then re-builds the ArrayBuffer, the `data` Uint8ClampedArray reference and the `pixels` Int32Array.\r\n     *\r\n     * Warning: This is a very expensive operation, so use it sparingly.\r\n     *\r\n     * @method Phaser.Textures.CanvasTexture#update\r\n     * @since 3.13.0\r\n     *\r\n     * @return {Phaser.Textures.CanvasTexture} This CanvasTexture.\r\n     */\r\n    update: function ()\r\n    {\r\n        this.imageData = this.context.getImageData(0, 0, this.width, this.height);\r\n\r\n        this.data = this.imageData.data;\r\n\r\n        if (this.imageData.data.buffer)\r\n        {\r\n            this.buffer = this.imageData.data.buffer;\r\n            this.pixels = new Uint32Array(this.buffer);\r\n        }\r\n        else if (window.ArrayBuffer)\r\n        {\r\n            this.buffer = new ArrayBuffer(this.imageData.data.length);\r\n            this.pixels = new Uint32Array(this.buffer);\r\n        }\r\n        else\r\n        {\r\n            this.pixels = this.imageData.data;\r\n        }\r\n\r\n        if (this.manager.game.config.renderType === CONST.WEBGL)\r\n        {\r\n            this.refresh();\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Draws the given Image or Canvas element to this CanvasTexture, then updates the internal\r\n     * ImageData buffer and arrays.\r\n     *\r\n     * @method Phaser.Textures.CanvasTexture#draw\r\n     * @since 3.13.0\r\n     * \r\n     * @param {integer} x - The x coordinate to draw the source at.\r\n     * @param {integer} y - The y coordinate to draw the source at.\r\n     * @param {(HTMLImageElement|HTMLCanvasElement)} source - The element to draw to this canvas.\r\n     * \r\n     * @return {Phaser.Textures.CanvasTexture} This CanvasTexture.\r\n     */\r\n    draw: function (x, y, source)\r\n    {\r\n        this.context.drawImage(source, x, y);\r\n\r\n        return this.update();\r\n    },\r\n\r\n    /**\r\n     * Draws the given texture frame to this CanvasTexture, then updates the internal\r\n     * ImageData buffer and arrays.\r\n     *\r\n     * @method Phaser.Textures.CanvasTexture#drawFrame\r\n     * @since 3.16.0\r\n     * \r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {(string|integer)} [frame] - The string-based name, or integer based index, of the Frame to get from the Texture.\r\n     * @param {integer} [x=0] - The x coordinate to draw the source at.\r\n     * @param {integer} [y=0] - The y coordinate to draw the source at.\r\n     * \r\n     * @return {Phaser.Textures.CanvasTexture} This CanvasTexture.\r\n     */\r\n    drawFrame: function (key, frame, x, y)\r\n    {\r\n        if (x === undefined) { x = 0; }\r\n        if (y === undefined) { y = 0; }\r\n\r\n        var textureFrame = this.manager.getFrame(key, frame);\r\n\r\n        if (textureFrame)\r\n        {\r\n            var cd = textureFrame.canvasData;\r\n\r\n            var width = textureFrame.cutWidth;\r\n            var height = textureFrame.cutHeight;\r\n            var res = textureFrame.source.resolution;\r\n\r\n            this.context.drawImage(\r\n                textureFrame.source.image,\r\n                cd.x, cd.y,\r\n                width,\r\n                height,\r\n                x, y,\r\n                width / res,\r\n                height / res\r\n            );\r\n\r\n            return this.update();\r\n        }\r\n        else\r\n        {\r\n            return this;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Sets a pixel in the CanvasTexture to the given color and alpha values.\r\n     *\r\n     * This is an expensive operation to run in large quantities, so use sparingly.\r\n     *\r\n     * @method Phaser.Textures.CanvasTexture#setPixel\r\n     * @since 3.16.0\r\n     * \r\n     * @param {integer} x - The x coordinate of the pixel to get. Must lay within the dimensions of this CanvasTexture and be an integer.\r\n     * @param {integer} y - The y coordinate of the pixel to get. Must lay within the dimensions of this CanvasTexture and be an integer.\r\n     * @param {integer} red - The red color value. A number between 0 and 255.\r\n     * @param {integer} green - The green color value. A number between 0 and 255.\r\n     * @param {integer} blue - The blue color value. A number between 0 and 255.\r\n     * @param {integer} [alpha=255] - The alpha value. A number between 0 and 255.\r\n     * \r\n     * @return {this} This CanvasTexture.\r\n     */\r\n    setPixel: function (x, y, red, green, blue, alpha)\r\n    {\r\n        if (alpha === undefined) { alpha = 255; }\r\n\r\n        x = Math.abs(Math.floor(x));\r\n        y = Math.abs(Math.floor(y));\r\n\r\n        var index = this.getIndex(x, y);\r\n\r\n        if (index > -1)\r\n        {\r\n            var imageData = this.context.getImageData(x, y, 1, 1);\r\n\r\n            imageData.data[0] = red;\r\n            imageData.data[1] = green;\r\n            imageData.data[2] = blue;\r\n            imageData.data[3] = alpha;\r\n\r\n            this.context.putImageData(imageData, x, y);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Puts the ImageData into the context of this CanvasTexture at the given coordinates.\r\n     *\r\n     * @method Phaser.Textures.CanvasTexture#putData\r\n     * @since 3.16.0\r\n     * \r\n     * @param {ImageData} imageData - The ImageData to put at the given location.\r\n     * @param {integer} x - The x coordinate to put the imageData. Must lay within the dimensions of this CanvasTexture and be an integer.\r\n     * @param {integer} y - The y coordinate to put the imageData. Must lay within the dimensions of this CanvasTexture and be an integer.\r\n     * @param {integer} [dirtyX=0] - Horizontal position (x coordinate) of the top-left corner from which the image data will be extracted.\r\n     * @param {integer} [dirtyY=0] - Vertical position (x coordinate) of the top-left corner from which the image data will be extracted.\r\n     * @param {integer} [dirtyWidth] - Width of the rectangle to be painted. Defaults to the width of the image data.\r\n     * @param {integer} [dirtyHeight] - Height of the rectangle to be painted. Defaults to the height of the image data.\r\n     * \r\n     * @return {this} This CanvasTexture.\r\n     */\r\n    putData: function (imageData, x, y, dirtyX, dirtyY, dirtyWidth, dirtyHeight)\r\n    {\r\n        if (dirtyX === undefined) { dirtyX = 0; }\r\n        if (dirtyY === undefined) { dirtyY = 0; }\r\n        if (dirtyWidth === undefined) { dirtyWidth = imageData.width; }\r\n        if (dirtyHeight === undefined) { dirtyHeight = imageData.height; }\r\n\r\n        this.context.putImageData(imageData, x, y, dirtyX, dirtyY, dirtyWidth, dirtyHeight);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Gets an ImageData region from this CanvasTexture from the position and size specified.\r\n     * You can write this back using `CanvasTexture.putData`, or manipulate it.\r\n     *\r\n     * @method Phaser.Textures.CanvasTexture#getData\r\n     * @since 3.16.0\r\n     * \r\n     * @param {integer} x - The x coordinate of the top-left of the area to get the ImageData from. Must lay within the dimensions of this CanvasTexture and be an integer.\r\n     * @param {integer} y - The y coordinate of the top-left of the area to get the ImageData from. Must lay within the dimensions of this CanvasTexture and be an integer.\r\n     * @param {integer} width - The width of the rectangle from which the ImageData will be extracted. Positive values are to the right, and negative to the left.\r\n     * @param {integer} height - The height of the rectangle from which the ImageData will be extracted. Positive values are down, and negative are up.\r\n     * \r\n     * @return {ImageData} The ImageData extracted from this CanvasTexture.\r\n     */\r\n    getData: function (x, y, width, height)\r\n    {\r\n        x = Clamp(Math.floor(x), 0, this.width - 1);\r\n        y = Clamp(Math.floor(y), 0, this.height - 1);\r\n        width = Clamp(width, 1, this.width - x);\r\n        height = Clamp(height, 1, this.height - y);\r\n\r\n        var imageData = this.context.getImageData(x, y, width, height);\r\n\r\n        return imageData;\r\n    },\r\n\r\n    /**\r\n     * Get the color of a specific pixel from this texture and store it in a Color object.\r\n     * \r\n     * If you have drawn anything to this CanvasTexture since it was created you must call `CanvasTexture.update` to refresh the array buffer,\r\n     * otherwise this may return out of date color values, or worse - throw a run-time error as it tries to access an array element that doesn't exist.\r\n     *\r\n     * @method Phaser.Textures.CanvasTexture#getPixel\r\n     * @since 3.13.0\r\n     * \r\n     * @param {integer} x - The x coordinate of the pixel to get. Must lay within the dimensions of this CanvasTexture and be an integer.\r\n     * @param {integer} y - The y coordinate of the pixel to get. Must lay within the dimensions of this CanvasTexture and be an integer.\r\n     * @param {Phaser.Display.Color} [out] - A Color object to store the pixel values in. If not provided a new Color object will be created.\r\n     * \r\n     * @return {Phaser.Display.Color} An object with the red, green, blue and alpha values set in the r, g, b and a properties.\r\n     */\r\n    getPixel: function (x, y, out)\r\n    {\r\n        if (!out)\r\n        {\r\n            out = new Color();\r\n        }\r\n\r\n        var index = this.getIndex(x, y);\r\n\r\n        if (index > -1)\r\n        {\r\n            var data = this.data;\r\n\r\n            var r = data[index + 0];\r\n            var g = data[index + 1];\r\n            var b = data[index + 2];\r\n            var a = data[index + 3];\r\n\r\n            out.setTo(r, g, b, a);\r\n        }\r\n\r\n        return out;\r\n    },\r\n\r\n    /**\r\n     * Returns an array containing all of the pixels in the given region.\r\n     *\r\n     * If the requested region extends outside the bounds of this CanvasTexture,\r\n     * the region is truncated to fit.\r\n     * \r\n     * If you have drawn anything to this CanvasTexture since it was created you must call `CanvasTexture.update` to refresh the array buffer,\r\n     * otherwise this may return out of date color values, or worse - throw a run-time error as it tries to access an array element that doesn't exist.\r\n     *\r\n     * @method Phaser.Textures.CanvasTexture#getPixels\r\n     * @since 3.16.0\r\n     * \r\n     * @param {integer} [x=0] - The x coordinate of the top-left of the region. Must lay within the dimensions of this CanvasTexture and be an integer.\r\n     * @param {integer} [y=0] - The y coordinate of the top-left of the region. Must lay within the dimensions of this CanvasTexture and be an integer.\r\n     * @param {integer} [width] - The width of the region to get. Must be an integer. Defaults to the canvas width if not given.\r\n     * @param {integer} [height] - The height of the region to get. Must be an integer. If not given will be set to the `width`.\r\n     * \r\n     * @return {Phaser.Types.Textures.PixelConfig[][]} A 2d array of Pixel objects.\r\n     */\r\n    getPixels: function (x, y, width, height)\r\n    {\r\n        if (x === undefined) { x = 0; }\r\n        if (y === undefined) { y = 0; }\r\n        if (width === undefined) { width = this.width; }\r\n        if (height === undefined) { height = width; }\r\n\r\n        x = Math.abs(Math.round(x));\r\n        y = Math.abs(Math.round(y));\r\n\r\n        var left = Clamp(x, 0, this.width);\r\n        var right = Clamp(x + width, 0, this.width);\r\n        var top = Clamp(y, 0, this.height);\r\n        var bottom = Clamp(y + height, 0, this.height);\r\n\r\n        var pixel = new Color();\r\n\r\n        var out = [];\r\n\r\n        for (var py = top; py < bottom; py++)\r\n        {\r\n            var row = [];\r\n\r\n            for (var px = left; px < right; px++)\r\n            {\r\n                pixel = this.getPixel(px, py, pixel);\r\n\r\n                row.push({ x: px, y: py, color: pixel.color, alpha: pixel.alphaGL });\r\n            }\r\n\r\n            out.push(row);\r\n        }\r\n\r\n        return out;\r\n    },\r\n\r\n    /**\r\n     * Returns the Image Data index for the given pixel in this CanvasTexture.\r\n     *\r\n     * The index can be used to read directly from the `this.data` array.\r\n     *\r\n     * The index points to the red value in the array. The subsequent 3 indexes\r\n     * point to green, blue and alpha respectively.\r\n     *\r\n     * @method Phaser.Textures.CanvasTexture#getIndex\r\n     * @since 3.16.0\r\n     * \r\n     * @param {integer} x - The x coordinate of the pixel to get. Must lay within the dimensions of this CanvasTexture and be an integer.\r\n     * @param {integer} y - The y coordinate of the pixel to get. Must lay within the dimensions of this CanvasTexture and be an integer.\r\n     * \r\n     * @return {integer} \r\n     */\r\n    getIndex: function (x, y)\r\n    {\r\n        x = Math.abs(Math.round(x));\r\n        y = Math.abs(Math.round(y));\r\n\r\n        if (x < this.width && y < this.height)\r\n        {\r\n            return (x + y * this.width) * 4;\r\n        }\r\n        else\r\n        {\r\n            return -1;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * This should be called manually if you are running under WebGL.\r\n     * It will refresh the WebGLTexture from the Canvas source. Only call this if you know that the\r\n     * canvas has changed, as there is a significant GPU texture allocation cost involved in doing so.\r\n     *\r\n     * @method Phaser.Textures.CanvasTexture#refresh\r\n     * @since 3.7.0\r\n     *\r\n     * @return {Phaser.Textures.CanvasTexture} This CanvasTexture.\r\n     */\r\n    refresh: function ()\r\n    {\r\n        this._source.update();\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Gets the Canvas Element.\r\n     *\r\n     * @method Phaser.Textures.CanvasTexture#getCanvas\r\n     * @since 3.7.0\r\n     *\r\n     * @return {HTMLCanvasElement} The Canvas DOM element this texture is using.\r\n     */\r\n    getCanvas: function ()\r\n    {\r\n        return this.canvas;\r\n    },\r\n\r\n    /**\r\n     * Gets the 2D Canvas Rendering Context.\r\n     *\r\n     * @method Phaser.Textures.CanvasTexture#getContext\r\n     * @since 3.7.0\r\n     *\r\n     * @return {CanvasRenderingContext2D} The Canvas Rendering Context this texture is using.\r\n     */\r\n    getContext: function ()\r\n    {\r\n        return this.context;\r\n    },\r\n\r\n    /**\r\n     * Clears the given region of this Canvas Texture, resetting it back to transparent.\r\n     * If no region is given, the whole Canvas Texture is cleared.\r\n     *\r\n     * @method Phaser.Textures.CanvasTexture#clear\r\n     * @since 3.7.0\r\n     * \r\n     * @param {integer} [x=0] - The x coordinate of the top-left of the region to clear.\r\n     * @param {integer} [y=0] - The y coordinate of the top-left of the region to clear.\r\n     * @param {integer} [width] - The width of the region.\r\n     * @param {integer} [height] - The height of the region.\r\n     *\r\n     * @return {Phaser.Textures.CanvasTexture} The Canvas Texture.\r\n     */\r\n    clear: function (x, y, width, height)\r\n    {\r\n        if (x === undefined) { x = 0; }\r\n        if (y === undefined) { y = 0; }\r\n        if (width === undefined) { width = this.width; }\r\n        if (height === undefined) { height = this.height; }\r\n\r\n        this.context.clearRect(x, y, width, height);\r\n\r\n        return this.update();\r\n    },\r\n\r\n    /**\r\n     * Changes the size of this Canvas Texture.\r\n     *\r\n     * @method Phaser.Textures.CanvasTexture#setSize\r\n     * @since 3.7.0\r\n     *\r\n     * @param {integer} width - The new width of the Canvas.\r\n     * @param {integer} [height] - The new height of the Canvas. If not given it will use the width as the height.\r\n     *\r\n     * @return {Phaser.Textures.CanvasTexture} The Canvas Texture.\r\n     */\r\n    setSize: function (width, height)\r\n    {\r\n        if (height === undefined) { height = width; }\r\n\r\n        if (width !== this.width || height !== this.height)\r\n        {\r\n            //  Update the Canvas\r\n            this.canvas.width = width;\r\n            this.canvas.height = height;\r\n\r\n            //  Update the Texture Source\r\n            this._source.width = width;\r\n            this._source.height = height;\r\n            this._source.isPowerOf2 = IsSizePowerOfTwo(width, height);\r\n\r\n            //  Update the Frame\r\n            this.frames['__BASE'].setSize(width, height, 0, 0);\r\n\r\n            //  Update this\r\n            this.width = width;\r\n            this.height = height;\r\n\r\n            this.refresh();\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Destroys this Texture and releases references to its sources and frames.\r\n     *\r\n     * @method Phaser.Textures.CanvasTexture#destroy\r\n     * @since 3.16.0\r\n     */\r\n    destroy: function ()\r\n    {\r\n        Texture.prototype.destroy.call(this);\r\n\r\n        this._source = null;\r\n        this.canvas = null;\r\n        this.context = null;\r\n        this.imageData = null;\r\n        this.data = null;\r\n        this.pixels = null;\r\n        this.buffer = null;\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = CanvasTexture;\r\n"},"lineCount":630}},"error":null,"hash":"630682d5e50b4a3a46cbbe961c3fc0b7","cacheData":{"env":{}}}