{"id":"y6FG","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000}],"generated":{"js":"var o={setImmovable:function(o){return void 0===o&&(o=!0),this.body.immovable=o,this}};module.exports=o;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/physics/arcade/components/Immovable.js","original":{"line":13,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/physics/arcade/components/Immovable.js","original":{"line":13,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/physics/arcade/components/Immovable.js","original":{"line":13,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/physics/arcade/components/Immovable.js","original":{"line":25,"column":0},"generated":{"line":1,"column":7}},{"source":"../node_modules/phaser/src/physics/arcade/components/Immovable.js","original":{"line":25,"column":0},"generated":{"line":1,"column":20}},{"source":"../node_modules/phaser/src/physics/arcade/components/Immovable.js","original":{"line":25,"column":0},"generated":{"line":1,"column":29}},{"source":"../node_modules/phaser/src/physics/arcade/components/Immovable.js","original":{"line":31,"column":0},"generated":{"line":1,"column":32}},{"source":"../node_modules/phaser/src/physics/arcade/components/Immovable.js","original":{"line":27,"column":0},"generated":{"line":1,"column":44}},{"source":"../node_modules/phaser/src/physics/arcade/components/Immovable.js","original":{"line":27,"column":0},"generated":{"line":1,"column":48}},{"source":"../node_modules/phaser/src/physics/arcade/components/Immovable.js","original":{"line":27,"column":0},"generated":{"line":1,"column":52}},{"source":"../node_modules/phaser/src/physics/arcade/components/Immovable.js","original":{"line":27,"column":0},"generated":{"line":1,"column":55}},{"source":"../node_modules/phaser/src/physics/arcade/components/Immovable.js","original":{"line":29,"column":0},"generated":{"line":1,"column":58}},{"source":"../node_modules/phaser/src/physics/arcade/components/Immovable.js","original":{"line":29,"column":0},"generated":{"line":1,"column":63}},{"source":"../node_modules/phaser/src/physics/arcade/components/Immovable.js","original":{"line":29,"column":0},"generated":{"line":1,"column":68}},{"source":"../node_modules/phaser/src/physics/arcade/components/Immovable.js","original":{"line":29,"column":0},"generated":{"line":1,"column":78}},{"source":"../node_modules/phaser/src/physics/arcade/components/Immovable.js","original":{"line":31,"column":0},"generated":{"line":1,"column":80}},{"source":"../node_modules/phaser/src/physics/arcade/components/Immovable.js","original":{"line":36,"column":0},"generated":{"line":1,"column":87}},{"source":"../node_modules/phaser/src/physics/arcade/components/Immovable.js","original":{"line":36,"column":0},"generated":{"line":1,"column":94}},{"source":"../node_modules/phaser/src/physics/arcade/components/Immovable.js","original":{"line":36,"column":0},"generated":{"line":1,"column":102}}],"sources":{"../node_modules/phaser/src/physics/arcade/components/Immovable.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Provides methods used for setting the immovable properties of an Arcade Physics Body.\r\n *\r\n * @namespace Phaser.Physics.Arcade.Components.Immovable\r\n * @since 3.0.0\r\n */\r\nvar Immovable = {\r\n\r\n    /**\r\n     * Sets Whether this Body can be moved by collisions with another Body.\r\n     *\r\n     * @method Phaser.Physics.Arcade.Components.Immovable#setImmovable\r\n     * @since 3.0.0\r\n     *\r\n     * @param {boolean} [value=true] - Sets if this body can be moved by collisions with another Body.\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    setImmovable: function (value)\r\n    {\r\n        if (value === undefined) { value = true; }\r\n\r\n        this.body.immovable = value;\r\n\r\n        return this;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Immovable;\r\n"},"lineCount":null}},"error":null,"hash":"a3062e2498c0867643b2d6a8d8e12091","cacheData":{"env":{}}}