{"id":"HFXd","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000},{"name":"./Ellipse","loc":{"line":7,"column":22},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/geom/ellipse/Clone.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/geom/ellipse/Ellipse.js"}],"generated":{"js":"var e=require(\"./Ellipse\"),r=function(r){return new e(r.x,r.y,r.width,r.height)};module.exports=r;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/geom/ellipse/Clone.js","original":{"line":7,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/geom/ellipse/Clone.js","original":{"line":7,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/geom/ellipse/Clone.js","original":{"line":7,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/geom/ellipse/Clone.js","original":{"line":7,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/phaser/src/geom/ellipse/Clone.js","original":{"line":19,"column":0},"generated":{"line":1,"column":27}},{"source":"../node_modules/phaser/src/geom/ellipse/Clone.js","original":{"line":19,"column":0},"generated":{"line":1,"column":29}},{"source":"../node_modules/phaser/src/geom/ellipse/Clone.js","original":{"line":19,"column":0},"generated":{"line":1,"column":38}},{"source":"../node_modules/phaser/src/geom/ellipse/Clone.js","original":{"line":21,"column":0},"generated":{"line":1,"column":41}},{"source":"../node_modules/phaser/src/geom/ellipse/Clone.js","original":{"line":21,"column":0},"generated":{"line":1,"column":48}},{"source":"../node_modules/phaser/src/geom/ellipse/Clone.js","original":{"line":21,"column":0},"generated":{"line":1,"column":52}},{"source":"../node_modules/phaser/src/geom/ellipse/Clone.js","original":{"line":21,"column":0},"generated":{"line":1,"column":54}},{"source":"../node_modules/phaser/src/geom/ellipse/Clone.js","original":{"line":21,"column":0},"generated":{"line":1,"column":56}},{"source":"../node_modules/phaser/src/geom/ellipse/Clone.js","original":{"line":21,"column":0},"generated":{"line":1,"column":58}},{"source":"../node_modules/phaser/src/geom/ellipse/Clone.js","original":{"line":21,"column":0},"generated":{"line":1,"column":60}},{"source":"../node_modules/phaser/src/geom/ellipse/Clone.js","original":{"line":21,"column":0},"generated":{"line":1,"column":62}},{"source":"../node_modules/phaser/src/geom/ellipse/Clone.js","original":{"line":21,"column":0},"generated":{"line":1,"column":64}},{"source":"../node_modules/phaser/src/geom/ellipse/Clone.js","original":{"line":21,"column":0},"generated":{"line":1,"column":70}},{"source":"../node_modules/phaser/src/geom/ellipse/Clone.js","original":{"line":21,"column":0},"generated":{"line":1,"column":72}},{"source":"../node_modules/phaser/src/geom/ellipse/Clone.js","original":{"line":24,"column":0},"generated":{"line":1,"column":81}},{"source":"../node_modules/phaser/src/geom/ellipse/Clone.js","original":{"line":24,"column":0},"generated":{"line":1,"column":88}},{"source":"../node_modules/phaser/src/geom/ellipse/Clone.js","original":{"line":24,"column":0},"generated":{"line":1,"column":96}}],"sources":{"../node_modules/phaser/src/geom/ellipse/Clone.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Ellipse = require('./Ellipse');\r\n\r\n/**\r\n * Creates a new Ellipse instance based on the values contained in the given source.\r\n *\r\n * @function Phaser.Geom.Ellipse.Clone\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Ellipse} source - The Ellipse to be cloned. Can be an instance of an Ellipse or a ellipse-like object, with x, y, width and height properties.\r\n *\r\n * @return {Phaser.Geom.Ellipse} A clone of the source Ellipse.\r\n */\r\nvar Clone = function (source)\r\n{\r\n    return new Ellipse(source.x, source.y, source.width, source.height);\r\n};\r\n\r\nmodule.exports = Clone;\r\n"},"lineCount":null}},"error":null,"hash":"dea2a68cb6c21c4891ddae85fcd6cbb2","cacheData":{"env":{}}}