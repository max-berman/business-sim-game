{"id":"UIVl","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000}],"generated":{"js":"var e=function(e,d,l){var i=l.collideIndexes.indexOf(e);d&&-1===i?l.collideIndexes.push(e):d||-1===i||l.collideIndexes.splice(i,1)};module.exports=e;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/tilemaps/components/SetLayerCollisionIndex.js","original":{"line":19,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/tilemaps/components/SetLayerCollisionIndex.js","original":{"line":19,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/tilemaps/components/SetLayerCollisionIndex.js","original":{"line":19,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/tilemaps/components/SetLayerCollisionIndex.js","original":{"line":19,"column":0},"generated":{"line":1,"column":15}},{"source":"../node_modules/phaser/src/tilemaps/components/SetLayerCollisionIndex.js","original":{"line":19,"column":0},"generated":{"line":1,"column":17}},{"source":"../node_modules/phaser/src/tilemaps/components/SetLayerCollisionIndex.js","original":{"line":19,"column":0},"generated":{"line":1,"column":19}},{"source":"../node_modules/phaser/src/tilemaps/components/SetLayerCollisionIndex.js","original":{"line":21,"column":0},"generated":{"line":1,"column":22}},{"source":"../node_modules/phaser/src/tilemaps/components/SetLayerCollisionIndex.js","original":{"line":21,"column":0},"generated":{"line":1,"column":26}},{"source":"../node_modules/phaser/src/tilemaps/components/SetLayerCollisionIndex.js","original":{"line":21,"column":0},"generated":{"line":1,"column":28}},{"source":"../node_modules/phaser/src/tilemaps/components/SetLayerCollisionIndex.js","original":{"line":21,"column":0},"generated":{"line":1,"column":30}},{"source":"../node_modules/phaser/src/tilemaps/components/SetLayerCollisionIndex.js","original":{"line":21,"column":0},"generated":{"line":1,"column":45}},{"source":"../node_modules/phaser/src/tilemaps/components/SetLayerCollisionIndex.js","original":{"line":21,"column":0},"generated":{"line":1,"column":53}},{"source":"../node_modules/phaser/src/tilemaps/components/SetLayerCollisionIndex.js","original":{"line":23,"column":0},"generated":{"line":1,"column":56}},{"source":"../node_modules/phaser/src/tilemaps/components/SetLayerCollisionIndex.js","original":{"line":23,"column":0},"generated":{"line":1,"column":60}},{"source":"../node_modules/phaser/src/tilemaps/components/SetLayerCollisionIndex.js","original":{"line":23,"column":0},"generated":{"line":1,"column":64}},{"source":"../node_modules/phaser/src/tilemaps/components/SetLayerCollisionIndex.js","original":{"line":25,"column":0},"generated":{"line":1,"column":66}},{"source":"../node_modules/phaser/src/tilemaps/components/SetLayerCollisionIndex.js","original":{"line":25,"column":0},"generated":{"line":1,"column":68}},{"source":"../node_modules/phaser/src/tilemaps/components/SetLayerCollisionIndex.js","original":{"line":25,"column":0},"generated":{"line":1,"column":83}},{"source":"../node_modules/phaser/src/tilemaps/components/SetLayerCollisionIndex.js","original":{"line":25,"column":0},"generated":{"line":1,"column":88}},{"source":"../node_modules/phaser/src/tilemaps/components/SetLayerCollisionIndex.js","original":{"line":27,"column":0},"generated":{"line":1,"column":91}},{"source":"../node_modules/phaser/src/tilemaps/components/SetLayerCollisionIndex.js","original":{"line":27,"column":0},"generated":{"line":1,"column":95}},{"source":"../node_modules/phaser/src/tilemaps/components/SetLayerCollisionIndex.js","original":{"line":27,"column":0},"generated":{"line":1,"column":99}},{"source":"../node_modules/phaser/src/tilemaps/components/SetLayerCollisionIndex.js","original":{"line":29,"column":0},"generated":{"line":1,"column":102}},{"source":"../node_modules/phaser/src/tilemaps/components/SetLayerCollisionIndex.js","original":{"line":29,"column":0},"generated":{"line":1,"column":104}},{"source":"../node_modules/phaser/src/tilemaps/components/SetLayerCollisionIndex.js","original":{"line":29,"column":0},"generated":{"line":1,"column":119}},{"source":"../node_modules/phaser/src/tilemaps/components/SetLayerCollisionIndex.js","original":{"line":29,"column":0},"generated":{"line":1,"column":126}},{"source":"../node_modules/phaser/src/tilemaps/components/SetLayerCollisionIndex.js","original":{"line":29,"column":0},"generated":{"line":1,"column":128}},{"source":"../node_modules/phaser/src/tilemaps/components/SetLayerCollisionIndex.js","original":{"line":33,"column":0},"generated":{"line":1,"column":132}},{"source":"../node_modules/phaser/src/tilemaps/components/SetLayerCollisionIndex.js","original":{"line":33,"column":0},"generated":{"line":1,"column":139}},{"source":"../node_modules/phaser/src/tilemaps/components/SetLayerCollisionIndex.js","original":{"line":33,"column":0},"generated":{"line":1,"column":147}}],"sources":{"../node_modules/phaser/src/tilemaps/components/SetLayerCollisionIndex.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Internally used method to keep track of the tile indexes that collide within a layer. This\r\n * updates LayerData.collideIndexes to either contain or not contain the given `tileIndex`.\r\n *\r\n * @function Phaser.Tilemaps.Components.SetLayerCollisionIndex\r\n * @private\r\n * @since 3.0.0\r\n *\r\n * @param {integer} tileIndex - The tile index to set the collision boolean for.\r\n * @param {boolean} [collides=true] - Should the tile index collide or not?\r\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\r\n */\r\nvar SetLayerCollisionIndex = function (tileIndex, collides, layer)\r\n{\r\n    var loc = layer.collideIndexes.indexOf(tileIndex);\r\n\r\n    if (collides && loc === -1)\r\n    {\r\n        layer.collideIndexes.push(tileIndex);\r\n    }\r\n    else if (!collides && loc !== -1)\r\n    {\r\n        layer.collideIndexes.splice(loc, 1);\r\n    }\r\n};\r\n\r\nmodule.exports = SetLayerCollisionIndex;\r\n"},"lineCount":null}},"error":null,"hash":"421e353d896e010d6bfd8653001e07c5","cacheData":{"env":{}}}