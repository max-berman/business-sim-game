{"id":"deeB","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000},{"name":"../../utils/Class","loc":{"line":7,"column":20},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/utils/Class.js"},{"name":"../FileTypesManager","loc":{"line":8,"column":31},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/loader/FileTypesManager.js"},{"name":"./JSONFile.js","loc":{"line":9,"column":23},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/loader/filetypes/JSONFile.js"},{"name":"../../tilemaps/Formats","loc":{"line":10,"column":30},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/tilemaps/Formats.js"}],"generated":{"js":"var e=require(\"../../utils/Class\"),i=require(\"../FileTypesManager\"),t=require(\"./JSONFile.js\"),a=require(\"../../tilemaps/Formats\"),r=new e({Extends:t,initialize:function(e,i,a,r){t.call(this,e,i,a,r),this.type=\"tilemapJSON\",this.cache=e.cacheManager.tilemap},addToCache:function(){var e={format:a.TILED_JSON,data:this.data};this.cache.add(this.key,e),this.pendingDestroy(e)}});i.register(\"tilemapTiledJSON\",function(e,i,t){if(Array.isArray(e))for(var a=0;a<e.length;a++)this.addFile(new r(this,e[a]));else this.addFile(new r(this,e,i,t));return this}),module.exports=r;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":7,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":7,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":7,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":7,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":8,"column":0},"generated":{"line":1,"column":35}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":8,"column":0},"generated":{"line":1,"column":37}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":8,"column":0},"generated":{"line":1,"column":45}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":9,"column":0},"generated":{"line":1,"column":68}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":9,"column":0},"generated":{"line":1,"column":70}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":9,"column":0},"generated":{"line":1,"column":78}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":10,"column":0},"generated":{"line":1,"column":95}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":10,"column":0},"generated":{"line":1,"column":97}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":10,"column":0},"generated":{"line":1,"column":105}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":31,"column":0},"generated":{"line":1,"column":131}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":31,"column":0},"generated":{"line":1,"column":133}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":31,"column":0},"generated":{"line":1,"column":137}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":31,"column":0},"generated":{"line":1,"column":139}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":33,"column":0},"generated":{"line":1,"column":140}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":33,"column":0},"generated":{"line":1,"column":148}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":35,"column":0},"generated":{"line":1,"column":150}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":37,"column":0},"generated":{"line":1,"column":161}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":37,"column":0},"generated":{"line":1,"column":170}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":37,"column":0},"generated":{"line":1,"column":172}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":37,"column":0},"generated":{"line":1,"column":174}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":37,"column":0},"generated":{"line":1,"column":176}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":39,"column":0},"generated":{"line":1,"column":179}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":39,"column":0},"generated":{"line":1,"column":181}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":39,"column":0},"generated":{"line":1,"column":186}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":39,"column":0},"generated":{"line":1,"column":191}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":39,"column":0},"generated":{"line":1,"column":193}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":39,"column":0},"generated":{"line":1,"column":195}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":39,"column":0},"generated":{"line":1,"column":197}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":41,"column":0},"generated":{"line":1,"column":200}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":41,"column":0},"generated":{"line":1,"column":205}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":41,"column":0},"generated":{"line":1,"column":210}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":43,"column":0},"generated":{"line":1,"column":224}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":43,"column":0},"generated":{"line":1,"column":229}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":43,"column":0},"generated":{"line":1,"column":235}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":43,"column":0},"generated":{"line":1,"column":237}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":43,"column":0},"generated":{"line":1,"column":250}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":52,"column":0},"generated":{"line":1,"column":259}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":52,"column":0},"generated":{"line":1,"column":270}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":54,"column":0},"generated":{"line":1,"column":281}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":54,"column":0},"generated":{"line":1,"column":285}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":54,"column":0},"generated":{"line":1,"column":287}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":54,"column":0},"generated":{"line":1,"column":288}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":54,"column":0},"generated":{"line":1,"column":295}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":54,"column":0},"generated":{"line":1,"column":297}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":54,"column":0},"generated":{"line":1,"column":308}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":54,"column":0},"generated":{"line":1,"column":313}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":54,"column":0},"generated":{"line":1,"column":318}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":56,"column":0},"generated":{"line":1,"column":324}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":56,"column":0},"generated":{"line":1,"column":329}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":56,"column":0},"generated":{"line":1,"column":335}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":56,"column":0},"generated":{"line":1,"column":339}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":56,"column":0},"generated":{"line":1,"column":344}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":56,"column":0},"generated":{"line":1,"column":348}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":58,"column":0},"generated":{"line":1,"column":351}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":58,"column":0},"generated":{"line":1,"column":356}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":58,"column":0},"generated":{"line":1,"column":371}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":132,"column":0},"generated":{"line":1,"column":377}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":132,"column":0},"generated":{"line":1,"column":379}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":132,"column":0},"generated":{"line":1,"column":388}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":132,"column":0},"generated":{"line":1,"column":407}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":132,"column":0},"generated":{"line":1,"column":416}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":132,"column":0},"generated":{"line":1,"column":418}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":132,"column":0},"generated":{"line":1,"column":420}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":134,"column":0},"generated":{"line":1,"column":423}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":134,"column":0},"generated":{"line":1,"column":426}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":134,"column":0},"generated":{"line":1,"column":432}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":134,"column":0},"generated":{"line":1,"column":440}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":136,"column":0},"generated":{"line":1,"column":443}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":136,"column":0},"generated":{"line":1,"column":447}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":136,"column":0},"generated":{"line":1,"column":451}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":136,"column":0},"generated":{"line":1,"column":453}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":136,"column":0},"generated":{"line":1,"column":455}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":136,"column":0},"generated":{"line":1,"column":457}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":136,"column":0},"generated":{"line":1,"column":459}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":136,"column":0},"generated":{"line":1,"column":466}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":139,"column":0},"generated":{"line":1,"column":470}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":139,"column":0},"generated":{"line":1,"column":475}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":139,"column":0},"generated":{"line":1,"column":483}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":139,"column":0},"generated":{"line":1,"column":487}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":139,"column":0},"generated":{"line":1,"column":489}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":139,"column":0},"generated":{"line":1,"column":494}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":139,"column":0},"generated":{"line":1,"column":496}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":144,"column":0},"generated":{"line":1,"column":506}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":144,"column":0},"generated":{"line":1,"column":511}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":144,"column":0},"generated":{"line":1,"column":519}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":144,"column":0},"generated":{"line":1,"column":523}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":144,"column":0},"generated":{"line":1,"column":525}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":144,"column":0},"generated":{"line":1,"column":530}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":144,"column":0},"generated":{"line":1,"column":532}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":144,"column":0},"generated":{"line":1,"column":534}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":147,"column":0},"generated":{"line":1,"column":538}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":147,"column":0},"generated":{"line":1,"column":545}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":150,"column":0},"generated":{"line":1,"column":552}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":150,"column":0},"generated":{"line":1,"column":559}},{"source":"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js","original":{"line":150,"column":0},"generated":{"line":1,"column":567}}],"sources":{"../node_modules/phaser/src/loader/filetypes/TilemapJSONFile.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar FileTypesManager = require('../FileTypesManager');\r\nvar JSONFile = require('./JSONFile.js');\r\nvar TILEMAP_FORMATS = require('../../tilemaps/Formats');\r\n\r\n/**\r\n * @classdesc\r\n * A single Tiled Tilemap JSON File suitable for loading by the Loader.\r\n *\r\n * These are created when you use the Phaser.Loader.LoaderPlugin#tilemapTiledJSON method and are not typically created directly.\r\n *\r\n * For documentation about what all the arguments and configuration options mean please see Phaser.Loader.LoaderPlugin#tilemapTiledJSON.\r\n *\r\n * @class TilemapJSONFile\r\n * @extends Phaser.Loader.File\r\n * @memberof Phaser.Loader.FileTypes\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Loader.LoaderPlugin} loader - A reference to the Loader that is responsible for this file.\r\n * @param {(string|Phaser.Types.Loader.FileTypes.TilemapJSONFileConfig)} key - The key to use for this file, or a file configuration object.\r\n * @param {string} [url] - The absolute or relative URL to load this file from. If undefined or `null` it will be set to `<key>.json`, i.e. if `key` was \"alien\" then the URL will be \"alien.json\".\r\n * @param {Phaser.Types.Loader.XHRSettingsObject} [xhrSettings] - Extra XHR Settings specifically for this file.\r\n */\r\nvar TilemapJSONFile = new Class({\r\n\r\n    Extends: JSONFile,\r\n\r\n    initialize:\r\n\r\n    function TilemapJSONFile (loader, key, url, xhrSettings)\r\n    {\r\n        JSONFile.call(this, loader, key, url, xhrSettings);\r\n\r\n        this.type = 'tilemapJSON';\r\n\r\n        this.cache = loader.cacheManager.tilemap;\r\n    },\r\n\r\n    /**\r\n     * Adds this file to its target cache upon successful loading and processing.\r\n     *\r\n     * @method Phaser.Loader.FileTypes.TilemapJSONFile#addToCache\r\n     * @since 3.7.0\r\n     */\r\n    addToCache: function ()\r\n    {\r\n        var tiledata = { format: TILEMAP_FORMATS.TILED_JSON, data: this.data };\r\n\r\n        this.cache.add(this.key, tiledata);\r\n\r\n        this.pendingDestroy(tiledata);\r\n    }\r\n\r\n});\r\n\r\n/**\r\n * Adds a Tiled JSON Tilemap file, or array of map files, to the current load queue.\r\n *\r\n * You can call this method from within your Scene's `preload`, along with any other files you wish to load:\r\n *\r\n * ```javascript\r\n * function preload ()\r\n * {\r\n *     this.load.tilemapTiledJSON('level1', 'maps/Level1.json');\r\n * }\r\n * ```\r\n *\r\n * The Tilemap data is created using the Tiled Map Editor and selecting JSON as the export format.\r\n *\r\n * The file is **not** loaded right away. It is added to a queue ready to be loaded either when the loader starts,\r\n * or if it's already running, when the next free load slot becomes available. This happens automatically if you\r\n * are calling this from within the Scene's `preload` method, or a related callback. Because the file is queued\r\n * it means you cannot use the file immediately after calling this method, but must wait for the file to complete.\r\n * The typical flow for a Phaser Scene is that you load assets in the Scene's `preload` method and then when the\r\n * Scene's `create` method is called you are guaranteed that all of those assets are ready for use and have been\r\n * loaded.\r\n *\r\n * The key must be a unique String. It is used to add the file to the global Tilemap Cache upon a successful load.\r\n * The key should be unique both in terms of files being loaded and files already present in the Tilemap Cache.\r\n * Loading a file using a key that is already taken will result in a warning. If you wish to replace an existing file\r\n * then remove it from the Text Cache first, before loading a new one.\r\n *\r\n * Instead of passing arguments you can pass a configuration object, such as:\r\n *\r\n * ```javascript\r\n * this.load.tilemapTiledJSON({\r\n *     key: 'level1',\r\n *     url: 'maps/Level1.json'\r\n * });\r\n * ```\r\n *\r\n * See the documentation for `Phaser.Types.Loader.FileTypes.TilemapJSONFileConfig` for more details.\r\n *\r\n * Once the file has finished loading you can access it from its Cache using its key:\r\n *\r\n * ```javascript\r\n * this.load.tilemapTiledJSON('level1', 'maps/Level1.json');\r\n * // and later in your game ...\r\n * var map = this.make.tilemap({ key: 'level1' });\r\n * ```\r\n *\r\n * If you have specified a prefix in the loader, via `Loader.setPrefix` then this value will be prepended to this files\r\n * key. For example, if the prefix was `LEVEL1.` and the key was `Story` the final key will be `LEVEL1.Story` and\r\n * this is what you would use to retrieve the text from the Tilemap Cache.\r\n *\r\n * The URL can be relative or absolute. If the URL is relative the `Loader.baseURL` and `Loader.path` values will be prepended to it.\r\n *\r\n * If the URL isn't specified the Loader will take the key and create a filename from that. For example if the key is \"level\"\r\n * and no URL is given then the Loader will set the URL to be \"level.json\". It will always add `.json` as the extension, although\r\n * this can be overridden if using an object instead of method arguments. If you do not desire this action then provide a URL.\r\n *\r\n * Note: The ability to load this type of file will only be available if the Tilemap JSON File type has been built into Phaser.\r\n * It is available in the default build but can be excluded from custom builds.\r\n *\r\n * @method Phaser.Loader.LoaderPlugin#tilemapTiledJSON\r\n * @fires Phaser.Loader.LoaderPlugin#ADD\r\n * @since 3.0.0\r\n *\r\n * @param {(string|Phaser.Types.Loader.FileTypes.TilemapJSONFileConfig|Phaser.Types.Loader.FileTypes.TilemapJSONFileConfig[])} key - The key to use for this file, or a file configuration object, or array of them.\r\n * @param {string} [url] - The absolute or relative URL to load this file from. If undefined or `null` it will be set to `<key>.json`, i.e. if `key` was \"alien\" then the URL will be \"alien.json\".\r\n * @param {Phaser.Types.Loader.XHRSettingsObject} [xhrSettings] - An XHR Settings configuration object. Used in replacement of the Loaders default XHR Settings.\r\n *\r\n * @return {this} The Loader instance.\r\n */\r\nFileTypesManager.register('tilemapTiledJSON', function (key, url, xhrSettings)\r\n{\r\n    if (Array.isArray(key))\r\n    {\r\n        for (var i = 0; i < key.length; i++)\r\n        {\r\n            //  If it's an array it has to be an array of Objects, so we get everything out of the 'key' object\r\n            this.addFile(new TilemapJSONFile(this, key[i]));\r\n        }\r\n    }\r\n    else\r\n    {\r\n        this.addFile(new TilemapJSONFile(this, key, url, xhrSettings));\r\n    }\r\n\r\n    return this;\r\n});\r\n\r\nmodule.exports = TilemapJSONFile;\r\n"},"lineCount":null}},"error":null,"hash":"467b71cbc2f8757df377c5b455089f9f","cacheData":{"env":{}}}