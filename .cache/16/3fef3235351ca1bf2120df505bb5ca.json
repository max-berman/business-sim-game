{"id":"akJ4","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000}],"generated":{"js":"var s={setSensor:function(s){return this.body.isSensor=s,this},isSensor:function(){return this.body.isSensor}};module.exports=s;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/physics/matter-js/components/Sensor.js","original":{"line":13,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Sensor.js","original":{"line":13,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Sensor.js","original":{"line":13,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Sensor.js","original":{"line":26,"column":0},"generated":{"line":1,"column":7}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Sensor.js","original":{"line":26,"column":0},"generated":{"line":1,"column":17}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Sensor.js","original":{"line":26,"column":0},"generated":{"line":1,"column":26}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Sensor.js","original":{"line":30,"column":0},"generated":{"line":1,"column":29}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Sensor.js","original":{"line":28,"column":0},"generated":{"line":1,"column":36}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Sensor.js","original":{"line":28,"column":0},"generated":{"line":1,"column":41}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Sensor.js","original":{"line":28,"column":0},"generated":{"line":1,"column":46}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Sensor.js","original":{"line":28,"column":0},"generated":{"line":1,"column":55}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Sensor.js","original":{"line":30,"column":0},"generated":{"line":1,"column":57}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Sensor.js","original":{"line":41,"column":0},"generated":{"line":1,"column":63}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Sensor.js","original":{"line":41,"column":0},"generated":{"line":1,"column":72}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Sensor.js","original":{"line":43,"column":0},"generated":{"line":1,"column":83}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Sensor.js","original":{"line":43,"column":0},"generated":{"line":1,"column":90}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Sensor.js","original":{"line":43,"column":0},"generated":{"line":1,"column":95}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Sensor.js","original":{"line":43,"column":0},"generated":{"line":1,"column":100}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Sensor.js","original":{"line":48,"column":0},"generated":{"line":1,"column":111}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Sensor.js","original":{"line":48,"column":0},"generated":{"line":1,"column":118}},{"source":"../node_modules/phaser/src/physics/matter-js/components/Sensor.js","original":{"line":48,"column":0},"generated":{"line":1,"column":126}}],"sources":{"../node_modules/phaser/src/physics/matter-js/components/Sensor.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Enables a Matter-enabled Game Object to be a sensor. Should be used as a mixin and not directly.\r\n *\r\n * @namespace Phaser.Physics.Matter.Components.Sensor\r\n * @since 3.0.0\r\n */\r\nvar Sensor = {\r\n\r\n    /**\r\n     * Set the body belonging to this Game Object to be a sensor.\r\n     * Sensors trigger collision events, but don't react with colliding body physically.\r\n     *\r\n     * @method Phaser.Physics.Matter.Components.Sensor#setSensor\r\n     * @since 3.0.0\r\n     *\r\n     * @param {boolean} value - `true` to set the body as a sensor, or `false` to disable it.\r\n     *\r\n     * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n     */\r\n    setSensor: function (value)\r\n    {\r\n        this.body.isSensor = value;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Is the body belonging to this Game Object a sensor or not?\r\n     *\r\n     * @method Phaser.Physics.Matter.Components.Sensor#isSensor\r\n     * @since 3.0.0\r\n     *\r\n     * @return {boolean} `true` if the body is a sensor, otherwise `false`.\r\n     */\r\n    isSensor: function ()\r\n    {\r\n        return this.body.isSensor;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Sensor;\r\n"},"lineCount":null}},"error":null,"hash":"2f595b24f60c60797f4201dac16b14cb","cacheData":{"env":{}}}