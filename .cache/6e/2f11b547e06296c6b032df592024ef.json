{"id":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591206076000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000},{"name":"../../math/distance/DistanceBetweenPoints","loc":{"line":7,"column":36},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/geom/line/GetEasedPoints.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/math/distance/DistanceBetweenPoints.js"},{"name":"../../tweens/builders/GetEaseFunction","loc":{"line":8,"column":30},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/geom/line/GetEasedPoints.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/tweens/builders/GetEaseFunction.js"},{"name":"../point/Point","loc":{"line":9,"column":20},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/geom/line/GetEasedPoints.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/geom/point/Point.js"}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar DistanceBetweenPoints = require('../../math/distance/DistanceBetweenPoints');\r\nvar GetEaseFunction = require('../../tweens/builders/GetEaseFunction');\r\nvar Point = require('../point/Point');\r\n\r\n/**\r\n * Returns an array of `quantity` Points where each point is taken from the given Line,\r\n * spaced out according to the ease function specified.\r\n * \r\n * ```javascript\r\n * const line = new Phaser.Geom.Line(100, 300, 700, 300);\r\n * const points = Phaser.Geom.Line.GetEasedPoints(line, 'sine.out', 32)\r\n * ```\r\n * \r\n * In the above example, the `points` array will contain 32 points spread-out across\r\n * the length of `line`, where the position of each point is determined by the `Sine.out`\r\n * ease function.\r\n * \r\n * You can optionally provide a collinear threshold. In this case, the resulting points\r\n * are checked against each other, and if they are `< collinearThreshold` distance apart,\r\n * they are dropped from the results. This can help avoid lots of clustered points at\r\n * far ends of the line with tightly-packed eases such as Quartic. Leave the value set\r\n * to zero to skip this check.\r\n * \r\n * Note that if you provide a collinear threshold, the resulting array may not always\r\n * contain `quantity` points.\r\n *\r\n * @function Phaser.Geom.Line.GetEasedPoints\r\n * @since 3.23.0\r\n *\r\n * @generic {Phaser.Geom.Point[]} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Line} line - The Line object.\r\n * @param {(string|function)} ease - The ease to use. This can be either a string from the EaseMap, or a custom function.\r\n * @param {integer} quantity - The number of points to return. Note that if you provide a `collinearThreshold`, the resulting array may not always contain this number of points.\r\n * @param {number} [collinearThreshold=0] - An optional threshold. The final array is reduced so that each point is spaced out at least this distance apart. This helps reduce clustering in noisey eases.\r\n * @param {number[]} [easeParams] - An optional array of ease parameters to go with the ease.\r\n *\r\n * @return {Phaser.Geom.Point[]} An array of Geom.Points containing the coordinates of the points on the line.\r\n */\r\nvar GetEasedPoints = function (line, ease, quantity, collinearThreshold, easeParams)\r\n{\r\n    if (collinearThreshold === undefined) { collinearThreshold = 0; }\r\n    if (easeParams === undefined) { easeParams = []; }\r\n\r\n    var results = [];\r\n\r\n    var x1 = line.x1;\r\n    var y1 = line.y1;\r\n\r\n    var spaceX = line.x2 - x1;\r\n    var spaceY = line.y2 - y1;\r\n\r\n    var easeFunc = GetEaseFunction(ease, easeParams);\r\n\r\n    var i;\r\n    var v;\r\n    var q = quantity - 1;\r\n\r\n    for (i = 0; i < q; i++)\r\n    {\r\n        v = easeFunc(i / q);\r\n\r\n        results.push(new Point(x1 + (spaceX * v), y1 + (spaceY * v)));\r\n    }\r\n\r\n    //  Always include the end of the line\r\n    v = easeFunc(1);\r\n\r\n    results.push(new Point(x1 + (spaceX * v), y1 + (spaceY * v)));\r\n\r\n    //  Remove collinear parts\r\n    if (collinearThreshold > 0)\r\n    {\r\n        var prevPoint = results[0];\r\n\r\n        //  Store the new results here\r\n        var sortedResults = [ prevPoint ];\r\n\r\n        for (i = 1; i < results.length - 1; i++)\r\n        {\r\n            var point = results[i];\r\n\r\n            if (DistanceBetweenPoints(prevPoint, point) >= collinearThreshold)\r\n            {\r\n                sortedResults.push(point);\r\n                prevPoint = point;\r\n            }\r\n        }\r\n\r\n        //  Top and tail\r\n        var endPoint = results[results.length - 1];\r\n\r\n        if (DistanceBetweenPoints(prevPoint, endPoint) < collinearThreshold)\r\n        {\r\n            sortedResults.pop();\r\n        }\r\n\r\n        sortedResults.push(endPoint);\r\n\r\n        return sortedResults;\r\n    }\r\n    else\r\n    {\r\n        return results;\r\n    }\r\n};\r\n\r\nmodule.exports = GetEasedPoints;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/phaser/src/geom/line/GetEasedPoints.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}}],"sources":{"../node_modules/phaser/src/geom/line/GetEasedPoints.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar DistanceBetweenPoints = require('../../math/distance/DistanceBetweenPoints');\r\nvar GetEaseFunction = require('../../tweens/builders/GetEaseFunction');\r\nvar Point = require('../point/Point');\r\n\r\n/**\r\n * Returns an array of `quantity` Points where each point is taken from the given Line,\r\n * spaced out according to the ease function specified.\r\n * \r\n * ```javascript\r\n * const line = new Phaser.Geom.Line(100, 300, 700, 300);\r\n * const points = Phaser.Geom.Line.GetEasedPoints(line, 'sine.out', 32)\r\n * ```\r\n * \r\n * In the above example, the `points` array will contain 32 points spread-out across\r\n * the length of `line`, where the position of each point is determined by the `Sine.out`\r\n * ease function.\r\n * \r\n * You can optionally provide a collinear threshold. In this case, the resulting points\r\n * are checked against each other, and if they are `< collinearThreshold` distance apart,\r\n * they are dropped from the results. This can help avoid lots of clustered points at\r\n * far ends of the line with tightly-packed eases such as Quartic. Leave the value set\r\n * to zero to skip this check.\r\n * \r\n * Note that if you provide a collinear threshold, the resulting array may not always\r\n * contain `quantity` points.\r\n *\r\n * @function Phaser.Geom.Line.GetEasedPoints\r\n * @since 3.23.0\r\n *\r\n * @generic {Phaser.Geom.Point[]} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Line} line - The Line object.\r\n * @param {(string|function)} ease - The ease to use. This can be either a string from the EaseMap, or a custom function.\r\n * @param {integer} quantity - The number of points to return. Note that if you provide a `collinearThreshold`, the resulting array may not always contain this number of points.\r\n * @param {number} [collinearThreshold=0] - An optional threshold. The final array is reduced so that each point is spaced out at least this distance apart. This helps reduce clustering in noisey eases.\r\n * @param {number[]} [easeParams] - An optional array of ease parameters to go with the ease.\r\n *\r\n * @return {Phaser.Geom.Point[]} An array of Geom.Points containing the coordinates of the points on the line.\r\n */\r\nvar GetEasedPoints = function (line, ease, quantity, collinearThreshold, easeParams)\r\n{\r\n    if (collinearThreshold === undefined) { collinearThreshold = 0; }\r\n    if (easeParams === undefined) { easeParams = []; }\r\n\r\n    var results = [];\r\n\r\n    var x1 = line.x1;\r\n    var y1 = line.y1;\r\n\r\n    var spaceX = line.x2 - x1;\r\n    var spaceY = line.y2 - y1;\r\n\r\n    var easeFunc = GetEaseFunction(ease, easeParams);\r\n\r\n    var i;\r\n    var v;\r\n    var q = quantity - 1;\r\n\r\n    for (i = 0; i < q; i++)\r\n    {\r\n        v = easeFunc(i / q);\r\n\r\n        results.push(new Point(x1 + (spaceX * v), y1 + (spaceY * v)));\r\n    }\r\n\r\n    //  Always include the end of the line\r\n    v = easeFunc(1);\r\n\r\n    results.push(new Point(x1 + (spaceX * v), y1 + (spaceY * v)));\r\n\r\n    //  Remove collinear parts\r\n    if (collinearThreshold > 0)\r\n    {\r\n        var prevPoint = results[0];\r\n\r\n        //  Store the new results here\r\n        var sortedResults = [ prevPoint ];\r\n\r\n        for (i = 1; i < results.length - 1; i++)\r\n        {\r\n            var point = results[i];\r\n\r\n            if (DistanceBetweenPoints(prevPoint, point) >= collinearThreshold)\r\n            {\r\n                sortedResults.push(point);\r\n                prevPoint = point;\r\n            }\r\n        }\r\n\r\n        //  Top and tail\r\n        var endPoint = results[results.length - 1];\r\n\r\n        if (DistanceBetweenPoints(prevPoint, endPoint) < collinearThreshold)\r\n        {\r\n            sortedResults.pop();\r\n        }\r\n\r\n        sortedResults.push(endPoint);\r\n\r\n        return sortedResults;\r\n    }\r\n    else\r\n    {\r\n        return results;\r\n    }\r\n};\r\n\r\nmodule.exports = GetEasedPoints;\r\n"},"lineCount":115}},"error":null,"hash":"462a475ddaa82dd1809f2d9b7e60f6df","cacheData":{"env":{}}}