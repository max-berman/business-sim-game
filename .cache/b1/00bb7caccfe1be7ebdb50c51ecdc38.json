{"id":"FKuu","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000}],"generated":{"js":"var t={setAngularVelocity:function(t){return this.body.angularVelocity=t,this},setAngularAcceleration:function(t){return this.body.angularAcceleration=t,this},setAngularDrag:function(t){return this.body.angularDrag=t,this}};module.exports=t;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":13,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":13,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":13,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":29,"column":0},"generated":{"line":1,"column":7}},{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":29,"column":0},"generated":{"line":1,"column":26}},{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":29,"column":0},"generated":{"line":1,"column":35}},{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":33,"column":0},"generated":{"line":1,"column":38}},{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":31,"column":0},"generated":{"line":1,"column":45}},{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":31,"column":0},"generated":{"line":1,"column":50}},{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":31,"column":0},"generated":{"line":1,"column":55}},{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":31,"column":0},"generated":{"line":1,"column":71}},{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":33,"column":0},"generated":{"line":1,"column":73}},{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":50,"column":0},"generated":{"line":1,"column":79}},{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":50,"column":0},"generated":{"line":1,"column":102}},{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":50,"column":0},"generated":{"line":1,"column":111}},{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":54,"column":0},"generated":{"line":1,"column":114}},{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":52,"column":0},"generated":{"line":1,"column":121}},{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":52,"column":0},"generated":{"line":1,"column":126}},{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":52,"column":0},"generated":{"line":1,"column":131}},{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":52,"column":0},"generated":{"line":1,"column":151}},{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":54,"column":0},"generated":{"line":1,"column":153}},{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":67,"column":0},"generated":{"line":1,"column":159}},{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":67,"column":0},"generated":{"line":1,"column":174}},{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":67,"column":0},"generated":{"line":1,"column":183}},{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":71,"column":0},"generated":{"line":1,"column":186}},{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":69,"column":0},"generated":{"line":1,"column":193}},{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":69,"column":0},"generated":{"line":1,"column":198}},{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":69,"column":0},"generated":{"line":1,"column":203}},{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":69,"column":0},"generated":{"line":1,"column":215}},{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":71,"column":0},"generated":{"line":1,"column":217}},{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":76,"column":0},"generated":{"line":1,"column":224}},{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":76,"column":0},"generated":{"line":1,"column":231}},{"source":"../node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":76,"column":0},"generated":{"line":1,"column":239}}],"sources":{"../node_modules/phaser/src/physics/arcade/components/Angular.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Provides methods used for setting the angular acceleration properties of an Arcade Physics Body.\r\n *\r\n * @namespace Phaser.Physics.Arcade.Components.Angular\r\n * @since 3.0.0\r\n */\r\nvar Angular = {\r\n\r\n    /**\r\n     * Sets the angular velocity of the body.\r\n     * \r\n     * In Arcade Physics, bodies cannot rotate. They are always axis-aligned.\r\n     * However, they can have angular motion, which is passed on to the Game Object bound to the body,\r\n     * causing them to visually rotate, even though the body remains axis-aligned.\r\n     *\r\n     * @method Phaser.Physics.Arcade.Components.Angular#setAngularVelocity\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} value - The amount of angular velocity.\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    setAngularVelocity: function (value)\r\n    {\r\n        this.body.angularVelocity = value;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the angular acceleration of the body.\r\n     * \r\n     * In Arcade Physics, bodies cannot rotate. They are always axis-aligned.\r\n     * However, they can have angular motion, which is passed on to the Game Object bound to the body,\r\n     * causing them to visually rotate, even though the body remains axis-aligned.\r\n     *\r\n     * @method Phaser.Physics.Arcade.Components.Angular#setAngularAcceleration\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} value - The amount of angular acceleration.\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    setAngularAcceleration: function (value)\r\n    {\r\n        this.body.angularAcceleration = value;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the angular drag of the body. Drag is applied to the current velocity, providing a form of deceleration.\r\n     *\r\n     * @method Phaser.Physics.Arcade.Components.Angular#setAngularDrag\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} value - The amount of drag.\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    setAngularDrag: function (value)\r\n    {\r\n        this.body.angularDrag = value;\r\n\r\n        return this;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Angular;\r\n"},"lineCount":null}},"error":null,"hash":"ee19ebbe5bfadfefa43a9af654b22778","cacheData":{"env":{}}}