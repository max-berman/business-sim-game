{"id":"yktY","dependencies":[{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/package.json","includedInParent":true,"mtime":1591200297000},{"name":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/package.json","includedInParent":true,"mtime":1590485515000},{"name":"../../renderer/BlendModes","loc":{"line":7,"column":25},"parent":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/gameobjects/components/BlendMode.js","resolved":"/Users/maxie/Dev/code-challenge/adv-capitalist/node_modules/phaser/src/renderer/BlendModes.js"}],"generated":{"js":"var e=require(\"../../renderer/BlendModes\"),n={_blendMode:e.NORMAL,blendMode:{get:function(){return this._blendMode},set:function(n){\"string\"==typeof n&&(n=e[n]),(n|=0)>=-1&&(this._blendMode=n)}},setBlendMode:function(e){return this.blendMode=e,this}};module.exports=n;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":7,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":7,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":7,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":7,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":17,"column":0},"generated":{"line":1,"column":43}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":17,"column":0},"generated":{"line":1,"column":45}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":28,"column":0},"generated":{"line":1,"column":46}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":28,"column":0},"generated":{"line":1,"column":57}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":28,"column":0},"generated":{"line":1,"column":59}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":55,"column":0},"generated":{"line":1,"column":66}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":55,"column":0},"generated":{"line":1,"column":76}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":57,"column":0},"generated":{"line":1,"column":77}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":57,"column":0},"generated":{"line":1,"column":81}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":59,"column":0},"generated":{"line":1,"column":92}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":59,"column":0},"generated":{"line":1,"column":99}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":59,"column":0},"generated":{"line":1,"column":104}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":62,"column":0},"generated":{"line":1,"column":116}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":62,"column":0},"generated":{"line":1,"column":120}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":62,"column":0},"generated":{"line":1,"column":129}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":64,"column":0},"generated":{"line":1,"column":132}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":64,"column":0},"generated":{"line":1,"column":149}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":66,"column":0},"generated":{"line":1,"column":153}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":66,"column":0},"generated":{"line":1,"column":155}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":66,"column":0},"generated":{"line":1,"column":157}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":69,"column":0},"generated":{"line":1,"column":162}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":69,"column":0},"generated":{"line":1,"column":165}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":71,"column":0},"generated":{"line":1,"column":170}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":73,"column":0},"generated":{"line":1,"column":174}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":73,"column":0},"generated":{"line":1,"column":179}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":73,"column":0},"generated":{"line":1,"column":190}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":107,"column":0},"generated":{"line":1,"column":195}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":107,"column":0},"generated":{"line":1,"column":208}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":107,"column":0},"generated":{"line":1,"column":217}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":111,"column":0},"generated":{"line":1,"column":220}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":109,"column":0},"generated":{"line":1,"column":227}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":109,"column":0},"generated":{"line":1,"column":232}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":109,"column":0},"generated":{"line":1,"column":242}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":111,"column":0},"generated":{"line":1,"column":244}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":116,"column":0},"generated":{"line":1,"column":251}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":116,"column":0},"generated":{"line":1,"column":258}},{"source":"../node_modules/phaser/src/gameobjects/components/BlendMode.js","original":{"line":116,"column":0},"generated":{"line":1,"column":266}}],"sources":{"../node_modules/phaser/src/gameobjects/components/BlendMode.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar BlendModes = require('../../renderer/BlendModes');\r\n\r\n/**\r\n * Provides methods used for setting the blend mode of a Game Object.\r\n * Should be applied as a mixin and not used directly.\r\n *\r\n * @namespace Phaser.GameObjects.Components.BlendMode\r\n * @since 3.0.0\r\n */\r\n\r\nvar BlendMode = {\r\n\r\n    /**\r\n     * Private internal value. Holds the current blend mode.\r\n     * \r\n     * @name Phaser.GameObjects.Components.BlendMode#_blendMode\r\n     * @type {integer}\r\n     * @private\r\n     * @default 0\r\n     * @since 3.0.0\r\n     */\r\n    _blendMode: BlendModes.NORMAL,\r\n\r\n    /**\r\n     * Sets the Blend Mode being used by this Game Object.\r\n     *\r\n     * This can be a const, such as `Phaser.BlendModes.SCREEN`, or an integer, such as 4 (for Overlay)\r\n     *\r\n     * Under WebGL only the following Blend Modes are available:\r\n     *\r\n     * * ADD\r\n     * * MULTIPLY\r\n     * * SCREEN\r\n     * * ERASE\r\n     *\r\n     * Canvas has more available depending on browser support.\r\n     *\r\n     * You can also create your own custom Blend Modes in WebGL.\r\n     *\r\n     * Blend modes have different effects under Canvas and WebGL, and from browser to browser, depending\r\n     * on support. Blend Modes also cause a WebGL batch flush should it encounter a new blend mode. For these\r\n     * reasons try to be careful about the construction of your Scene and the frequency of which blend modes\r\n     * are used.\r\n     *\r\n     * @name Phaser.GameObjects.Components.BlendMode#blendMode\r\n     * @type {(Phaser.BlendModes|string)}\r\n     * @since 3.0.0\r\n     */\r\n    blendMode: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._blendMode;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            if (typeof value === 'string')\r\n            {\r\n                value = BlendModes[value];\r\n            }\r\n\r\n            value |= 0;\r\n\r\n            if (value >= -1)\r\n            {\r\n                this._blendMode = value;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * Sets the Blend Mode being used by this Game Object.\r\n     *\r\n     * This can be a const, such as `Phaser.BlendModes.SCREEN`, or an integer, such as 4 (for Overlay)\r\n     *\r\n     * Under WebGL only the following Blend Modes are available:\r\n     *\r\n     * * ADD\r\n     * * MULTIPLY\r\n     * * SCREEN\r\n     * * ERASE (only works when rendering to a framebuffer, like a Render Texture)\r\n     *\r\n     * Canvas has more available depending on browser support.\r\n     *\r\n     * You can also create your own custom Blend Modes in WebGL.\r\n     *\r\n     * Blend modes have different effects under Canvas and WebGL, and from browser to browser, depending\r\n     * on support. Blend Modes also cause a WebGL batch flush should it encounter a new blend mode. For these\r\n     * reasons try to be careful about the construction of your Scene and the frequency in which blend modes\r\n     * are used.\r\n     *\r\n     * @method Phaser.GameObjects.Components.BlendMode#setBlendMode\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(string|Phaser.BlendModes)} value - The BlendMode value. Either a string or a CONST.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setBlendMode: function (value)\r\n    {\r\n        this.blendMode = value;\r\n\r\n        return this;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = BlendMode;\r\n"},"lineCount":null}},"error":null,"hash":"10414154279eb6e4e33bcd74b91d9dcc","cacheData":{"env":{}}}